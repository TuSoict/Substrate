{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19","program":"/home/anhminh/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=76938fce2690041f","-C","extra-filename=-76938fce2690041f","--out-dir","/home/anhminh/Rust/rust_present/target/rls/debug/deps","-L","dependency=/home/anhminh/Rust/rust_present/target/rls/debug/deps","--extern","futures_core=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libfutures_core-c309625e4d4627eb.rmeta","--extern","futures_io=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libfutures_io-4e4fbc84a7e327aa.rmeta","--extern","futures_task=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libfutures_task-ab36dd707db83c5a.rmeta","--extern","memchr=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libmemchr-6aaab64db53d1d54.rmeta","--extern","pin_project_lite=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libpin_project_lite-9947e3c941c54187.rmeta","--extern","pin_utils=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libpin_utils-994c81402be3894d.rmeta","--extern","slab=/home/anhminh/Rust/rust_present/target/rls/debug/deps/libslab-e524a907a17053b3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/anhminh/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/anhminh/Rust/rust_present/target/rls/debug/deps/libfutures_util-76938fce2690041f.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[9159671346177294095,0]},"crate_root":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src","external_crates":[{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":19,"id":{"name":"futures_core","disambiguator":[14729302581804274812,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":20,"id":{"name":"pin_utils","disambiguator":[2380289198110952421,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","num":21,"id":{"name":"futures_task","disambiguator":[8831270248877998680,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[13850998262773622920,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","num":23,"id":{"name":"slab","disambiguator":[11538001767216085039,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","num":24,"id":{"name":"futures_io","disambiguator":[3203426204818225326,0]}},{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","num":25,"id":{"name":"memchr","disambiguator":[2512208809680259524,0]}}],"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":169},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":7},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12186},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":19,"index":21},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12107,"byte_end":12116,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":19,"index":24},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12118,"byte_end":12132,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":19,"index":27},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":19,"index":44},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":21,"index":237},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":21,"index":203},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":21,"index":258},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9248},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18054,"byte_end":18065,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":8746},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8660},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9089},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8904},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8844},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8954},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9149},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9016},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9197},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8794},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9248},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12617,"byte_end":12628,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12828,"byte_end":12834,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12836,"byte_end":12846,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9584},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9731},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9914},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9853},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9284},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10036},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9975},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10098},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9792},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9658},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9412},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9533},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10171},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10229},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10235},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10241},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10254},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10272},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10311},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10345},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10447},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10492},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10549},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10618},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13874,"byte_end":13882,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13884,"byte_end":13891,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1351},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10699},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14043,"byte_end":14053,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10707},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14055,"byte_end":14064,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10783},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10828},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10885},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10954},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1558},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14297,"byte_end":14309,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14311,"byte_end":14321,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11035},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1654},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14486,"byte_end":14495,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11043},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14497,"byte_end":14505,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11049},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15588},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14716,"byte_end":14727,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15584},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14729,"byte_end":14746,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15546},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14748,"byte_end":14757,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15599},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15600},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14849,"byte_end":14858,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":12186},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":44},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":90},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147280,"byte_end":147289,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":19,"index":93},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147291,"byte_end":147305,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":19,"index":110},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147339,"byte_end":147350,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":19,"index":96},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147352,"byte_end":147358,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":19,"index":127},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147360,"byte_end":147369,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12766},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":156063,"byte_end":156069,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12814},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":156246,"byte_end":156257,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13082},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157755,"byte_end":157766,"line_start":224,"line_end":224,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11073},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147485,"byte_end":147490,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11122},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147492,"byte_end":147499,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11231},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147501,"byte_end":147507,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11308},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147509,"byte_end":147514,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11348},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147516,"byte_end":147525,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11387},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147527,"byte_end":147533,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11452},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147535,"byte_end":147544,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12041},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147546,"byte_end":147553,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11568},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147555,"byte_end":147562,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11621},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147564,"byte_end":147568,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11812},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147570,"byte_end":147577,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11874},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147583,"byte_end":147587,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11922},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147589,"byte_end":147596,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11988},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147598,"byte_end":147601,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12120},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147603,"byte_end":147607,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12262},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147609,"byte_end":147615,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12311},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147617,"byte_end":147625,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12180},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147627,"byte_end":147631,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12221},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147633,"byte_end":147640,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12141},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147642,"byte_end":147650,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12857},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147652,"byte_end":147656,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12128},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147658,"byte_end":147672,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12365},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147678,"byte_end":147682,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12404},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147684,"byte_end":147693,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":3718},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147695,"byte_end":147704,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11913},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147706,"byte_end":147718,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12478},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147720,"byte_end":147724,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12586},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147726,"byte_end":147735,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12517},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147737,"byte_end":147746,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12643},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147748,"byte_end":147752,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11173},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147754,"byte_end":147759,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12711},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147761,"byte_end":147764,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13082},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147816,"byte_end":147827,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12766},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147878,"byte_end":147884,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12814},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147935,"byte_end":147946,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12926},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148138,"byte_end":148153,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12971},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148155,"byte_end":148163,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13016},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148165,"byte_end":148182,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14442},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305398,"byte_end":305411,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":3921}},{"kind":"Use","ref_id":{"krate":0,"index":4645},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148431,"byte_end":148441,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13121},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148443,"byte_end":148450,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13185},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148452,"byte_end":148459,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13323},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148461,"byte_end":148471,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13254},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148473,"byte_end":148482,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13394},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148484,"byte_end":148494,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13501},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148496,"byte_end":148502,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13432},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148504,"byte_end":148509,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13567},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148511,"byte_end":148517,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13870},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148523,"byte_end":148533,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13917},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148535,"byte_end":148544,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13693},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148546,"byte_end":148555,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13758},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148557,"byte_end":148569,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13824},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148571,"byte_end":148581,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14021},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148583,"byte_end":148590,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13636},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148592,"byte_end":148602,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13628},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148604,"byte_end":148611,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14147},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148617,"byte_end":148629,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5020},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148631,"byte_end":148643,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14216},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148645,"byte_end":148657,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14090},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148659,"byte_end":148668,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14442},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148793,"byte_end":148806,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14290},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148897,"byte_end":148915,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14338},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148917,"byte_end":148928,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14381},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":148930,"byte_end":148950,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13957},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149007,"byte_end":149016,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14000},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149018,"byte_end":149032,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14001},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149018,"byte_end":149032,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5177},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149089,"byte_end":149093,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14461},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149095,"byte_end":149099,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5212},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149138,"byte_end":149144,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14470},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149146,"byte_end":149152,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149201,"byte_end":149212,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14479},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149214,"byte_end":149224,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5299},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149261,"byte_end":149266,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14488},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149268,"byte_end":149273,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5351},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149308,"byte_end":149312,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14499},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149314,"byte_end":149318,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5395},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149359,"byte_end":149366,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14530},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149368,"byte_end":149375,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5445},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149416,"byte_end":149423,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5437},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149425,"byte_end":149431,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5486},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149486,"byte_end":149500,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14541},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149502,"byte_end":149515,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5529},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149554,"byte_end":149560,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14582},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149562,"byte_end":149568,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5595},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149635,"byte_end":149655,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14620},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149657,"byte_end":149665,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14639},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149667,"byte_end":149685,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5677},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149724,"byte_end":149730,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14708},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149732,"byte_end":149738,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5777},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149916,"byte_end":149930,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14840},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427978,"byte_end":427986,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":14831},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427988,"byte_end":427992,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":14832},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427988,"byte_end":427992,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":14811},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427994,"byte_end":428001,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":14812},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427994,"byte_end":428001,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":14801},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":428003,"byte_end":428013,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":14820},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":428015,"byte_end":428025,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":6135},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150130,"byte_end":150146,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":6295},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150333,"byte_end":150343,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14847},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150345,"byte_end":150354,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15588},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150522,"byte_end":150533,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15584},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150535,"byte_end":150552,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15546},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150554,"byte_end":150563,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15599},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150565,"byte_end":150572,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15600},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150565,"byte_end":150572,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":6366},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150655,"byte_end":150664,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":19,"index":96},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3718},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":127},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5020},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12438},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477191,"byte_end":477198,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":2,"index":42930},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477200,"byte_end":477204,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":2,"index":42966},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477206,"byte_end":477214,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":2,"index":42975},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477216,"byte_end":477230,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":2,"index":12448},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477232,"byte_end":477237,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":237},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477264,"byte_end":477273,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":203},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477275,"byte_end":477289,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":18},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477291,"byte_end":477301,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":15},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477303,"byte_end":477308,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":21},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477310,"byte_end":477320,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":258},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477322,"byte_end":477337,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":378},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477363,"byte_end":477373,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":379},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477397,"byte_end":477411,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":94},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477497,"byte_end":477504,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":122},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477590,"byte_end":477595,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":170},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477682,"byte_end":477691,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":21,"index":407},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477693,"byte_end":477701,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":19,"index":194},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477780,"byte_end":477791,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":0,"index":6489},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477827,"byte_end":477840,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":0,"index":6486},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477842,"byte_end":477850,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6400}},{"kind":"Use","ref_id":{"krate":1,"index":3769},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485722,"byte_end":485727,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":1,"index":10453},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485729,"byte_end":485738,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":1,"index":10558},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485740,"byte_end":485747,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":1,"index":4331},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485749,"byte_end":485759,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":1,"index":3767},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485761,"byte_end":485767,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":1,"index":10572},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485769,"byte_end":485777,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":24,"index":49},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485802,"byte_end":485814,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":24,"index":39},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485816,"byte_end":485825,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":24,"index":47},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485827,"byte_end":485836,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":24,"index":42},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485838,"byte_end":485848,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":14905},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486275,"byte_end":486285,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":14938},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486331,"byte_end":486340,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":14991},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486342,"byte_end":486354,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15001},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486400,"byte_end":486409,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15055},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486456,"byte_end":486466,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15086},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486501,"byte_end":486506,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15135},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486541,"byte_end":486546,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7002},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486580,"byte_end":486584,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15152},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486586,"byte_end":486590,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7047},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486633,"byte_end":486641,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15206},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486643,"byte_end":486650,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15259},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486688,"byte_end":486694,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7151},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486730,"byte_end":486735,"line_start":73,"line_end":73,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7149},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486737,"byte_end":486742,"line_start":73,"line_end":73,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15287},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486784,"byte_end":486791,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15295},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":486826,"byte_end":486831,"line_start":79,"line_end":79,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15308},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487063,"byte_end":487068,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15351},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487101,"byte_end":487105,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15360},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487156,"byte_end":487168,"line_start":95,"line_end":95,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15369},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487213,"byte_end":487222,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15378},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487265,"byte_end":487273,"line_start":101,"line_end":101,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15389},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487320,"byte_end":487329,"line_start":104,"line_end":104,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15399},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487382,"byte_end":487394,"line_start":107,"line_end":107,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15410},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487439,"byte_end":487448,"line_start":110,"line_end":110,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7601},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487486,"byte_end":487492,"line_start":113,"line_end":113,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7599},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487494,"byte_end":487500,"line_start":113,"line_end":113,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15421},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487534,"byte_end":487538,"line_start":116,"line_end":116,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7677},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487572,"byte_end":487576,"line_start":119,"line_end":119,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7675},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487578,"byte_end":487582,"line_start":119,"line_end":119,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15430},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487619,"byte_end":487627,"line_start":122,"line_end":122,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7759},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487629,"byte_end":487641,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":7760},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487629,"byte_end":487641,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15436},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487643,"byte_end":487652,"line_start":122,"line_end":122,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15447},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487686,"byte_end":487690,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15486},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487727,"byte_end":487733,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15493},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487768,"byte_end":487773,"line_start":131,"line_end":131,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15502},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487826,"byte_end":487839,"line_start":134,"line_end":134,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":0,"index":15511},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":487882,"byte_end":487890,"line_start":137,"line_end":137,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":6501}},{"kind":"Use","ref_id":{"krate":24,"index":49},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8000},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":39},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7967},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":47},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7995},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":42},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7984},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8173},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":591090,"byte_end":591106,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":8039}},{"kind":"Use","ref_id":{"krate":0,"index":8094},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":591108,"byte_end":591113,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":8039}},{"kind":"Use","ref_id":{"krate":0,"index":8150},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":591115,"byte_end":591125,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":8039}},{"kind":"Use","ref_id":{"krate":0,"index":8131},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":591127,"byte_end":591142,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":8039}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":17},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6397},{"krate":0,"index":6400},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8018},{"krate":0,"index":8021},{"krate":0,"index":8024},{"krate":0,"index":8027},{"krate":0,"index":8030},{"krate":0,"index":8033},{"krate":0,"index":8036},{"krate":0,"index":8039},{"krate":0,"index":8320},{"krate":0,"index":8382},{"krate":0,"index":8596}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1829}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8615},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8617},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8619},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8612},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8615},{"krate":0,"index":8617},{"krate":0,"index":8619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8660},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8662}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8698},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8701},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8695},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8698},{"krate":0,"index":8701}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12783255,"byte_end":12783264,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8746},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8748}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8794},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8796}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8844},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8847}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8904},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8906}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8954},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":8957}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9016},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":9020}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9089},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9092}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9149},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":9151}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9197},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":9199}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9248},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":44401,"byte_end":44412,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9250}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45415,"byte_end":45421,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45272,"byte_end":45335,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45336,"byte_end":45403,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45795,"byte_end":45805,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45706,"byte_end":45783,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47907,"byte_end":47911,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47638,"byte_end":47712,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47717,"byte_end":47790,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47795,"byte_end":47863,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47868,"byte_end":47895,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48406,"byte_end":48415,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48263,"byte_end":48316,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48321,"byte_end":48324,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48329,"byte_end":48394,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49009,"byte_end":49021,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48597,"byte_end":48655,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48660,"byte_end":48663,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48668,"byte_end":48733,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48738,"byte_end":48741,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48746,"byte_end":48758,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48763,"byte_end":48766,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48771,"byte_end":48864,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48869,"byte_end":48963,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":48968,"byte_end":48997,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49529,"byte_end":49539,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49121,"byte_end":49177,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49182,"byte_end":49185,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49190,"byte_end":49255,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49260,"byte_end":49263,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49268,"byte_end":49280,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49285,"byte_end":49288,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49293,"byte_end":49386,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49391,"byte_end":49483,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49488,"byte_end":49517,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55989,"byte_end":55996,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55799,"byte_end":55861,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55866,"byte_end":55869,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55874,"byte_end":55954,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55959,"byte_end":55977,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29010,"byte_end":29022,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27654,"byte_end":27708,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27713,"byte_end":27716,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27721,"byte_end":27796,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27801,"byte_end":27875,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27880,"byte_end":27954,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27959,"byte_end":28010,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28015,"byte_end":28018,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28023,"byte_end":28098,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28103,"byte_end":28173,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28178,"byte_end":28245,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28250,"byte_end":28325,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28330,"byte_end":28402,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28407,"byte_end":28410,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28415,"byte_end":28479,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28484,"byte_end":28541,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28546,"byte_end":28549,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28554,"byte_end":28568,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28573,"byte_end":28576,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28581,"byte_end":28588,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28593,"byte_end":28634,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28639,"byte_end":28689,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28694,"byte_end":28697,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28702,"byte_end":28736,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28741,"byte_end":28790,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28795,"byte_end":28798,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28803,"byte_end":28852,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28857,"byte_end":28881,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28886,"byte_end":28893,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28898,"byte_end":28948,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28953,"byte_end":28962,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28967,"byte_end":28974,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28979,"byte_end":29002,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30774,"byte_end":30780,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29252,"byte_end":29327,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29332,"byte_end":29355,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29360,"byte_end":29363,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29368,"byte_end":29442,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29447,"byte_end":29520,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29525,"byte_end":29537,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29542,"byte_end":29545,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29550,"byte_end":29614,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29619,"byte_end":29676,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29681,"byte_end":29684,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29689,"byte_end":29703,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29708,"byte_end":29711,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29716,"byte_end":29723,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29728,"byte_end":29769,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29774,"byte_end":29809,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29814,"byte_end":29817,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29822,"byte_end":29851,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29856,"byte_end":29890,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29895,"byte_end":29929,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29934,"byte_end":29937,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29942,"byte_end":29975,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29980,"byte_end":30013,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30018,"byte_end":30027,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30032,"byte_end":30039,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30044,"byte_end":30047,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30052,"byte_end":30059,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30064,"byte_end":30133,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30138,"byte_end":30213,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30218,"byte_end":30249,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30254,"byte_end":30257,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30262,"byte_end":30303,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30308,"byte_end":30343,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30348,"byte_end":30384,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30389,"byte_end":30409,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30414,"byte_end":30417,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30422,"byte_end":30451,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30456,"byte_end":30490,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30495,"byte_end":30529,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30534,"byte_end":30579,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30584,"byte_end":30625,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30630,"byte_end":30637,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30642,"byte_end":30675,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30680,"byte_end":30712,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30717,"byte_end":30726,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30731,"byte_end":30738,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30743,"byte_end":30766,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31942,"byte_end":31947,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31713,"byte_end":31754,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31759,"byte_end":31762,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31767,"byte_end":31842,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31847,"byte_end":31904,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31909,"byte_end":31934,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32407,"byte_end":32418,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32106,"byte_end":32147,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32152,"byte_end":32155,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32160,"byte_end":32219,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32312,"byte_end":32369,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32374,"byte_end":32399,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9284},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78140,"byte_end":78150,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":9286}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":9322},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79124,"byte_end":79129,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9324},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79158,"byte_end":79164,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9326},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79193,"byte_end":79198,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9319},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79091,"byte_end":79101,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9322},{"krate":0,"index":9324},{"krate":0,"index":9326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9369},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84067,"byte_end":84072,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9371},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84101,"byte_end":84107,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9373},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84136,"byte_end":84141,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9366},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84031,"byte_end":84044,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9369},{"krate":0,"index":9371},{"krate":0,"index":9373}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9412},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56975,"byte_end":56985,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9415}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9473},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57233,"byte_end":57246,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9476}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9533},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57514,"byte_end":57530,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9535}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9584},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58118,"byte_end":58125,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9588}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9658},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58365,"byte_end":58371,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9662}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9731},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58621,"byte_end":58628,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9734}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9792},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58836,"byte_end":58842,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9795}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9853},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59061,"byte_end":59070,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9856}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9914},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59342,"byte_end":59352,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9917}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9975},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59725,"byte_end":59730,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9978}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10036},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59971,"byte_end":59977,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":10039}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10098},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60234,"byte_end":60245,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":10102}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10171},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60529,"byte_end":60541,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":10174}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":715},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60831,"byte_end":60843,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60767,"byte_end":60820,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63603,"byte_end":63609,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62231,"byte_end":62289,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62294,"byte_end":62297,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62302,"byte_end":62377,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62382,"byte_end":62452,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62457,"byte_end":62530,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62535,"byte_end":62564,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62569,"byte_end":62572,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62577,"byte_end":62652,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62657,"byte_end":62732,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62737,"byte_end":62784,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62789,"byte_end":62792,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62797,"byte_end":62872,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62877,"byte_end":62903,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62908,"byte_end":62911,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62916,"byte_end":62930,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62935,"byte_end":62938,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62943,"byte_end":62950,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62955,"byte_end":62993,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62998,"byte_end":63001,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63006,"byte_end":63047,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63052,"byte_end":63097,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63102,"byte_end":63144,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63149,"byte_end":63185,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63190,"byte_end":63199,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63204,"byte_end":63211,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63216,"byte_end":63219,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63224,"byte_end":63296,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63301,"byte_end":63312,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63317,"byte_end":63320,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63325,"byte_end":63332,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63337,"byte_end":63375,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63380,"byte_end":63383,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63388,"byte_end":63429,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63434,"byte_end":63480,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63485,"byte_end":63527,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63532,"byte_end":63569,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63574,"byte_end":63583,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63588,"byte_end":63595,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65168,"byte_end":65182,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63800,"byte_end":63917,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63922,"byte_end":63925,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63930,"byte_end":64052,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64057,"byte_end":64107,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64112,"byte_end":64115,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64120,"byte_end":64195,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64200,"byte_end":64275,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64280,"byte_end":64327,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64332,"byte_end":64335,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64340,"byte_end":64415,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64420,"byte_end":64495,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64500,"byte_end":64547,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64552,"byte_end":64555,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64560,"byte_end":64635,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64640,"byte_end":64666,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64671,"byte_end":64674,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64679,"byte_end":64693,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64698,"byte_end":64701,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64706,"byte_end":64713,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64718,"byte_end":64756,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64761,"byte_end":64764,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64769,"byte_end":64810,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64815,"byte_end":64860,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64865,"byte_end":64926,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64931,"byte_end":64963,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64968,"byte_end":64971,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64976,"byte_end":65022,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65027,"byte_end":65088,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65093,"byte_end":65126,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65131,"byte_end":65140,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65145,"byte_end":65152,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65157,"byte_end":65160,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66865,"byte_end":66872,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65416,"byte_end":65472,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65477,"byte_end":65480,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65485,"byte_end":65559,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65564,"byte_end":65625,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65630,"byte_end":65700,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65705,"byte_end":65780,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65785,"byte_end":65820,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65825,"byte_end":65828,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65833,"byte_end":65908,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65913,"byte_end":65988,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65993,"byte_end":66040,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66045,"byte_end":66048,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66053,"byte_end":66128,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66133,"byte_end":66159,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66164,"byte_end":66167,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66172,"byte_end":66186,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66191,"byte_end":66194,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66199,"byte_end":66206,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66211,"byte_end":66249,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66254,"byte_end":66257,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66262,"byte_end":66303,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66308,"byte_end":66354,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66359,"byte_end":66402,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66407,"byte_end":66444,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66449,"byte_end":66458,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66463,"byte_end":66470,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66475,"byte_end":66478,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66483,"byte_end":66556,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66561,"byte_end":66575,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66580,"byte_end":66583,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66588,"byte_end":66595,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66600,"byte_end":66638,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66643,"byte_end":66646,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66651,"byte_end":66692,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66697,"byte_end":66742,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66747,"byte_end":66790,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66795,"byte_end":66831,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66836,"byte_end":66845,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66850,"byte_end":66857,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67962,"byte_end":67970,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67065,"byte_end":67135,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67140,"byte_end":67189,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67194,"byte_end":67197,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67202,"byte_end":67265,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67270,"byte_end":67338,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67343,"byte_end":67416,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67421,"byte_end":67497,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67502,"byte_end":67547,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67552,"byte_end":67555,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67560,"byte_end":67635,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67640,"byte_end":67666,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67671,"byte_end":67674,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67679,"byte_end":67693,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67698,"byte_end":67701,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67706,"byte_end":67713,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67718,"byte_end":67756,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67761,"byte_end":67764,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67769,"byte_end":67810,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67815,"byte_end":67866,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67871,"byte_end":67928,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67933,"byte_end":67942,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67947,"byte_end":67954,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68266,"byte_end":68273,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68146,"byte_end":68204,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68209,"byte_end":68258,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69828,"byte_end":69836,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68447,"byte_end":68516,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68521,"byte_end":68595,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68600,"byte_end":68603,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68608,"byte_end":68683,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68688,"byte_end":68758,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68763,"byte_end":68828,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68833,"byte_end":68899,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68904,"byte_end":68938,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68943,"byte_end":68946,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68951,"byte_end":69026,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69031,"byte_end":69057,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69062,"byte_end":69065,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69070,"byte_end":69084,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69089,"byte_end":69092,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69097,"byte_end":69104,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69109,"byte_end":69147,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69152,"byte_end":69155,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69160,"byte_end":69201,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69206,"byte_end":69251,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69256,"byte_end":69331,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69336,"byte_end":69372,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69377,"byte_end":69386,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69391,"byte_end":69398,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69403,"byte_end":69406,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69411,"byte_end":69487,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69492,"byte_end":69503,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69508,"byte_end":69511,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69516,"byte_end":69523,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69528,"byte_end":69566,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69571,"byte_end":69574,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69579,"byte_end":69620,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69625,"byte_end":69671,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69676,"byte_end":69752,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69757,"byte_end":69794,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69799,"byte_end":69808,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69813,"byte_end":69820,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71457,"byte_end":71464,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70090,"byte_end":70155,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70160,"byte_end":70232,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70237,"byte_end":70240,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70245,"byte_end":70320,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70325,"byte_end":70395,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70400,"byte_end":70465,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70470,"byte_end":70546,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70551,"byte_end":70569,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70574,"byte_end":70577,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70582,"byte_end":70657,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70662,"byte_end":70688,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70693,"byte_end":70696,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70701,"byte_end":70715,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70720,"byte_end":70723,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70728,"byte_end":70735,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70740,"byte_end":70778,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70783,"byte_end":70786,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70791,"byte_end":70832,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70837,"byte_end":70883,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70888,"byte_end":70963,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70968,"byte_end":71005,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71010,"byte_end":71019,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71024,"byte_end":71031,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71036,"byte_end":71039,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71044,"byte_end":71117,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71122,"byte_end":71136,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71141,"byte_end":71144,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71149,"byte_end":71156,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71161,"byte_end":71199,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71204,"byte_end":71207,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71212,"byte_end":71253,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71258,"byte_end":71303,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71308,"byte_end":71382,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71387,"byte_end":71423,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71428,"byte_end":71437,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71442,"byte_end":71449,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72440,"byte_end":72450,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71713,"byte_end":71786,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71791,"byte_end":71794,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71799,"byte_end":71874,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71879,"byte_end":71952,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71957,"byte_end":72026,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72031,"byte_end":72084,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72089,"byte_end":72092,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72097,"byte_end":72111,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72116,"byte_end":72119,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72124,"byte_end":72131,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72136,"byte_end":72177,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72182,"byte_end":72220,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72225,"byte_end":72228,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72233,"byte_end":72275,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72280,"byte_end":72361,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72366,"byte_end":72406,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72411,"byte_end":72420,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72425,"byte_end":72432,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73376,"byte_end":73387,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72649,"byte_end":72720,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72725,"byte_end":72728,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72733,"byte_end":72808,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72813,"byte_end":72886,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72891,"byte_end":72960,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72965,"byte_end":73019,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73024,"byte_end":73027,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73032,"byte_end":73046,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73051,"byte_end":73054,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73059,"byte_end":73066,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73071,"byte_end":73112,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73117,"byte_end":73155,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73160,"byte_end":73163,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73168,"byte_end":73211,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73216,"byte_end":73296,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73301,"byte_end":73342,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73347,"byte_end":73356,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73361,"byte_end":73368,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73772,"byte_end":73783,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73591,"byte_end":73666,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73671,"byte_end":73700,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73705,"byte_end":73708,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73713,"byte_end":73764,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74962,"byte_end":74980,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74018,"byte_end":74093,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74098,"byte_end":74121,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74126,"byte_end":74129,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74134,"byte_end":74206,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74211,"byte_end":74284,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74289,"byte_end":74303,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74308,"byte_end":74311,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74316,"byte_end":74386,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74391,"byte_end":74409,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74414,"byte_end":74417,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74422,"byte_end":74436,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74441,"byte_end":74444,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74449,"byte_end":74456,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74461,"byte_end":74502,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74507,"byte_end":74545,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74550,"byte_end":74596,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74601,"byte_end":74604,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74609,"byte_end":74669,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74674,"byte_end":74753,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74758,"byte_end":74761,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74766,"byte_end":74823,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74828,"byte_end":74880,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74885,"byte_end":74928,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74933,"byte_end":74942,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74947,"byte_end":74954,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76071,"byte_end":76085,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75240,"byte_end":75311,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75316,"byte_end":75353,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75358,"byte_end":75407,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75412,"byte_end":75415,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75420,"byte_end":75489,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75494,"byte_end":75567,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75572,"byte_end":75642,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75647,"byte_end":75665,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75670,"byte_end":75673,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75678,"byte_end":75746,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75751,"byte_end":75754,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75759,"byte_end":75773,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75778,"byte_end":75781,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75786,"byte_end":75793,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75798,"byte_end":75836,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75841,"byte_end":75844,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75849,"byte_end":75890,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75895,"byte_end":75947,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75952,"byte_end":75999,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76004,"byte_end":76037,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76042,"byte_end":76051,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76056,"byte_end":76063,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77340,"byte_end":77351,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76639,"byte_end":76692,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76697,"byte_end":76733,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76738,"byte_end":76741,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76746,"byte_end":76795,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76800,"byte_end":76867,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76872,"byte_end":76885,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76890,"byte_end":76893,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76898,"byte_end":76912,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76917,"byte_end":76920,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76925,"byte_end":76932,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76937,"byte_end":76996,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77001,"byte_end":77004,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77009,"byte_end":77028,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77033,"byte_end":77051,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77056,"byte_end":77128,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77133,"byte_end":77165,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77170,"byte_end":77177,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77182,"byte_end":77258,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77263,"byte_end":77266,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77271,"byte_end":77320,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77325,"byte_end":77332,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77610,"byte_end":77624,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77507,"byte_end":77580,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77585,"byte_end":77602,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10229},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85793,"byte_end":85797,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10231}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85659,"byte_end":85696,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85714,"byte_end":85781,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86339,"byte_end":86343,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85902,"byte_end":85970,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85971,"byte_end":85974,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85975,"byte_end":86038,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86039,"byte_end":86042,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86043,"byte_end":86057,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86058,"byte_end":86061,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86062,"byte_end":86069,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86070,"byte_end":86111,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86112,"byte_end":86136,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86137,"byte_end":86140,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86141,"byte_end":86173,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86174,"byte_end":86201,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86202,"byte_end":86205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86206,"byte_end":86243,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86244,"byte_end":86268,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86269,"byte_end":86276,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86277,"byte_end":86313,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86314,"byte_end":86323,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86324,"byte_end":86331,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10235},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87170,"byte_end":87177,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10237}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87031,"byte_end":87073,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87091,"byte_end":87158,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":858},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87696,"byte_end":87703,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87318,"byte_end":87398,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87399,"byte_end":87412,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87413,"byte_end":87416,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87417,"byte_end":87479,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87480,"byte_end":87483,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87484,"byte_end":87498,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87499,"byte_end":87502,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87503,"byte_end":87516,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87517,"byte_end":87558,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87559,"byte_end":87583,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87584,"byte_end":87587,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87588,"byte_end":87623,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87624,"byte_end":87650,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87651,"byte_end":87670,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87671,"byte_end":87680,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87681,"byte_end":87688,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10243},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88475,"byte_end":88481,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10241},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88440,"byte_end":88470,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10246},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88548,"byte_end":88552,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10241},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88505,"byte_end":88543,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10249},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88714,"byte_end":88718,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10241},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88571,"byte_end":88637,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88642,"byte_end":88709,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10241},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88411,"byte_end":88420,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":10243},{"krate":0,"index":10246},{"krate":0,"index":10249}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88289,"byte_end":88326,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88327,"byte_end":88330,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88331,"byte_end":88384,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89239,"byte_end":89249,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88778,"byte_end":88815,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88816,"byte_end":88819,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88820,"byte_end":88834,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88835,"byte_end":88838,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88839,"byte_end":88846,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88847,"byte_end":88888,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88889,"byte_end":88913,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88914,"byte_end":88939,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88940,"byte_end":88943,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88944,"byte_end":88993,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88994,"byte_end":89015,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89016,"byte_end":89068,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89069,"byte_end":89104,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89105,"byte_end":89160,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89161,"byte_end":89213,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89214,"byte_end":89223,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89224,"byte_end":89231,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89690,"byte_end":89700,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89392,"byte_end":89477,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89482,"byte_end":89553,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89558,"byte_end":89631,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89636,"byte_end":89664,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89669,"byte_end":89678,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":90048,"byte_end":90059,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89928,"byte_end":89994,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89999,"byte_end":90022,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":90027,"byte_end":90036,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10256},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91684,"byte_end":91690,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10254},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91649,"byte_end":91679,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10259},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91757,"byte_end":91761,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10254},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91714,"byte_end":91752,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10262},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91969,"byte_end":91973,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10254},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91776,"byte_end":91845,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91850,"byte_end":91920,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91925,"byte_end":91964,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10254},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91614,"byte_end":91626,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":10256},{"krate":0,"index":10259},{"krate":0,"index":10262}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91474,"byte_end":91525,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91526,"byte_end":91529,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":91530,"byte_end":91587,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":957},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92087,"byte_end":92101,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92039,"byte_end":92079,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92588,"byte_end":92598,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92279,"byte_end":92364,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92369,"byte_end":92440,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92445,"byte_end":92529,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92534,"byte_end":92562,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92567,"byte_end":92576,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92948,"byte_end":92959,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92825,"byte_end":92894,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92899,"byte_end":92922,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92927,"byte_end":92936,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10272},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95170,"byte_end":95182,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10274}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96300,"byte_end":96306,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1036}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96180,"byte_end":96220,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96221,"byte_end":96288,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96893,"byte_end":96900,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96357,"byte_end":96428,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96429,"byte_end":96432,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96433,"byte_end":96499,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96500,"byte_end":96503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96504,"byte_end":96518,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96519,"byte_end":96522,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96523,"byte_end":96530,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96531,"byte_end":96572,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96573,"byte_end":96606,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96607,"byte_end":96646,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96647,"byte_end":96650,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96651,"byte_end":96708,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96709,"byte_end":96752,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96753,"byte_end":96758,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96759,"byte_end":96762,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96763,"byte_end":96804,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96805,"byte_end":96867,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96868,"byte_end":96877,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96878,"byte_end":96885,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10311},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":97834,"byte_end":97847,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10313}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101255,"byte_end":101269,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100067,"byte_end":100140,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100141,"byte_end":100265,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100266,"byte_end":100269,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100270,"byte_end":100283,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100284,"byte_end":100287,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100288,"byte_end":100355,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100356,"byte_end":100359,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100360,"byte_end":100526,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100527,"byte_end":100652,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100653,"byte_end":100656,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100657,"byte_end":100671,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100672,"byte_end":100675,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100676,"byte_end":100683,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100684,"byte_end":100725,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100726,"byte_end":100750,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100751,"byte_end":100754,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100755,"byte_end":100807,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100808,"byte_end":100841,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100842,"byte_end":100845,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100846,"byte_end":100907,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100908,"byte_end":100938,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100939,"byte_end":100948,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100949,"byte_end":100956,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100957,"byte_end":100960,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100961,"byte_end":100985,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100986,"byte_end":100989,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100990,"byte_end":100997,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":100998,"byte_end":101039,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101040,"byte_end":101075,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101076,"byte_end":101123,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101124,"byte_end":101140,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101141,"byte_end":101200,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101201,"byte_end":101229,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101230,"byte_end":101239,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101240,"byte_end":101247,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10345},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101692,"byte_end":101697,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101541,"byte_end":101588,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101613,"byte_end":101680,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101820,"byte_end":101830,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101737,"byte_end":101794,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101799,"byte_end":101808,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102496,"byte_end":102501,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102250,"byte_end":102310,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102311,"byte_end":102314,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102315,"byte_end":102329,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102330,"byte_end":102333,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102334,"byte_end":102341,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102342,"byte_end":102383,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102384,"byte_end":102408,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102409,"byte_end":102412,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102413,"byte_end":102442,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102443,"byte_end":102470,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102471,"byte_end":102480,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102481,"byte_end":102488,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102836,"byte_end":102838,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102570,"byte_end":102637,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102638,"byte_end":102641,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102642,"byte_end":102656,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102657,"byte_end":102660,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102661,"byte_end":102668,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102669,"byte_end":102710,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102711,"byte_end":102735,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102736,"byte_end":102739,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102740,"byte_end":102778,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102779,"byte_end":102810,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102811,"byte_end":102820,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102821,"byte_end":102828,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103169,"byte_end":103172,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102902,"byte_end":102968,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102969,"byte_end":102972,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102973,"byte_end":102987,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102988,"byte_end":102991,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102992,"byte_end":102999,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103000,"byte_end":103041,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103042,"byte_end":103066,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103067,"byte_end":103070,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103071,"byte_end":103110,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103111,"byte_end":103143,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103144,"byte_end":103153,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":103154,"byte_end":103161,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10447},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105458,"byte_end":105462,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10450},{"krate":0,"index":10451}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10492},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105528,"byte_end":105533,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10549},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105605,"byte_end":105610,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10554},{"krate":0,"index":10555},{"krate":0,"index":10556},{"krate":0,"index":10557}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10618},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105688,"byte_end":105693,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10624},{"krate":0,"index":10625},{"krate":0,"index":10626},{"krate":0,"index":10627},{"krate":0,"index":10628}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106308,"byte_end":106312,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105731,"byte_end":105802,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105803,"byte_end":105806,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105807,"byte_end":105878,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105879,"byte_end":105954,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105955,"byte_end":105958,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":105959,"byte_end":106028,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106029,"byte_end":106055,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106056,"byte_end":106059,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106060,"byte_end":106074,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106075,"byte_end":106078,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106079,"byte_end":106086,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106087,"byte_end":106128,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106129,"byte_end":106153,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106154,"byte_end":106157,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106158,"byte_end":106182,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106183,"byte_end":106207,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106208,"byte_end":106242,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106243,"byte_end":106246,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106247,"byte_end":106282,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106283,"byte_end":106292,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106293,"byte_end":106300,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106858,"byte_end":106863,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106519,"byte_end":106571,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106572,"byte_end":106575,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106576,"byte_end":106590,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106591,"byte_end":106594,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106595,"byte_end":106602,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106603,"byte_end":106644,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106645,"byte_end":106669,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106670,"byte_end":106673,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106674,"byte_end":106698,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106699,"byte_end":106723,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106724,"byte_end":106748,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106749,"byte_end":106788,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106789,"byte_end":106792,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106793,"byte_end":106832,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106833,"byte_end":106842,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":106843,"byte_end":106850,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1203},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107525,"byte_end":107530,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107155,"byte_end":107207,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107208,"byte_end":107211,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107212,"byte_end":107226,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107227,"byte_end":107230,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107231,"byte_end":107238,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107239,"byte_end":107280,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107281,"byte_end":107305,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107306,"byte_end":107309,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107310,"byte_end":107334,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107335,"byte_end":107359,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107360,"byte_end":107384,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107385,"byte_end":107409,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107410,"byte_end":107452,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107453,"byte_end":107456,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107457,"byte_end":107499,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107500,"byte_end":107509,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107510,"byte_end":107517,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108295,"byte_end":108300,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107894,"byte_end":107946,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107947,"byte_end":107950,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107951,"byte_end":107965,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107966,"byte_end":107969,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107970,"byte_end":107977,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":107978,"byte_end":108019,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108020,"byte_end":108044,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108045,"byte_end":108048,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108049,"byte_end":108073,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108074,"byte_end":108098,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108099,"byte_end":108123,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108124,"byte_end":108148,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108149,"byte_end":108173,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108174,"byte_end":108219,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108220,"byte_end":108223,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108224,"byte_end":108269,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108270,"byte_end":108279,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":108280,"byte_end":108287,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":109660,"byte_end":109667,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1291}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":109539,"byte_end":109606,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":109607,"byte_end":109648,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1302},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111762,"byte_end":111770,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110476,"byte_end":110556,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110557,"byte_end":110567,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110568,"byte_end":110571,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110572,"byte_end":110651,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110652,"byte_end":110732,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110733,"byte_end":110751,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110752,"byte_end":110755,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110756,"byte_end":110833,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110834,"byte_end":110891,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110892,"byte_end":110895,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110896,"byte_end":110910,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110911,"byte_end":110914,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110915,"byte_end":110997,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110998,"byte_end":111082,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111083,"byte_end":111167,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111168,"byte_end":111171,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111172,"byte_end":111241,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111242,"byte_end":111245,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111246,"byte_end":111314,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111315,"byte_end":111318,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111319,"byte_end":111396,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111397,"byte_end":111478,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111479,"byte_end":111482,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111483,"byte_end":111497,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111498,"byte_end":111501,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111502,"byte_end":111509,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111510,"byte_end":111551,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111552,"byte_end":111586,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111587,"byte_end":111590,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111591,"byte_end":111628,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111629,"byte_end":111632,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111633,"byte_end":111680,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111681,"byte_end":111684,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111685,"byte_end":111736,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111737,"byte_end":111746,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":111747,"byte_end":111754,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10699},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114223,"byte_end":114229,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10702}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114085,"byte_end":114126,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114127,"byte_end":114194,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1351},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116493,"byte_end":116499,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114320,"byte_end":114390,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114391,"byte_end":114394,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114395,"byte_end":114473,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114474,"byte_end":114550,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114551,"byte_end":114623,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114624,"byte_end":114627,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114628,"byte_end":114700,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114701,"byte_end":114729,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114730,"byte_end":114733,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114734,"byte_end":114801,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114802,"byte_end":114866,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114867,"byte_end":114917,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114918,"byte_end":114921,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114922,"byte_end":114936,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114937,"byte_end":114940,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114941,"byte_end":114961,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114962,"byte_end":114965,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114966,"byte_end":114973,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114974,"byte_end":115015,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115016,"byte_end":115034,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115035,"byte_end":115051,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115052,"byte_end":115075,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115076,"byte_end":115097,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115098,"byte_end":115104,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115105,"byte_end":115108,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115109,"byte_end":115200,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115201,"byte_end":115226,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115227,"byte_end":115286,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115287,"byte_end":115296,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115297,"byte_end":115303,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115304,"byte_end":115329,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115330,"byte_end":115360,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115361,"byte_end":115367,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115368,"byte_end":115371,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115372,"byte_end":115418,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115419,"byte_end":115441,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115442,"byte_end":115464,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115465,"byte_end":115468,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115469,"byte_end":115531,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115532,"byte_end":115616,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115617,"byte_end":115690,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115691,"byte_end":115775,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115776,"byte_end":115849,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115850,"byte_end":115856,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115857,"byte_end":115860,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115861,"byte_end":115885,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115886,"byte_end":115895,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115896,"byte_end":115903,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115904,"byte_end":115907,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115908,"byte_end":115934,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115935,"byte_end":115938,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115939,"byte_end":115946,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":115947,"byte_end":116006,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116007,"byte_end":116010,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116011,"byte_end":116064,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116065,"byte_end":116068,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116069,"byte_end":116144,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116145,"byte_end":116177,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116178,"byte_end":116210,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116211,"byte_end":116216,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116217,"byte_end":116261,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116262,"byte_end":116288,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116289,"byte_end":116366,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116367,"byte_end":116446,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116447,"byte_end":116460,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116461,"byte_end":116471,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116472,"byte_end":116477,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116478,"byte_end":116485,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10707},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":117956,"byte_end":117965,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10709}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":117816,"byte_end":117859,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":117877,"byte_end":117944,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1401},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118745,"byte_end":118755,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118043,"byte_end":118109,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118110,"byte_end":118113,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118114,"byte_end":118194,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118195,"byte_end":118273,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118274,"byte_end":118342,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118343,"byte_end":118346,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118347,"byte_end":118427,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118428,"byte_end":118502,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118503,"byte_end":118506,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118507,"byte_end":118584,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118585,"byte_end":118642,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118643,"byte_end":118646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118647,"byte_end":118659,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118660,"byte_end":118663,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118664,"byte_end":118737,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119136,"byte_end":119146,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119061,"byte_end":119124,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10783},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":122907,"byte_end":122914,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10786},{"krate":0,"index":10787}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10828},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":122984,"byte_end":122992,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10885},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123068,"byte_end":123076,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":10890},{"krate":0,"index":10891},{"krate":0,"index":10892},{"krate":0,"index":10893}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10954},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123158,"byte_end":123166,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":10960},{"krate":0,"index":10961},{"krate":0,"index":10962},{"krate":0,"index":10963},{"krate":0,"index":10964}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124439,"byte_end":124447,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123204,"byte_end":123277,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123278,"byte_end":123310,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123311,"byte_end":123314,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123315,"byte_end":123386,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123387,"byte_end":123463,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123464,"byte_end":123536,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123537,"byte_end":123553,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123554,"byte_end":123557,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123558,"byte_end":123627,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123628,"byte_end":123654,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123655,"byte_end":123658,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123659,"byte_end":123673,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123674,"byte_end":123677,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123678,"byte_end":123754,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123755,"byte_end":123791,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123792,"byte_end":123795,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123796,"byte_end":123803,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123804,"byte_end":123845,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123846,"byte_end":123870,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123871,"byte_end":123874,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123875,"byte_end":123920,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123921,"byte_end":123966,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":123967,"byte_end":124005,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124006,"byte_end":124009,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124010,"byte_end":124049,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124050,"byte_end":124059,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124060,"byte_end":124067,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124068,"byte_end":124071,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124072,"byte_end":124142,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124143,"byte_end":124158,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124159,"byte_end":124162,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124163,"byte_end":124170,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124171,"byte_end":124212,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124213,"byte_end":124237,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124238,"byte_end":124241,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124242,"byte_end":124287,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124288,"byte_end":124334,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124335,"byte_end":124373,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124374,"byte_end":124377,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124378,"byte_end":124413,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124414,"byte_end":124423,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124424,"byte_end":124431,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1460},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125103,"byte_end":125112,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124685,"byte_end":124745,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124746,"byte_end":124749,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124750,"byte_end":124764,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124765,"byte_end":124768,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124769,"byte_end":124776,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124777,"byte_end":124818,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124819,"byte_end":124843,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124844,"byte_end":124847,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124848,"byte_end":124893,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124894,"byte_end":124939,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124940,"byte_end":124985,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":124986,"byte_end":125029,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125030,"byte_end":125033,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125034,"byte_end":125077,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125078,"byte_end":125087,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125088,"byte_end":125095,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1464},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125940,"byte_end":125949,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125470,"byte_end":125530,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125531,"byte_end":125534,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125535,"byte_end":125549,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125550,"byte_end":125553,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125554,"byte_end":125561,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125562,"byte_end":125603,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125604,"byte_end":125628,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125629,"byte_end":125632,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125633,"byte_end":125678,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125679,"byte_end":125724,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125725,"byte_end":125770,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125771,"byte_end":125816,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125817,"byte_end":125863,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125864,"byte_end":125867,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125868,"byte_end":125914,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125915,"byte_end":125924,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":125925,"byte_end":125932,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1469},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126921,"byte_end":126930,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126399,"byte_end":126459,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126460,"byte_end":126463,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126464,"byte_end":126478,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126479,"byte_end":126482,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126483,"byte_end":126490,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126491,"byte_end":126532,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126533,"byte_end":126557,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126558,"byte_end":126561,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126562,"byte_end":126607,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126608,"byte_end":126653,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126654,"byte_end":126699,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126700,"byte_end":126745,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126746,"byte_end":126791,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126792,"byte_end":126841,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126842,"byte_end":126845,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126846,"byte_end":126895,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126896,"byte_end":126905,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":126906,"byte_end":126913,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128422,"byte_end":128432,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1554}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128297,"byte_end":128342,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128343,"byte_end":128410,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1558},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":130025,"byte_end":130037,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128776,"byte_end":128855,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128856,"byte_end":128886,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128887,"byte_end":128890,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128891,"byte_end":128970,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128971,"byte_end":129051,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129052,"byte_end":129070,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129071,"byte_end":129074,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129075,"byte_end":129153,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129154,"byte_end":129234,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129235,"byte_end":129309,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129310,"byte_end":129333,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129334,"byte_end":129337,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129338,"byte_end":129415,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129416,"byte_end":129473,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129474,"byte_end":129477,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129478,"byte_end":129492,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129493,"byte_end":129496,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129497,"byte_end":129504,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129505,"byte_end":129546,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129547,"byte_end":129593,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129594,"byte_end":129597,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129598,"byte_end":129621,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129622,"byte_end":129656,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129657,"byte_end":129691,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129692,"byte_end":129726,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129727,"byte_end":129733,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129734,"byte_end":129737,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129738,"byte_end":129801,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129802,"byte_end":129805,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129806,"byte_end":129829,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129830,"byte_end":129864,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129865,"byte_end":129900,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129901,"byte_end":129935,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129936,"byte_end":129942,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129943,"byte_end":129946,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":129947,"byte_end":129999,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":130000,"byte_end":130009,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":130010,"byte_end":130017,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11035},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":131935,"byte_end":131944,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":11038}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":131793,"byte_end":131838,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":131839,"byte_end":131906,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1604},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133529,"byte_end":133539,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132038,"byte_end":132108,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132109,"byte_end":132112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132113,"byte_end":132191,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132192,"byte_end":132268,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132269,"byte_end":132341,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132342,"byte_end":132345,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132346,"byte_end":132418,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132419,"byte_end":132447,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132448,"byte_end":132451,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132452,"byte_end":132519,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132520,"byte_end":132591,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132592,"byte_end":132642,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132643,"byte_end":132646,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132647,"byte_end":132661,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132662,"byte_end":132665,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132666,"byte_end":132673,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132674,"byte_end":132758,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132759,"byte_end":132762,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132763,"byte_end":132820,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132821,"byte_end":132824,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132825,"byte_end":132907,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132908,"byte_end":132965,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132966,"byte_end":133023,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133024,"byte_end":133050,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133051,"byte_end":133056,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133057,"byte_end":133152,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133153,"byte_end":133176,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133177,"byte_end":133257,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133258,"byte_end":133339,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133340,"byte_end":133410,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133411,"byte_end":133482,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133483,"byte_end":133496,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133497,"byte_end":133507,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133508,"byte_end":133513,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133514,"byte_end":133521,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11043},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135170,"byte_end":135178,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":11045}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135031,"byte_end":135073,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135091,"byte_end":135158,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135900,"byte_end":135909,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135255,"byte_end":135349,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135350,"byte_end":135353,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135354,"byte_end":135443,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135444,"byte_end":135528,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135529,"byte_end":135610,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135611,"byte_end":135656,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135657,"byte_end":135660,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135661,"byte_end":135739,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135740,"byte_end":135797,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135798,"byte_end":135801,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135802,"byte_end":135814,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135815,"byte_end":135818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135819,"byte_end":135892,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11052},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138652,"byte_end":138656,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":11049},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138619,"byte_end":138647,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11055},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138712,"byte_end":138717,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":11049},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138678,"byte_end":138707,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":11049},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138600,"byte_end":138606,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":11052},{"krate":0,"index":11055}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138077,"byte_end":138183,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138184,"byte_end":138187,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138188,"byte_end":138269,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138270,"byte_end":138273,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138274,"byte_end":138285,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138286,"byte_end":138318,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138319,"byte_end":138322,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138323,"byte_end":138364,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138365,"byte_end":138385,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138386,"byte_end":138389,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138390,"byte_end":138413,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138414,"byte_end":138453,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138454,"byte_end":138466,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138467,"byte_end":138507,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138508,"byte_end":138514,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138515,"byte_end":138518,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138519,"byte_end":138549,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138550,"byte_end":138558,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138559,"byte_end":138566,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139271,"byte_end":139283,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139123,"byte_end":139181,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139186,"byte_end":139189,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139194,"byte_end":139259,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139663,"byte_end":139676,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139514,"byte_end":139572,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139577,"byte_end":139580,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139585,"byte_end":139651,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139964,"byte_end":139974,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139891,"byte_end":139952,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1811},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146578,"byte_end":146587,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146208,"byte_end":146295,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146296,"byte_end":146299,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146300,"byte_end":146376,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146377,"byte_end":146430,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146431,"byte_end":146434,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146435,"byte_end":146512,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":146513,"byte_end":146570,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1845},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3827},{"krate":0,"index":3830},{"krate":0,"index":3833},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3915},{"krate":0,"index":3918},{"krate":0,"index":3921},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5081},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":5090},{"krate":0,"index":5093},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5114},{"krate":0,"index":5117},{"krate":0,"index":5120},{"krate":0,"index":5123},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5145},{"krate":0,"index":5148},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5158},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5188},{"krate":0,"index":5191},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5231},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5272},{"krate":0,"index":5275},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5318},{"krate":0,"index":5321},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5368},{"krate":0,"index":5371},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":5417},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5457},{"krate":0,"index":5460},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5492},{"krate":0,"index":5495},{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5553},{"krate":0,"index":5556},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5641},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":5814},{"krate":0,"index":5817},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6349},{"krate":0,"index":6352},{"krate":0,"index":6368},{"krate":0,"index":6369},{"krate":0,"index":6372},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6381},{"krate":0,"index":6384}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146839,"byte_end":146864,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146865,"byte_end":146868,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146869,"byte_end":146894,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146895,"byte_end":146898,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146899,"byte_end":146972,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146973,"byte_end":146998,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":146999,"byte_end":147078,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147079,"byte_end":147116,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147117,"byte_end":147190,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":147191,"byte_end":147221,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11073},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":204692,"byte_end":204697,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11076},{"krate":0,"index":11077}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11122},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":206822,"byte_end":206829,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11125},{"krate":0,"index":11126}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11173},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":208263,"byte_end":208268,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":11177},{"krate":0,"index":11178},{"krate":0,"index":11179}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11231},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":210102,"byte_end":210108,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11233},{"krate":0,"index":11234}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11266},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":211780,"byte_end":211785,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":11268},{"krate":0,"index":11269}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11308},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":213095,"byte_end":213100,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11310},{"krate":0,"index":11311}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11348},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":214747,"byte_end":214756,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11350},{"krate":0,"index":11351}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11387},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":216388,"byte_end":216394,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11391},{"krate":0,"index":11392},{"krate":0,"index":11393},{"krate":0,"index":11394}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11452},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":219788,"byte_end":219797,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11456},{"krate":0,"index":11457},{"krate":0,"index":11458}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11520},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":222803,"byte_end":222810,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11523},{"krate":0,"index":11524}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11568},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152745,"byte_end":152752,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11570}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11621},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":224627,"byte_end":224631,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11626},{"krate":0,"index":11627},{"krate":0,"index":11628},{"krate":0,"index":11629}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11690},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227088,"byte_end":227091,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11694},{"krate":0,"index":11695},{"krate":0,"index":11696},{"krate":0,"index":11697}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11751},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":229664,"byte_end":229667,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":11755},{"krate":0,"index":11756},{"krate":0,"index":11757},{"krate":0,"index":11758}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11812},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232266,"byte_end":232273,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11818}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11874},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234230,"byte_end":234234,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11876},{"krate":0,"index":11877}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234686,"byte_end":234693,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234417,"byte_end":234479,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234484,"byte_end":234487,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234492,"byte_end":234560,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234565,"byte_end":234631,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234636,"byte_end":234674,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":11913},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236052,"byte_end":236064,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":11915}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":235882,"byte_end":235955,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":235973,"byte_end":236040,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236627,"byte_end":236634,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236235,"byte_end":236308,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236313,"byte_end":236330,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236335,"byte_end":236338,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236343,"byte_end":236424,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236429,"byte_end":236511,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236516,"byte_end":236595,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236600,"byte_end":236615,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237245,"byte_end":237252,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236699,"byte_end":236766,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236771,"byte_end":236802,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236807,"byte_end":236810,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236815,"byte_end":236888,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236893,"byte_end":236948,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236953,"byte_end":236956,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236961,"byte_end":237042,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237047,"byte_end":237129,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237134,"byte_end":237213,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237218,"byte_end":237233,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237878,"byte_end":237889,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237325,"byte_end":237399,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237404,"byte_end":237435,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237440,"byte_end":237443,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237448,"byte_end":237521,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237526,"byte_end":237581,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237586,"byte_end":237589,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237594,"byte_end":237675,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237680,"byte_end":237762,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237767,"byte_end":237846,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":237851,"byte_end":237866,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238522,"byte_end":238532,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238002,"byte_end":238064,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238069,"byte_end":238072,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238077,"byte_end":238149,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238154,"byte_end":238225,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238230,"byte_end":238233,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238238,"byte_end":238319,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238324,"byte_end":238406,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238411,"byte_end":238490,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238495,"byte_end":238510,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11922},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154092,"byte_end":154099,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11925}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11988},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":239556,"byte_end":239559,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11991},{"krate":0,"index":11992}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12041},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154460,"byte_end":154467,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":12045}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12120},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241219,"byte_end":241223,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12123}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241063,"byte_end":241122,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241140,"byte_end":241207,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12128},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242231,"byte_end":242245,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12131}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242047,"byte_end":242122,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242123,"byte_end":242134,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242152,"byte_end":242219,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12141},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":243836,"byte_end":243844,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12143},{"krate":0,"index":12144}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244277,"byte_end":244281,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244129,"byte_end":244195,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244200,"byte_end":244265,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244606,"byte_end":244615,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244368,"byte_end":244430,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244435,"byte_end":244438,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244443,"byte_end":244516,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":244521,"byte_end":244594,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245930,"byte_end":245938,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245051,"byte_end":245125,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245130,"byte_end":245195,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245200,"byte_end":245203,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245208,"byte_end":245222,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245227,"byte_end":245230,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245235,"byte_end":245242,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245247,"byte_end":245288,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245293,"byte_end":245336,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245341,"byte_end":245366,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245371,"byte_end":245374,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245379,"byte_end":245435,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245440,"byte_end":245461,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245466,"byte_end":245469,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245474,"byte_end":245537,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245542,"byte_end":245596,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245601,"byte_end":245604,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245609,"byte_end":245685,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245690,"byte_end":245745,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245750,"byte_end":245770,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245775,"byte_end":245794,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245799,"byte_end":245808,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245813,"byte_end":245818,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245823,"byte_end":245826,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245831,"byte_end":245892,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245897,"byte_end":245906,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":245911,"byte_end":245918,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246113,"byte_end":246126,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246031,"byte_end":246101,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248117,"byte_end":248124,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246589,"byte_end":246662,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246667,"byte_end":246701,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246706,"byte_end":246709,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246714,"byte_end":246789,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246794,"byte_end":246834,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246839,"byte_end":246842,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246847,"byte_end":246861,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246866,"byte_end":246869,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246874,"byte_end":246914,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246919,"byte_end":246922,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246927,"byte_end":246934,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246939,"byte_end":246980,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":246985,"byte_end":247028,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247033,"byte_end":247058,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247063,"byte_end":247066,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247071,"byte_end":247118,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247123,"byte_end":247144,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247149,"byte_end":247202,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247207,"byte_end":247275,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247280,"byte_end":247353,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247358,"byte_end":247423,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247428,"byte_end":247512,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247517,"byte_end":247562,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247567,"byte_end":247576,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247581,"byte_end":247588,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247593,"byte_end":247596,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247601,"byte_end":247637,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247642,"byte_end":247645,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247650,"byte_end":247657,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247662,"byte_end":247703,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247708,"byte_end":247751,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247756,"byte_end":247781,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247786,"byte_end":247789,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247794,"byte_end":247842,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247847,"byte_end":247868,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247873,"byte_end":247912,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247917,"byte_end":247982,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":247987,"byte_end":248028,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248033,"byte_end":248079,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248084,"byte_end":248093,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248098,"byte_end":248105,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249148,"byte_end":249158,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248290,"byte_end":248363,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248368,"byte_end":248392,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248397,"byte_end":248400,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248405,"byte_end":248418,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248423,"byte_end":248426,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248431,"byte_end":248471,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248476,"byte_end":248479,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248484,"byte_end":248491,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248496,"byte_end":248537,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248542,"byte_end":248585,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248590,"byte_end":248615,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248620,"byte_end":248623,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248628,"byte_end":248675,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248680,"byte_end":248701,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248706,"byte_end":248759,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248764,"byte_end":248826,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248831,"byte_end":248904,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248909,"byte_end":248968,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":248973,"byte_end":249060,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249065,"byte_end":249110,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249115,"byte_end":249124,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249129,"byte_end":249136,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12180},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250676,"byte_end":250680,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12183}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12221},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251738,"byte_end":251745,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12224}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12262},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252828,"byte_end":252834,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12266}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12311},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254698,"byte_end":254706,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12315}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12365},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256323,"byte_end":256327,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12367},{"krate":0,"index":12368}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12404},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":258090,"byte_end":258099,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12408},{"krate":0,"index":12409},{"krate":0,"index":12410},{"krate":0,"index":12411},{"krate":0,"index":12412}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12478},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":261603,"byte_end":261607,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12480},{"krate":0,"index":12481}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12517},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":263643,"byte_end":263652,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":12523},{"krate":0,"index":12524},{"krate":0,"index":12525}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12586},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":267132,"byte_end":267141,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12589},{"krate":0,"index":12590},{"krate":0,"index":12591},{"krate":0,"index":12592}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268425,"byte_end":268436,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268125,"byte_end":268179,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268184,"byte_end":268278,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268283,"byte_end":268346,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268351,"byte_end":268413,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269720,"byte_end":269731,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268573,"byte_end":268638,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268643,"byte_end":268700,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268705,"byte_end":268708,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268713,"byte_end":268778,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268783,"byte_end":268843,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268848,"byte_end":268851,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268856,"byte_end":268924,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268929,"byte_end":268972,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268977,"byte_end":268980,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":268985,"byte_end":268999,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269004,"byte_end":269007,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269012,"byte_end":269019,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269024,"byte_end":269065,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269070,"byte_end":269094,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269099,"byte_end":269142,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269147,"byte_end":269175,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269180,"byte_end":269183,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269188,"byte_end":269226,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269231,"byte_end":269234,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269239,"byte_end":269257,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269262,"byte_end":269304,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269309,"byte_end":269324,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269329,"byte_end":269348,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269353,"byte_end":269378,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269383,"byte_end":269399,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269404,"byte_end":269437,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269442,"byte_end":269451,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269456,"byte_end":269463,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269468,"byte_end":269471,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269476,"byte_end":269525,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269530,"byte_end":269584,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269589,"byte_end":269592,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269597,"byte_end":269644,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269649,"byte_end":269682,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269687,"byte_end":269696,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269701,"byte_end":269708,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269907,"byte_end":269917,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269810,"byte_end":269871,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":269876,"byte_end":269895,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12643},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":271849,"byte_end":271853,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12647},{"krate":0,"index":12648},{"krate":0,"index":12649}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12711},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":274393,"byte_end":274396,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12714},{"krate":0,"index":12715},{"krate":0,"index":12716},{"krate":0,"index":12717}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":274914,"byte_end":274921,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":274806,"byte_end":274880,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":274885,"byte_end":274902,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275277,"byte_end":275284,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275015,"byte_end":275083,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275088,"byte_end":275119,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275124,"byte_end":275127,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275132,"byte_end":275205,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275210,"byte_end":275265,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275659,"byte_end":275670,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275390,"byte_end":275465,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275470,"byte_end":275501,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275506,"byte_end":275509,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275514,"byte_end":275587,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275592,"byte_end":275647,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":276076,"byte_end":276086,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275840,"byte_end":275903,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275908,"byte_end":275911,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275916,"byte_end":275988,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":275993,"byte_end":276064,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12766},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":278915,"byte_end":278921,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12768},{"krate":0,"index":12769},{"krate":0,"index":12770}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12814},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":282024,"byte_end":282035,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12816},{"krate":0,"index":12817},{"krate":0,"index":12818}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12857},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":285581,"byte_end":285585,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":12862},{"krate":0,"index":12863},{"krate":0,"index":12864}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12926},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289009,"byte_end":289024,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":12928},{"krate":0,"index":12929},{"krate":0,"index":12930}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12971},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":292335,"byte_end":292343,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":12973},{"krate":0,"index":12974},{"krate":0,"index":12975}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13016},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":295338,"byte_end":295355,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13020},{"krate":0,"index":13021},{"krate":0,"index":13022},{"krate":0,"index":13023}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13082},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":298861,"byte_end":298872,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13084},{"krate":0,"index":13085}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3718},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157932,"byte_end":157941,"line_start":230,"line_end":230,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3732},{"krate":0,"index":3735},{"krate":0,"index":3737},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3759},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3803},{"krate":0,"index":3804}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157821,"byte_end":157895,"line_start":228,"line_end":228,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157896,"byte_end":157921,"line_start":229,"line_end":229,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158851,"byte_end":158855,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157956,"byte_end":158022,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158027,"byte_end":158030,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158035,"byte_end":158103,"line_start":233,"line_end":233,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158108,"byte_end":158183,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158188,"byte_end":158263,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158268,"byte_end":158322,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158327,"byte_end":158402,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158407,"byte_end":158417,"line_start":238,"line_end":238,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158422,"byte_end":158425,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158430,"byte_end":158444,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158449,"byte_end":158452,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158457,"byte_end":158464,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158469,"byte_end":158510,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158515,"byte_end":158558,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158563,"byte_end":158566,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158571,"byte_end":158612,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158617,"byte_end":158620,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158625,"byte_end":158670,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158675,"byte_end":158720,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158725,"byte_end":158770,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158775,"byte_end":158817,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158822,"byte_end":158831,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158836,"byte_end":158843,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160094,"byte_end":160105,"line_start":289,"line_end":289,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158997,"byte_end":159069,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159074,"byte_end":159135,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159140,"byte_end":159143,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159148,"byte_end":159223,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159228,"byte_end":159282,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159287,"byte_end":159290,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159295,"byte_end":159368,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159373,"byte_end":159435,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159440,"byte_end":159515,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159520,"byte_end":159574,"line_start":270,"line_end":270,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159579,"byte_end":159654,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159659,"byte_end":159669,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159674,"byte_end":159677,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159682,"byte_end":159696,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159701,"byte_end":159704,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159709,"byte_end":159716,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159721,"byte_end":159762,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159767,"byte_end":159810,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159815,"byte_end":159818,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159823,"byte_end":159860,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159865,"byte_end":159868,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159873,"byte_end":159925,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159930,"byte_end":159960,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159965,"byte_end":159968,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159973,"byte_end":160025,"line_start":285,"line_end":285,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160030,"byte_end":160060,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160065,"byte_end":160074,"line_start":287,"line_end":287,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160079,"byte_end":160086,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161106,"byte_end":161109,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160270,"byte_end":160345,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160350,"byte_end":160373,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160378,"byte_end":160381,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160386,"byte_end":160458,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160463,"byte_end":160527,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160532,"byte_end":160569,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160574,"byte_end":160577,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160582,"byte_end":160658,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160663,"byte_end":160734,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160739,"byte_end":160760,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160765,"byte_end":160768,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160773,"byte_end":160787,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160792,"byte_end":160795,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160800,"byte_end":160807,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160812,"byte_end":160853,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160858,"byte_end":160901,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160906,"byte_end":160909,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160914,"byte_end":160951,"line_start":313,"line_end":313,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160956,"byte_end":160995,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161000,"byte_end":161003,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161008,"byte_end":161072,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161077,"byte_end":161086,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161091,"byte_end":161098,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162669,"byte_end":162678,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161276,"byte_end":161347,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161352,"byte_end":161371,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161376,"byte_end":161379,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161384,"byte_end":161449,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161454,"byte_end":161523,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161528,"byte_end":161539,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161544,"byte_end":161547,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161552,"byte_end":161627,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161632,"byte_end":161714,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161719,"byte_end":161737,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161742,"byte_end":161745,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161750,"byte_end":161773,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161778,"byte_end":161781,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161786,"byte_end":161861,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161866,"byte_end":161953,"line_start":341,"line_end":341,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161958,"byte_end":162014,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162019,"byte_end":162022,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162027,"byte_end":162039,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162044,"byte_end":162047,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162052,"byte_end":162121,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162126,"byte_end":162151,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162156,"byte_end":162159,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162164,"byte_end":162178,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162183,"byte_end":162186,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162191,"byte_end":162198,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162203,"byte_end":162244,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162249,"byte_end":162292,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162297,"byte_end":162300,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162305,"byte_end":162356,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162361,"byte_end":162364,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162369,"byte_end":162409,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162414,"byte_end":162417,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162422,"byte_end":162474,"line_start":359,"line_end":359,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162479,"byte_end":162531,"line_start":360,"line_end":360,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162536,"byte_end":162588,"line_start":361,"line_end":361,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162593,"byte_end":162635,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162640,"byte_end":162649,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162654,"byte_end":162661,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163907,"byte_end":163913,"line_start":398,"line_end":398,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162822,"byte_end":162894,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162899,"byte_end":162926,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162931,"byte_end":162934,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162939,"byte_end":163014,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163019,"byte_end":163090,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163095,"byte_end":163167,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163172,"byte_end":163246,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163251,"byte_end":163309,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163314,"byte_end":163317,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163322,"byte_end":163398,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163403,"byte_end":163477,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163482,"byte_end":163503,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163508,"byte_end":163511,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163516,"byte_end":163530,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163535,"byte_end":163538,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163543,"byte_end":163550,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163555,"byte_end":163596,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163601,"byte_end":163625,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163630,"byte_end":163673,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163678,"byte_end":163681,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163686,"byte_end":163724,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163729,"byte_end":163790,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163795,"byte_end":163798,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163803,"byte_end":163873,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163878,"byte_end":163887,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163892,"byte_end":163899,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165238,"byte_end":165248,"line_start":432,"line_end":432,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164141,"byte_end":164216,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164221,"byte_end":164297,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164302,"byte_end":164305,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164310,"byte_end":164385,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164390,"byte_end":164465,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164470,"byte_end":164546,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164551,"byte_end":164616,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164621,"byte_end":164624,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164629,"byte_end":164705,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164710,"byte_end":164784,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164789,"byte_end":164814,"line_start":417,"line_end":417,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164819,"byte_end":164822,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164827,"byte_end":164841,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164846,"byte_end":164853,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164858,"byte_end":164899,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164904,"byte_end":164947,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164952,"byte_end":164955,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164960,"byte_end":164998,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165003,"byte_end":165053,"line_start":425,"line_end":425,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165058,"byte_end":165109,"line_start":426,"line_end":426,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165114,"byte_end":165121,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165126,"byte_end":165129,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165134,"byte_end":165204,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165209,"byte_end":165218,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165223,"byte_end":165230,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166277,"byte_end":166281,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165480,"byte_end":165553,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165558,"byte_end":165586,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165591,"byte_end":165594,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165599,"byte_end":165673,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165678,"byte_end":165745,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165750,"byte_end":165795,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165800,"byte_end":165803,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165808,"byte_end":165884,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165889,"byte_end":165915,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165920,"byte_end":165923,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165928,"byte_end":165942,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165947,"byte_end":165950,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165955,"byte_end":165962,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165967,"byte_end":166008,"line_start":454,"line_end":454,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166013,"byte_end":166056,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166061,"byte_end":166064,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166069,"byte_end":166106,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166111,"byte_end":166166,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166171,"byte_end":166174,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166179,"byte_end":166243,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166248,"byte_end":166257,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166262,"byte_end":166269,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167215,"byte_end":167222,"line_start":497,"line_end":497,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166490,"byte_end":166544,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166549,"byte_end":166604,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166609,"byte_end":166612,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166617,"byte_end":166685,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166690,"byte_end":166693,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166698,"byte_end":166712,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166717,"byte_end":166720,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166725,"byte_end":166732,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166737,"byte_end":166778,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166783,"byte_end":166814,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166819,"byte_end":166854,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166859,"byte_end":166879,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166884,"byte_end":166887,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166892,"byte_end":166929,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166934,"byte_end":166937,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166942,"byte_end":166969,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166974,"byte_end":166998,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167003,"byte_end":167045,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167050,"byte_end":167059,"line_start":490,"line_end":490,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167064,"byte_end":167071,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167076,"byte_end":167079,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167084,"byte_end":167132,"line_start":493,"line_end":493,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167137,"byte_end":167181,"line_start":494,"line_end":494,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167186,"byte_end":167195,"line_start":495,"line_end":495,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167200,"byte_end":167207,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168341,"byte_end":168346,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167380,"byte_end":167431,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167436,"byte_end":167471,"line_start":505,"line_end":505,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167476,"byte_end":167479,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167484,"byte_end":167538,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167543,"byte_end":167600,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167605,"byte_end":167641,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167646,"byte_end":167649,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167654,"byte_end":167722,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167727,"byte_end":167730,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167735,"byte_end":167749,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167754,"byte_end":167757,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167762,"byte_end":167769,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167774,"byte_end":167815,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167820,"byte_end":167851,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167856,"byte_end":167891,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167896,"byte_end":167916,"line_start":519,"line_end":519,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167921,"byte_end":167924,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167929,"byte_end":167966,"line_start":521,"line_end":521,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167971,"byte_end":167974,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167979,"byte_end":168006,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168011,"byte_end":168054,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168059,"byte_end":168102,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168107,"byte_end":168150,"line_start":526,"line_end":526,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168155,"byte_end":168162,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168167,"byte_end":168170,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168175,"byte_end":168229,"line_start":529,"line_end":529,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168234,"byte_end":168268,"line_start":530,"line_end":530,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168273,"byte_end":168307,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168312,"byte_end":168321,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168326,"byte_end":168333,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169642,"byte_end":169648,"line_start":575,"line_end":575,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168607,"byte_end":168669,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168674,"byte_end":168738,"line_start":544,"line_end":544,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168743,"byte_end":168746,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168751,"byte_end":168815,"line_start":546,"line_end":546,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168820,"byte_end":168885,"line_start":547,"line_end":547,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168890,"byte_end":168936,"line_start":548,"line_end":548,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168941,"byte_end":168944,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168949,"byte_end":168998,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169003,"byte_end":169043,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169048,"byte_end":169051,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169056,"byte_end":169070,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169075,"byte_end":169078,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169083,"byte_end":169090,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169095,"byte_end":169136,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169141,"byte_end":169172,"line_start":557,"line_end":557,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169177,"byte_end":169212,"line_start":558,"line_end":558,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169217,"byte_end":169237,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169242,"byte_end":169245,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169250,"byte_end":169287,"line_start":561,"line_end":561,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169292,"byte_end":169295,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169300,"byte_end":169327,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169332,"byte_end":169363,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169368,"byte_end":169394,"line_start":565,"line_end":565,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169399,"byte_end":169465,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169470,"byte_end":169479,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169484,"byte_end":169491,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169496,"byte_end":169499,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169504,"byte_end":169539,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169544,"byte_end":169547,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169552,"byte_end":169608,"line_start":572,"line_end":572,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169613,"byte_end":169622,"line_start":573,"line_end":573,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169627,"byte_end":169634,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170668,"byte_end":170673,"line_start":608,"line_end":608,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169878,"byte_end":169944,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169949,"byte_end":169952,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169957,"byte_end":169980,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169985,"byte_end":169988,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169993,"byte_end":170069,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170074,"byte_end":170149,"line_start":588,"line_end":588,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170154,"byte_end":170231,"line_start":589,"line_end":589,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170236,"byte_end":170239,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170244,"byte_end":170256,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170261,"byte_end":170264,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170269,"byte_end":170343,"line_start":593,"line_end":593,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170348,"byte_end":170361,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170366,"byte_end":170369,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170374,"byte_end":170388,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170393,"byte_end":170396,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170401,"byte_end":170408,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170413,"byte_end":170454,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170459,"byte_end":170502,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170507,"byte_end":170510,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170515,"byte_end":170553,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170558,"byte_end":170595,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170600,"byte_end":170603,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170608,"byte_end":170634,"line_start":605,"line_end":605,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170639,"byte_end":170648,"line_start":606,"line_end":606,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170653,"byte_end":170660,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171629,"byte_end":171634,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170795,"byte_end":170826,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170831,"byte_end":170834,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170839,"byte_end":170906,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170911,"byte_end":170983,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170988,"byte_end":171045,"line_start":619,"line_end":619,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171050,"byte_end":171053,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171058,"byte_end":171072,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171077,"byte_end":171080,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171085,"byte_end":171092,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171097,"byte_end":171138,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171143,"byte_end":171186,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171191,"byte_end":171213,"line_start":626,"line_end":626,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171218,"byte_end":171265,"line_start":627,"line_end":627,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171270,"byte_end":171273,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171278,"byte_end":171319,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171324,"byte_end":171365,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171370,"byte_end":171411,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171416,"byte_end":171457,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171462,"byte_end":171503,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171508,"byte_end":171549,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171554,"byte_end":171595,"line_start":635,"line_end":635,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171600,"byte_end":171609,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171614,"byte_end":171621,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172584,"byte_end":172588,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171769,"byte_end":171836,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171841,"byte_end":171893,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171898,"byte_end":171901,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171906,"byte_end":171976,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171981,"byte_end":172057,"line_start":649,"line_end":649,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172062,"byte_end":172138,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172143,"byte_end":172213,"line_start":651,"line_end":651,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172218,"byte_end":172244,"line_start":652,"line_end":652,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172249,"byte_end":172252,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172257,"byte_end":172271,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172276,"byte_end":172279,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172284,"byte_end":172291,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172296,"byte_end":172337,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172342,"byte_end":172385,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172390,"byte_end":172393,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172398,"byte_end":172441,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172446,"byte_end":172515,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172520,"byte_end":172550,"line_start":662,"line_end":662,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172555,"byte_end":172564,"line_start":663,"line_end":663,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172569,"byte_end":172576,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173289,"byte_end":173292,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172823,"byte_end":172936,"line_start":674,"line_end":674,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172941,"byte_end":172944,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172949,"byte_end":172963,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172968,"byte_end":172971,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172976,"byte_end":172983,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172988,"byte_end":173029,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173034,"byte_end":173077,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173082,"byte_end":173085,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173090,"byte_end":173134,"line_start":682,"line_end":682,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173139,"byte_end":173208,"line_start":683,"line_end":683,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173213,"byte_end":173255,"line_start":684,"line_end":684,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173260,"byte_end":173269,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173274,"byte_end":173281,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173979,"byte_end":173982,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173507,"byte_end":173620,"line_start":696,"line_end":696,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173625,"byte_end":173628,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173633,"byte_end":173647,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173652,"byte_end":173655,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173660,"byte_end":173667,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173672,"byte_end":173713,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173718,"byte_end":173761,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173766,"byte_end":173769,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173774,"byte_end":173818,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173823,"byte_end":173895,"line_start":705,"line_end":705,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173900,"byte_end":173945,"line_start":706,"line_end":706,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173950,"byte_end":173959,"line_start":707,"line_end":707,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173964,"byte_end":173971,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175156,"byte_end":175163,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174197,"byte_end":174262,"line_start":718,"line_end":718,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174267,"byte_end":174270,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174275,"byte_end":174289,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174294,"byte_end":174297,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174302,"byte_end":174309,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174314,"byte_end":174355,"line_start":723,"line_end":723,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174360,"byte_end":174391,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174396,"byte_end":174431,"line_start":725,"line_end":725,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174436,"byte_end":174456,"line_start":726,"line_end":726,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174461,"byte_end":174464,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174469,"byte_end":174508,"line_start":728,"line_end":728,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174513,"byte_end":174552,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174557,"byte_end":174596,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174601,"byte_end":174604,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174609,"byte_end":174636,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174641,"byte_end":174680,"line_start":733,"line_end":733,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174685,"byte_end":174724,"line_start":734,"line_end":734,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174729,"byte_end":174736,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174741,"byte_end":174768,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174773,"byte_end":174812,"line_start":737,"line_end":737,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174817,"byte_end":174856,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174861,"byte_end":174868,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174873,"byte_end":174900,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174905,"byte_end":174946,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174951,"byte_end":174992,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174997,"byte_end":175004,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175009,"byte_end":175012,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175017,"byte_end":175076,"line_start":745,"line_end":745,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175081,"byte_end":175122,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175127,"byte_end":175136,"line_start":747,"line_end":747,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175141,"byte_end":175148,"line_start":748,"line_end":748,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176425,"byte_end":176433,"line_start":782,"line_end":782,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175340,"byte_end":175412,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175417,"byte_end":175420,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175425,"byte_end":175502,"line_start":759,"line_end":759,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175507,"byte_end":175582,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175587,"byte_end":175663,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175668,"byte_end":175671,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175676,"byte_end":175758,"line_start":763,"line_end":763,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175763,"byte_end":175846,"line_start":764,"line_end":764,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175851,"byte_end":175854,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175859,"byte_end":175935,"line_start":766,"line_end":766,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175940,"byte_end":176016,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176021,"byte_end":176042,"line_start":768,"line_end":768,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176047,"byte_end":176050,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176055,"byte_end":176069,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176074,"byte_end":176077,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176082,"byte_end":176089,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176094,"byte_end":176135,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176140,"byte_end":176183,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176188,"byte_end":176191,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176196,"byte_end":176233,"line_start":776,"line_end":776,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176238,"byte_end":176305,"line_start":777,"line_end":777,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176310,"byte_end":176313,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176318,"byte_end":176391,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176396,"byte_end":176405,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176410,"byte_end":176417,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177445,"byte_end":177449,"line_start":815,"line_end":815,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176636,"byte_end":176707,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176712,"byte_end":176742,"line_start":792,"line_end":792,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176747,"byte_end":176750,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176755,"byte_end":176830,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176835,"byte_end":176906,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176911,"byte_end":176951,"line_start":796,"line_end":796,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176956,"byte_end":176959,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176964,"byte_end":176978,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176983,"byte_end":176986,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176991,"byte_end":176998,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177003,"byte_end":177044,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177049,"byte_end":177073,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177078,"byte_end":177121,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177126,"byte_end":177129,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177134,"byte_end":177172,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177177,"byte_end":177180,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177185,"byte_end":177229,"line_start":807,"line_end":807,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177234,"byte_end":177254,"line_start":808,"line_end":808,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177259,"byte_end":177322,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177327,"byte_end":177334,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177339,"byte_end":177342,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177347,"byte_end":177411,"line_start":812,"line_end":812,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177416,"byte_end":177425,"line_start":813,"line_end":813,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177430,"byte_end":177437,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178496,"byte_end":178506,"line_start":846,"line_end":846,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177718,"byte_end":177792,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177797,"byte_end":177820,"line_start":825,"line_end":825,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177825,"byte_end":177828,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177833,"byte_end":177906,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177911,"byte_end":177983,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177988,"byte_end":178065,"line_start":829,"line_end":829,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178070,"byte_end":178081,"line_start":830,"line_end":830,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178086,"byte_end":178089,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178094,"byte_end":178108,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178113,"byte_end":178116,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178121,"byte_end":178128,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178133,"byte_end":178174,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178179,"byte_end":178203,"line_start":836,"line_end":836,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178208,"byte_end":178251,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178256,"byte_end":178259,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178264,"byte_end":178302,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178307,"byte_end":178310,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178315,"byte_end":178378,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178383,"byte_end":178386,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178391,"byte_end":178462,"line_start":843,"line_end":843,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178467,"byte_end":178476,"line_start":844,"line_end":844,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178481,"byte_end":178488,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179495,"byte_end":179505,"line_start":876,"line_end":876,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178740,"byte_end":178816,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178821,"byte_end":178844,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178849,"byte_end":178852,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178857,"byte_end":178932,"line_start":858,"line_end":858,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178937,"byte_end":179009,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179014,"byte_end":179081,"line_start":860,"line_end":860,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179086,"byte_end":179089,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179094,"byte_end":179108,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179113,"byte_end":179116,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179121,"byte_end":179128,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179133,"byte_end":179174,"line_start":865,"line_end":865,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179179,"byte_end":179203,"line_start":866,"line_end":866,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179208,"byte_end":179251,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179256,"byte_end":179259,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179264,"byte_end":179302,"line_start":869,"line_end":869,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179307,"byte_end":179310,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179315,"byte_end":179378,"line_start":871,"line_end":871,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179383,"byte_end":179386,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179391,"byte_end":179461,"line_start":873,"line_end":873,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179466,"byte_end":179475,"line_start":874,"line_end":874,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179480,"byte_end":179487,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181021,"byte_end":181031,"line_start":921,"line_end":921,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179739,"byte_end":179809,"line_start":885,"line_end":885,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179814,"byte_end":179817,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179822,"byte_end":179893,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179898,"byte_end":179970,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179975,"byte_end":180045,"line_start":889,"line_end":889,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180050,"byte_end":180053,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180058,"byte_end":180129,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180134,"byte_end":180220,"line_start":892,"line_end":892,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180225,"byte_end":180292,"line_start":893,"line_end":893,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180297,"byte_end":180361,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180366,"byte_end":180369,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180374,"byte_end":180388,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180393,"byte_end":180396,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180401,"byte_end":180408,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180413,"byte_end":180454,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180459,"byte_end":180483,"line_start":900,"line_end":900,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180488,"byte_end":180531,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180536,"byte_end":180564,"line_start":902,"line_end":902,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180569,"byte_end":180572,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180577,"byte_end":180615,"line_start":904,"line_end":904,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180620,"byte_end":180623,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180628,"byte_end":180646,"line_start":906,"line_end":906,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180651,"byte_end":180693,"line_start":907,"line_end":907,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180698,"byte_end":180713,"line_start":908,"line_end":908,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180718,"byte_end":180737,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180742,"byte_end":180767,"line_start":910,"line_end":910,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180772,"byte_end":180788,"line_start":911,"line_end":911,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180793,"byte_end":180820,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180825,"byte_end":180834,"line_start":913,"line_end":913,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180839,"byte_end":180846,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180851,"byte_end":180854,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180859,"byte_end":180904,"line_start":916,"line_end":916,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180909,"byte_end":180912,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180917,"byte_end":180987,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180992,"byte_end":181001,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181006,"byte_end":181013,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182270,"byte_end":182278,"line_start":962,"line_end":962,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181212,"byte_end":181283,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181288,"byte_end":181331,"line_start":930,"line_end":930,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181336,"byte_end":181339,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181344,"byte_end":181419,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181424,"byte_end":181494,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181499,"byte_end":181537,"line_start":934,"line_end":934,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181542,"byte_end":181545,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181550,"byte_end":181625,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181630,"byte_end":181673,"line_start":937,"line_end":937,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181678,"byte_end":181681,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181686,"byte_end":181759,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181764,"byte_end":181807,"line_start":940,"line_end":940,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181812,"byte_end":181815,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181820,"byte_end":181834,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181839,"byte_end":181842,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181847,"byte_end":181854,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181859,"byte_end":181900,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181905,"byte_end":181929,"line_start":946,"line_end":946,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181934,"byte_end":181977,"line_start":947,"line_end":947,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181982,"byte_end":181985,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181990,"byte_end":182008,"line_start":949,"line_end":949,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182013,"byte_end":182016,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182021,"byte_end":182026,"line_start":951,"line_end":951,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182031,"byte_end":182092,"line_start":952,"line_end":952,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182097,"byte_end":182119,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182124,"byte_end":182153,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182158,"byte_end":182169,"line_start":955,"line_end":955,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182174,"byte_end":182192,"line_start":956,"line_end":956,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182197,"byte_end":182202,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182207,"byte_end":182210,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182215,"byte_end":182236,"line_start":959,"line_end":959,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182241,"byte_end":182250,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182255,"byte_end":182262,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184440,"byte_end":184459,"line_start":1018,"line_end":1018,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182497,"byte_end":182568,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182573,"byte_end":182647,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182652,"byte_end":182666,"line_start":973,"line_end":973,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182671,"byte_end":182674,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182679,"byte_end":182742,"line_start":975,"line_end":975,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182747,"byte_end":182818,"line_start":976,"line_end":976,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182823,"byte_end":182875,"line_start":977,"line_end":977,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182880,"byte_end":182883,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182888,"byte_end":182963,"line_start":979,"line_end":979,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182968,"byte_end":183038,"line_start":980,"line_end":980,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183043,"byte_end":183107,"line_start":981,"line_end":981,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183112,"byte_end":183115,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183120,"byte_end":183191,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183196,"byte_end":183266,"line_start":984,"line_end":984,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183271,"byte_end":183332,"line_start":985,"line_end":985,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183337,"byte_end":183404,"line_start":986,"line_end":986,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183409,"byte_end":183478,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183483,"byte_end":183555,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183560,"byte_end":183563,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183568,"byte_end":183643,"line_start":990,"line_end":990,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183648,"byte_end":183705,"line_start":991,"line_end":991,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183710,"byte_end":183713,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183718,"byte_end":183732,"line_start":993,"line_end":993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183737,"byte_end":183740,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183745,"byte_end":183752,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183757,"byte_end":183798,"line_start":996,"line_end":996,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183803,"byte_end":183837,"line_start":997,"line_end":997,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183842,"byte_end":183885,"line_start":998,"line_end":998,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183890,"byte_end":183893,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183898,"byte_end":183938,"line_start":1000,"line_end":1000,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183943,"byte_end":183983,"line_start":1001,"line_end":1001,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183988,"byte_end":184028,"line_start":1002,"line_end":1002,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184033,"byte_end":184036,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184041,"byte_end":184109,"line_start":1004,"line_end":1004,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184114,"byte_end":184136,"line_start":1005,"line_end":1005,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184141,"byte_end":184166,"line_start":1006,"line_end":1006,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184171,"byte_end":184201,"line_start":1007,"line_end":1007,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184206,"byte_end":184215,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184220,"byte_end":184226,"line_start":1009,"line_end":1009,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184231,"byte_end":184257,"line_start":1010,"line_end":1010,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184262,"byte_end":184288,"line_start":1011,"line_end":1011,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184293,"byte_end":184319,"line_start":1012,"line_end":1012,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184324,"byte_end":184338,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184343,"byte_end":184351,"line_start":1014,"line_end":1014,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184356,"byte_end":184363,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184368,"byte_end":184402,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184407,"byte_end":184432,"line_start":1017,"line_end":1017,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185284,"byte_end":185288,"line_start":1047,"line_end":1047,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184776,"byte_end":184847,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184852,"byte_end":184855,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184860,"byte_end":184933,"line_start":1033,"line_end":1033,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184938,"byte_end":184973,"line_start":1034,"line_end":1034,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184978,"byte_end":184981,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184986,"byte_end":185000,"line_start":1036,"line_end":1036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185005,"byte_end":185008,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185013,"byte_end":185020,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185025,"byte_end":185066,"line_start":1039,"line_end":1039,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185071,"byte_end":185114,"line_start":1040,"line_end":1040,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185119,"byte_end":185122,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185127,"byte_end":185173,"line_start":1042,"line_end":1042,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185178,"byte_end":185181,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185186,"byte_end":185250,"line_start":1044,"line_end":1044,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185255,"byte_end":185264,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185269,"byte_end":185276,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185953,"byte_end":185957,"line_start":1070,"line_end":1070,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185426,"byte_end":185498,"line_start":1054,"line_end":1054,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185503,"byte_end":185506,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185511,"byte_end":185584,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185589,"byte_end":185635,"line_start":1057,"line_end":1057,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185640,"byte_end":185643,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185648,"byte_end":185662,"line_start":1059,"line_end":1059,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185667,"byte_end":185670,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185675,"byte_end":185682,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185687,"byte_end":185728,"line_start":1062,"line_end":1062,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185733,"byte_end":185776,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185781,"byte_end":185784,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185789,"byte_end":185835,"line_start":1065,"line_end":1065,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185840,"byte_end":185843,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185848,"byte_end":185919,"line_start":1067,"line_end":1067,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185924,"byte_end":185933,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185938,"byte_end":185945,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187578,"byte_end":187582,"line_start":1116,"line_end":1116,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186095,"byte_end":186166,"line_start":1077,"line_end":1077,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186171,"byte_end":186244,"line_start":1078,"line_end":1078,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186249,"byte_end":186287,"line_start":1079,"line_end":1079,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186292,"byte_end":186295,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186300,"byte_end":186354,"line_start":1081,"line_end":1081,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186359,"byte_end":186431,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186436,"byte_end":186512,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186517,"byte_end":186585,"line_start":1084,"line_end":1084,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186590,"byte_end":186666,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186671,"byte_end":186693,"line_start":1086,"line_end":1086,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186698,"byte_end":186701,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186706,"byte_end":186773,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186778,"byte_end":186846,"line_start":1089,"line_end":1089,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186851,"byte_end":186864,"line_start":1090,"line_end":1090,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186869,"byte_end":186872,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186877,"byte_end":186891,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186896,"byte_end":186899,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186904,"byte_end":186911,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186916,"byte_end":186959,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186964,"byte_end":187007,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187012,"byte_end":187040,"line_start":1097,"line_end":1097,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187045,"byte_end":187048,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187053,"byte_end":187071,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187076,"byte_end":187114,"line_start":1100,"line_end":1100,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187119,"byte_end":187134,"line_start":1101,"line_end":1101,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187139,"byte_end":187156,"line_start":1102,"line_end":1102,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187161,"byte_end":187203,"line_start":1103,"line_end":1103,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187208,"byte_end":187243,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187248,"byte_end":187292,"line_start":1105,"line_end":1105,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187297,"byte_end":187306,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187311,"byte_end":187325,"line_start":1107,"line_end":1107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187330,"byte_end":187333,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187338,"byte_end":187381,"line_start":1109,"line_end":1109,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187386,"byte_end":187423,"line_start":1110,"line_end":1110,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187428,"byte_end":187465,"line_start":1111,"line_end":1111,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187470,"byte_end":187504,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187509,"byte_end":187543,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187548,"byte_end":187558,"line_start":1114,"line_end":1114,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187563,"byte_end":187570,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188511,"byte_end":188517,"line_start":1149,"line_end":1149,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187707,"byte_end":187754,"line_start":1123,"line_end":1123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187759,"byte_end":187762,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187767,"byte_end":187841,"line_start":1125,"line_end":1125,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187846,"byte_end":187883,"line_start":1126,"line_end":1126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187888,"byte_end":187891,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187896,"byte_end":187910,"line_start":1128,"line_end":1128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187915,"byte_end":187918,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187923,"byte_end":187930,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187935,"byte_end":187976,"line_start":1131,"line_end":1131,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187981,"byte_end":188024,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188029,"byte_end":188032,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188037,"byte_end":188077,"line_start":1134,"line_end":1134,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188082,"byte_end":188085,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188090,"byte_end":188119,"line_start":1136,"line_end":1136,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188124,"byte_end":188152,"line_start":1137,"line_end":1137,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188157,"byte_end":188214,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188219,"byte_end":188246,"line_start":1139,"line_end":1139,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188251,"byte_end":188274,"line_start":1140,"line_end":1140,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188279,"byte_end":188282,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188287,"byte_end":188322,"line_start":1142,"line_end":1142,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188327,"byte_end":188355,"line_start":1143,"line_end":1143,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188360,"byte_end":188417,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188422,"byte_end":188449,"line_start":1145,"line_end":1145,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188454,"byte_end":188477,"line_start":1146,"line_end":1146,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188482,"byte_end":188491,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188496,"byte_end":188503,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190276,"byte_end":190288,"line_start":1194,"line_end":1194,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188568,"byte_end":188622,"line_start":1153,"line_end":1153,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188627,"byte_end":188630,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188635,"byte_end":188710,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188715,"byte_end":188718,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188723,"byte_end":188798,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188803,"byte_end":188877,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188882,"byte_end":188956,"line_start":1159,"line_end":1159,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188961,"byte_end":189010,"line_start":1160,"line_end":1160,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189015,"byte_end":189018,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189023,"byte_end":189098,"line_start":1162,"line_end":1162,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189103,"byte_end":189173,"line_start":1163,"line_end":1163,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189178,"byte_end":189245,"line_start":1164,"line_end":1164,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189250,"byte_end":189322,"line_start":1165,"line_end":1165,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189327,"byte_end":189396,"line_start":1166,"line_end":1166,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189401,"byte_end":189416,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189421,"byte_end":189424,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189429,"byte_end":189493,"line_start":1169,"line_end":1169,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189498,"byte_end":189555,"line_start":1170,"line_end":1170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189560,"byte_end":189563,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189568,"byte_end":189582,"line_start":1172,"line_end":1172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189587,"byte_end":189590,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189595,"byte_end":189602,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189607,"byte_end":189648,"line_start":1175,"line_end":1175,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189653,"byte_end":189696,"line_start":1176,"line_end":1176,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189701,"byte_end":189704,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189709,"byte_end":189771,"line_start":1178,"line_end":1178,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189776,"byte_end":189806,"line_start":1179,"line_end":1179,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189811,"byte_end":189865,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189870,"byte_end":189900,"line_start":1181,"line_end":1181,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189905,"byte_end":189954,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189959,"byte_end":189962,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189967,"byte_end":190029,"line_start":1184,"line_end":1184,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190034,"byte_end":190056,"line_start":1185,"line_end":1185,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190061,"byte_end":190081,"line_start":1186,"line_end":1186,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190086,"byte_end":190128,"line_start":1187,"line_end":1187,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190133,"byte_end":190138,"line_start":1188,"line_end":1188,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190143,"byte_end":190176,"line_start":1189,"line_end":1189,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190181,"byte_end":190214,"line_start":1190,"line_end":1190,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190219,"byte_end":190228,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190233,"byte_end":190240,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190245,"byte_end":190268,"line_start":1193,"line_end":1193,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190664,"byte_end":190669,"line_start":1206,"line_end":1206,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190435,"byte_end":190476,"line_start":1201,"line_end":1201,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190481,"byte_end":190484,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190489,"byte_end":190564,"line_start":1203,"line_end":1203,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190569,"byte_end":190626,"line_start":1204,"line_end":1204,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190631,"byte_end":190656,"line_start":1205,"line_end":1205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191125,"byte_end":191136,"line_start":1220,"line_end":1220,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190824,"byte_end":190865,"line_start":1213,"line_end":1213,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190870,"byte_end":190873,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190878,"byte_end":190937,"line_start":1215,"line_end":1215,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190942,"byte_end":190945,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190950,"byte_end":191025,"line_start":1217,"line_end":1217,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191030,"byte_end":191087,"line_start":1218,"line_end":1218,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191092,"byte_end":191117,"line_start":1219,"line_end":1219,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192029,"byte_end":192037,"line_start":1241,"line_end":1241,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191289,"byte_end":191352,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191357,"byte_end":191360,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191365,"byte_end":191440,"line_start":1229,"line_end":1229,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191445,"byte_end":191521,"line_start":1230,"line_end":1230,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191526,"byte_end":191599,"line_start":1231,"line_end":1231,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191604,"byte_end":191677,"line_start":1232,"line_end":1232,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191682,"byte_end":191724,"line_start":1233,"line_end":1233,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191729,"byte_end":191732,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191737,"byte_end":191802,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191807,"byte_end":191810,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191815,"byte_end":191890,"line_start":1237,"line_end":1237,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191895,"byte_end":191952,"line_start":1238,"line_end":1238,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191957,"byte_end":191991,"line_start":1239,"line_end":1239,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191996,"byte_end":192021,"line_start":1240,"line_end":1240,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193717,"byte_end":193733,"line_start":1286,"line_end":1286,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192231,"byte_end":192306,"line_start":1249,"line_end":1249,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192311,"byte_end":192314,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192319,"byte_end":192394,"line_start":1251,"line_end":1251,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192399,"byte_end":192473,"line_start":1252,"line_end":1252,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192478,"byte_end":192550,"line_start":1253,"line_end":1253,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192555,"byte_end":192629,"line_start":1254,"line_end":1254,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192634,"byte_end":192663,"line_start":1255,"line_end":1255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192668,"byte_end":192671,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192676,"byte_end":192741,"line_start":1257,"line_end":1257,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192746,"byte_end":192749,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192754,"byte_end":192829,"line_start":1259,"line_end":1259,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192834,"byte_end":192891,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192896,"byte_end":192899,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192904,"byte_end":192918,"line_start":1262,"line_end":1262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192923,"byte_end":192926,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192931,"byte_end":192938,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192943,"byte_end":192984,"line_start":1265,"line_end":1265,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192989,"byte_end":193023,"line_start":1266,"line_end":1266,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193028,"byte_end":193071,"line_start":1267,"line_end":1267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193076,"byte_end":193079,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193084,"byte_end":193134,"line_start":1269,"line_end":1269,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193139,"byte_end":193189,"line_start":1270,"line_end":1270,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193194,"byte_end":193197,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193202,"byte_end":193269,"line_start":1272,"line_end":1272,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193274,"byte_end":193336,"line_start":1273,"line_end":1273,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193341,"byte_end":193344,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193349,"byte_end":193374,"line_start":1275,"line_end":1275,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193379,"byte_end":193433,"line_start":1276,"line_end":1276,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193438,"byte_end":193441,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193446,"byte_end":193471,"line_start":1278,"line_end":1278,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193476,"byte_end":193530,"line_start":1279,"line_end":1279,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193535,"byte_end":193538,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193543,"byte_end":193587,"line_start":1281,"line_end":1281,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193592,"byte_end":193628,"line_start":1282,"line_end":1282,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193633,"byte_end":193640,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193645,"byte_end":193679,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193684,"byte_end":193709,"line_start":1285,"line_end":1285,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194629,"byte_end":194632,"line_start":1316,"line_end":1316,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193941,"byte_end":193989,"line_start":1294,"line_end":1294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193994,"byte_end":193997,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194002,"byte_end":194075,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194080,"byte_end":194152,"line_start":1297,"line_end":1297,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194157,"byte_end":194170,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194175,"byte_end":194178,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194183,"byte_end":194197,"line_start":1300,"line_end":1300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194202,"byte_end":194205,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194210,"byte_end":194217,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194222,"byte_end":194263,"line_start":1303,"line_end":1303,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194268,"byte_end":194311,"line_start":1304,"line_end":1304,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194316,"byte_end":194319,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194324,"byte_end":194362,"line_start":1306,"line_end":1306,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194367,"byte_end":194406,"line_start":1307,"line_end":1307,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194411,"byte_end":194414,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194419,"byte_end":194453,"line_start":1309,"line_end":1309,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194458,"byte_end":194499,"line_start":1310,"line_end":1310,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194504,"byte_end":194532,"line_start":1311,"line_end":1311,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194537,"byte_end":194587,"line_start":1312,"line_end":1312,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194592,"byte_end":194601,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194606,"byte_end":194613,"line_start":1314,"line_end":1314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194618,"byte_end":194621,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195540,"byte_end":195545,"line_start":1347,"line_end":1347,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194813,"byte_end":194850,"line_start":1324,"line_end":1324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194855,"byte_end":194858,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194863,"byte_end":194934,"line_start":1326,"line_end":1326,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194939,"byte_end":195015,"line_start":1327,"line_end":1327,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195020,"byte_end":195023,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195028,"byte_end":195035,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195040,"byte_end":195081,"line_start":1330,"line_end":1330,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195086,"byte_end":195129,"line_start":1331,"line_end":1331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195134,"byte_end":195137,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195142,"byte_end":195199,"line_start":1333,"line_end":1333,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195204,"byte_end":195260,"line_start":1334,"line_end":1334,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195265,"byte_end":195268,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195273,"byte_end":195313,"line_start":1336,"line_end":1336,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195318,"byte_end":195321,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195326,"byte_end":195374,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195379,"byte_end":195407,"line_start":1339,"line_end":1339,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195412,"byte_end":195427,"line_start":1340,"line_end":1340,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195432,"byte_end":195451,"line_start":1341,"line_end":1341,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195456,"byte_end":195474,"line_start":1342,"line_end":1342,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195479,"byte_end":195494,"line_start":1343,"line_end":1343,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195499,"byte_end":195506,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195511,"byte_end":195520,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195525,"byte_end":195532,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195883,"byte_end":195891,"line_start":1358,"line_end":1358,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195737,"byte_end":195792,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195797,"byte_end":195800,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195805,"byte_end":195875,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196926,"byte_end":196932,"line_start":1384,"line_end":1384,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196024,"byte_end":196091,"line_start":1365,"line_end":1365,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196096,"byte_end":196099,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196104,"byte_end":196178,"line_start":1367,"line_end":1367,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196183,"byte_end":196255,"line_start":1368,"line_end":1368,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196260,"byte_end":196312,"line_start":1369,"line_end":1369,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196317,"byte_end":196320,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196325,"byte_end":196398,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196403,"byte_end":196477,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196482,"byte_end":196557,"line_start":1373,"line_end":1373,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196562,"byte_end":196634,"line_start":1374,"line_end":1374,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196639,"byte_end":196651,"line_start":1375,"line_end":1375,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196656,"byte_end":196659,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196664,"byte_end":196739,"line_start":1377,"line_end":1377,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196744,"byte_end":196801,"line_start":1378,"line_end":1378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196806,"byte_end":196809,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196814,"byte_end":196826,"line_start":1380,"line_end":1380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196831,"byte_end":196834,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196839,"byte_end":196888,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196893,"byte_end":196918,"line_start":1383,"line_end":1383,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198029,"byte_end":198041,"line_start":1410,"line_end":1410,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197093,"byte_end":197166,"line_start":1391,"line_end":1391,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197171,"byte_end":197174,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197179,"byte_end":197252,"line_start":1393,"line_end":1393,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197257,"byte_end":197327,"line_start":1394,"line_end":1394,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197332,"byte_end":197407,"line_start":1395,"line_end":1395,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197412,"byte_end":197489,"line_start":1396,"line_end":1396,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197494,"byte_end":197522,"line_start":1397,"line_end":1397,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197527,"byte_end":197530,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197535,"byte_end":197608,"line_start":1399,"line_end":1399,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197613,"byte_end":197688,"line_start":1400,"line_end":1400,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197693,"byte_end":197754,"line_start":1401,"line_end":1401,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197759,"byte_end":197762,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197767,"byte_end":197842,"line_start":1403,"line_end":1403,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197847,"byte_end":197904,"line_start":1404,"line_end":1404,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197909,"byte_end":197912,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197917,"byte_end":197929,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197934,"byte_end":197937,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197942,"byte_end":197991,"line_start":1408,"line_end":1408,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197996,"byte_end":198021,"line_start":1409,"line_end":1409,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200838,"byte_end":200845,"line_start":1470,"line_end":1470,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200535,"byte_end":200608,"line_start":1465,"line_end":1465,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200613,"byte_end":200616,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200621,"byte_end":200690,"line_start":1467,"line_end":1467,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200695,"byte_end":200764,"line_start":1468,"line_end":1468,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200769,"byte_end":200830,"line_start":1469,"line_end":1469,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201301,"byte_end":201312,"line_start":1483,"line_end":1483,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201022,"byte_end":201097,"line_start":1478,"line_end":1478,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201102,"byte_end":201123,"line_start":1479,"line_end":1479,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201128,"byte_end":201131,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201136,"byte_end":201216,"line_start":1481,"line_end":1481,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201221,"byte_end":201293,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201765,"byte_end":201777,"line_start":1496,"line_end":1496,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201486,"byte_end":201562,"line_start":1491,"line_end":1491,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201567,"byte_end":201588,"line_start":1492,"line_end":1492,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201593,"byte_end":201596,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201601,"byte_end":201680,"line_start":1494,"line_end":1494,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201685,"byte_end":201757,"line_start":1495,"line_end":1495,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202053,"byte_end":202068,"line_start":1506,"line_end":1506,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201952,"byte_end":202023,"line_start":1504,"line_end":1504,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202028,"byte_end":202045,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204169,"byte_end":204185,"line_start":1561,"line_end":1561,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202215,"byte_end":202290,"line_start":1513,"line_end":1513,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202295,"byte_end":202305,"line_start":1514,"line_end":1514,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202310,"byte_end":202313,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202318,"byte_end":202391,"line_start":1516,"line_end":1516,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202396,"byte_end":202464,"line_start":1517,"line_end":1517,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202469,"byte_end":202517,"line_start":1518,"line_end":1518,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202522,"byte_end":202597,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202602,"byte_end":202678,"line_start":1520,"line_end":1520,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202683,"byte_end":202709,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202714,"byte_end":202717,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202722,"byte_end":202795,"line_start":1523,"line_end":1523,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202800,"byte_end":202870,"line_start":1524,"line_end":1524,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202875,"byte_end":202915,"line_start":1525,"line_end":1525,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202920,"byte_end":202923,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202928,"byte_end":202982,"line_start":1527,"line_end":1527,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202987,"byte_end":203071,"line_start":1528,"line_end":1528,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203076,"byte_end":203079,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203084,"byte_end":203098,"line_start":1530,"line_end":1530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203103,"byte_end":203106,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203111,"byte_end":203118,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203123,"byte_end":203164,"line_start":1533,"line_end":1533,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203169,"byte_end":203203,"line_start":1534,"line_end":1534,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203208,"byte_end":203263,"line_start":1535,"line_end":1535,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203268,"byte_end":203271,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203276,"byte_end":203311,"line_start":1537,"line_end":1537,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203316,"byte_end":203366,"line_start":1538,"line_end":1538,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203371,"byte_end":203393,"line_start":1539,"line_end":1539,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203398,"byte_end":203408,"line_start":1540,"line_end":1540,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203413,"byte_end":203430,"line_start":1541,"line_end":1541,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203435,"byte_end":203461,"line_start":1542,"line_end":1542,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203466,"byte_end":203521,"line_start":1543,"line_end":1543,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203526,"byte_end":203555,"line_start":1544,"line_end":1544,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203560,"byte_end":203623,"line_start":1545,"line_end":1545,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203628,"byte_end":203674,"line_start":1546,"line_end":1546,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203679,"byte_end":203693,"line_start":1547,"line_end":1547,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203698,"byte_end":203767,"line_start":1548,"line_end":1548,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203772,"byte_end":203797,"line_start":1549,"line_end":1549,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203802,"byte_end":203855,"line_start":1550,"line_end":1550,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203860,"byte_end":203889,"line_start":1551,"line_end":1551,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203894,"byte_end":203907,"line_start":1552,"line_end":1552,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203912,"byte_end":203982,"line_start":1553,"line_end":1553,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203987,"byte_end":204046,"line_start":1554,"line_end":1554,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204051,"byte_end":204081,"line_start":1555,"line_end":1555,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204086,"byte_end":204095,"line_start":1556,"line_end":1556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204100,"byte_end":204105,"line_start":1557,"line_end":1557,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204110,"byte_end":204135,"line_start":1558,"line_end":1558,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204140,"byte_end":204149,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204154,"byte_end":204161,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13121},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339020,"byte_end":339027,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13125},{"krate":0,"index":13126},{"krate":0,"index":13127}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13185},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":301029,"byte_end":301036,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13188}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13254},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":301284,"byte_end":301293,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13257}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13323},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":301594,"byte_end":301604,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13326}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13394},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":341769,"byte_end":341779,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13396}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13432},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":302030,"byte_end":302035,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13435}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13501},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":302312,"byte_end":302318,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13504}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13567},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343127,"byte_end":343133,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":13571},{"krate":0,"index":13572},{"krate":0,"index":13573}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13628},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":345969,"byte_end":345976,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":13631}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":345802,"byte_end":345872,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":345890,"byte_end":345957,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13636},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347061,"byte_end":347071,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":13640},{"krate":0,"index":13641},{"krate":0,"index":13642}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13693},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":348957,"byte_end":348966,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":13697},{"krate":0,"index":13698},{"krate":0,"index":13699},{"krate":0,"index":13700}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13758},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352101,"byte_end":352113,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":13762},{"krate":0,"index":13763},{"krate":0,"index":13764}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13824},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355118,"byte_end":355128,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":13826},{"krate":0,"index":13827}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13870},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357306,"byte_end":357316,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":13873},{"krate":0,"index":13874}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13917},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":358665,"byte_end":358674,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":13919},{"krate":0,"index":13920}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13957},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":360185,"byte_end":360194,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":13959},{"krate":0,"index":13960},{"krate":0,"index":13961}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14000},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363446,"byte_end":363460,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363223,"byte_end":363307,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363308,"byte_end":363311,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363312,"byte_end":363409,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14004},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363467,"byte_end":363477,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14005},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363479,"byte_end":363484,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14021},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":364322,"byte_end":364329,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14026},{"krate":0,"index":14027},{"krate":0,"index":14028},{"krate":0,"index":14029}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4645},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368777,"byte_end":368787,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":366920,"byte_end":366996,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":366997,"byte_end":367000,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367001,"byte_end":367077,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367078,"byte_end":367148,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367149,"byte_end":367208,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367209,"byte_end":367212,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367213,"byte_end":367291,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367292,"byte_end":367369,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367370,"byte_end":367434,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367435,"byte_end":367438,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367439,"byte_end":367511,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367512,"byte_end":367590,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367591,"byte_end":367620,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367621,"byte_end":367624,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367625,"byte_end":367702,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367703,"byte_end":367767,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367768,"byte_end":367820,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367821,"byte_end":367824,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367825,"byte_end":367902,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367903,"byte_end":367975,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":367976,"byte_end":368045,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368046,"byte_end":368124,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368125,"byte_end":368128,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368129,"byte_end":368142,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368143,"byte_end":368146,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368147,"byte_end":368154,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368155,"byte_end":368188,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368189,"byte_end":368212,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368213,"byte_end":368254,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368255,"byte_end":368301,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368302,"byte_end":368305,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368306,"byte_end":368365,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368366,"byte_end":368388,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368389,"byte_end":368423,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368424,"byte_end":368433,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368434,"byte_end":368437,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368438,"byte_end":368461,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368462,"byte_end":368501,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368502,"byte_end":368538,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368539,"byte_end":368582,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368583,"byte_end":368599,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368600,"byte_end":368620,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368621,"byte_end":368630,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368631,"byte_end":368638,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368639,"byte_end":368642,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368643,"byte_end":368708,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368709,"byte_end":368751,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368752,"byte_end":368761,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":368762,"byte_end":368769,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14090},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":369150,"byte_end":369159,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14094},{"krate":0,"index":14095},{"krate":0,"index":14096}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14147},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":371067,"byte_end":371079,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14151},{"krate":0,"index":14152},{"krate":0,"index":14153},{"krate":0,"index":14154},{"krate":0,"index":14155}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14216},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":374623,"byte_end":374635,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14220},{"krate":0,"index":14221},{"krate":0,"index":14222},{"krate":0,"index":14223},{"krate":0,"index":14224}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14290},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":378411,"byte_end":378429,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14292},{"krate":0,"index":14293},{"krate":0,"index":14294}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14338},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":380969,"byte_end":380980,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14340},{"krate":0,"index":14341},{"krate":0,"index":14342}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14381},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":383512,"byte_end":383532,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14385},{"krate":0,"index":14386},{"krate":0,"index":14387},{"krate":0,"index":14388}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14442},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":387794,"byte_end":387807,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":14444},{"krate":0,"index":14445}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":387586,"byte_end":387670,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":387688,"byte_end":387736,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":5020},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305527,"byte_end":305539,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5021},{"krate":0,"index":5023},{"krate":0,"index":5026},{"krate":0,"index":5029},{"krate":0,"index":5032},{"krate":0,"index":5035},{"krate":0,"index":5037},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5044},{"krate":0,"index":5047},{"krate":0,"index":5050},{"krate":0,"index":5054},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5073}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305465,"byte_end":305516,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306081,"byte_end":306089,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305557,"byte_end":305631,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305636,"byte_end":305662,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305667,"byte_end":305670,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305675,"byte_end":305689,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305694,"byte_end":305697,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305702,"byte_end":305709,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305714,"byte_end":305755,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305760,"byte_end":305806,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305811,"byte_end":305814,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305819,"byte_end":305839,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305844,"byte_end":305889,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305894,"byte_end":305925,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305930,"byte_end":305933,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305938,"byte_end":305992,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305997,"byte_end":306048,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306053,"byte_end":306061,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306066,"byte_end":306073,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5023},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306785,"byte_end":306791,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306265,"byte_end":306338,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306343,"byte_end":306374,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306379,"byte_end":306382,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306387,"byte_end":306401,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306406,"byte_end":306409,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306414,"byte_end":306421,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306426,"byte_end":306467,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306472,"byte_end":306518,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306523,"byte_end":306526,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306531,"byte_end":306551,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306556,"byte_end":306597,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306602,"byte_end":306633,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306638,"byte_end":306641,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306646,"byte_end":306699,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306704,"byte_end":306752,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306757,"byte_end":306765,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306770,"byte_end":306777,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307500,"byte_end":307507,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":306981,"byte_end":307052,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307057,"byte_end":307088,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307093,"byte_end":307096,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307101,"byte_end":307115,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307120,"byte_end":307123,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307128,"byte_end":307135,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307140,"byte_end":307181,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307186,"byte_end":307232,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307237,"byte_end":307240,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307245,"byte_end":307265,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307270,"byte_end":307311,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307316,"byte_end":307348,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307353,"byte_end":307356,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307361,"byte_end":307414,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307419,"byte_end":307467,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307472,"byte_end":307480,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307485,"byte_end":307492,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5029},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309112,"byte_end":309120,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307699,"byte_end":307775,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307780,"byte_end":307820,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307825,"byte_end":307828,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307833,"byte_end":307909,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307914,"byte_end":307990,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":307995,"byte_end":308068,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308073,"byte_end":308115,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308120,"byte_end":308123,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308128,"byte_end":308201,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308206,"byte_end":308237,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308242,"byte_end":308245,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308250,"byte_end":308324,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308329,"byte_end":308403,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308408,"byte_end":308424,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308429,"byte_end":308432,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308437,"byte_end":308508,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308513,"byte_end":308539,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308544,"byte_end":308547,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308552,"byte_end":308624,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308629,"byte_end":308678,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308683,"byte_end":308686,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308691,"byte_end":308705,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308710,"byte_end":308713,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308718,"byte_end":308725,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308730,"byte_end":308761,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308766,"byte_end":308790,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308795,"byte_end":308833,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308838,"byte_end":308841,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308846,"byte_end":308902,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308907,"byte_end":308910,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308915,"byte_end":308950,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308955,"byte_end":308994,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":308999,"byte_end":309023,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309028,"byte_end":309044,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309049,"byte_end":309065,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309070,"byte_end":309080,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309085,"byte_end":309092,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309097,"byte_end":309104,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5032},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310272,"byte_end":310279,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309373,"byte_end":309438,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309443,"byte_end":309492,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309497,"byte_end":309500,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309505,"byte_end":309584,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309589,"byte_end":309663,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309668,"byte_end":309744,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309749,"byte_end":309794,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309799,"byte_end":309802,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309807,"byte_end":309882,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309887,"byte_end":309927,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309932,"byte_end":309935,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":309940,"byte_end":310049,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310054,"byte_end":310128,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310133,"byte_end":310149,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310154,"byte_end":310157,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310162,"byte_end":310233,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310238,"byte_end":310264,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5035},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310831,"byte_end":310841,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310528,"byte_end":310602,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310607,"byte_end":310617,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310622,"byte_end":310625,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310630,"byte_end":310700,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310705,"byte_end":310781,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":310786,"byte_end":310823,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311330,"byte_end":311341,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311039,"byte_end":311118,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311123,"byte_end":311126,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311131,"byte_end":311201,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311206,"byte_end":311280,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311285,"byte_end":311322,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5039},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312262,"byte_end":312273,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311544,"byte_end":311597,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311602,"byte_end":311646,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311651,"byte_end":311654,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311659,"byte_end":311708,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311713,"byte_end":311786,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311791,"byte_end":311811,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311816,"byte_end":311819,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311824,"byte_end":311838,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311843,"byte_end":311846,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311851,"byte_end":311858,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311863,"byte_end":311922,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311927,"byte_end":311930,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311935,"byte_end":311954,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311959,"byte_end":311977,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":311982,"byte_end":312054,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312059,"byte_end":312089,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312094,"byte_end":312101,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312106,"byte_end":312180,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312185,"byte_end":312188,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312193,"byte_end":312242,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312247,"byte_end":312254,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5040},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313168,"byte_end":313176,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312429,"byte_end":312503,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312508,"byte_end":312582,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312587,"byte_end":312599,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312604,"byte_end":312607,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312612,"byte_end":312679,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312684,"byte_end":312756,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312761,"byte_end":312800,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312805,"byte_end":312808,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312813,"byte_end":312827,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312832,"byte_end":312835,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312840,"byte_end":312847,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312852,"byte_end":312893,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312898,"byte_end":312944,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312949,"byte_end":312952,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312957,"byte_end":313014,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313019,"byte_end":313022,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313027,"byte_end":313081,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313086,"byte_end":313135,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313140,"byte_end":313148,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313153,"byte_end":313160,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5041},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314528,"byte_end":314540,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313343,"byte_end":313412,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313417,"byte_end":313473,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313478,"byte_end":313481,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313486,"byte_end":313561,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313566,"byte_end":313636,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313641,"byte_end":313679,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313684,"byte_end":313687,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313692,"byte_end":313770,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313775,"byte_end":313835,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313840,"byte_end":313897,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313902,"byte_end":313969,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313974,"byte_end":314004,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314009,"byte_end":314012,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314017,"byte_end":314031,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314036,"byte_end":314039,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314044,"byte_end":314051,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314056,"byte_end":314097,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314102,"byte_end":314126,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314131,"byte_end":314177,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314182,"byte_end":314185,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314190,"byte_end":314211,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314216,"byte_end":314219,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314224,"byte_end":314229,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314234,"byte_end":314295,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314300,"byte_end":314322,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314327,"byte_end":314391,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314396,"byte_end":314407,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314412,"byte_end":314451,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314456,"byte_end":314461,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314466,"byte_end":314469,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314474,"byte_end":314495,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314500,"byte_end":314508,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314513,"byte_end":314520,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5044},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315553,"byte_end":315567,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314804,"byte_end":314878,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314883,"byte_end":314906,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314911,"byte_end":314914,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314919,"byte_end":314950,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":314955,"byte_end":315032,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315037,"byte_end":315066,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315071,"byte_end":315074,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315079,"byte_end":315093,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315098,"byte_end":315101,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315106,"byte_end":315113,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315118,"byte_end":315159,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315164,"byte_end":315188,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315193,"byte_end":315239,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315244,"byte_end":315247,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315252,"byte_end":315321,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315326,"byte_end":315396,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315401,"byte_end":315404,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315409,"byte_end":315476,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315481,"byte_end":315520,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315525,"byte_end":315533,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315538,"byte_end":315545,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5047},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316600,"byte_end":316614,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315844,"byte_end":315918,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315923,"byte_end":315946,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315951,"byte_end":315954,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315959,"byte_end":315990,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":315995,"byte_end":316072,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316077,"byte_end":316106,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316111,"byte_end":316114,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316119,"byte_end":316133,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316138,"byte_end":316141,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316146,"byte_end":316153,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316158,"byte_end":316199,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316204,"byte_end":316228,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316233,"byte_end":316279,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316284,"byte_end":316287,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316292,"byte_end":316368,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316373,"byte_end":316443,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316448,"byte_end":316451,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316456,"byte_end":316523,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316528,"byte_end":316567,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316572,"byte_end":316580,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316585,"byte_end":316592,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5050},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318529,"byte_end":318552,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316891,"byte_end":316973,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316978,"byte_end":317052,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317057,"byte_end":317107,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317112,"byte_end":317115,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317120,"byte_end":317142,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317147,"byte_end":317233,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317238,"byte_end":317323,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317328,"byte_end":317356,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317361,"byte_end":317364,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317369,"byte_end":317444,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317449,"byte_end":317506,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317511,"byte_end":317514,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317519,"byte_end":317533,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317538,"byte_end":317541,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317546,"byte_end":317553,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317558,"byte_end":317599,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317604,"byte_end":317638,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317643,"byte_end":317700,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317705,"byte_end":317708,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317713,"byte_end":317753,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317758,"byte_end":317798,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317803,"byte_end":317844,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317849,"byte_end":317852,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317857,"byte_end":317908,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317913,"byte_end":317966,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317971,"byte_end":317993,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317998,"byte_end":318023,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318028,"byte_end":318090,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318095,"byte_end":318110,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318115,"byte_end":318124,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318129,"byte_end":318135,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318140,"byte_end":318143,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318148,"byte_end":318174,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318179,"byte_end":318246,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318251,"byte_end":318265,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318270,"byte_end":318273,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318278,"byte_end":318339,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318344,"byte_end":318372,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318377,"byte_end":318427,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318432,"byte_end":318440,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318445,"byte_end":318452,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318457,"byte_end":318491,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318496,"byte_end":318521,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320001,"byte_end":320012,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318962,"byte_end":319014,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319019,"byte_end":319086,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319091,"byte_end":319094,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319099,"byte_end":319173,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319178,"byte_end":319259,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319264,"byte_end":319334,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319339,"byte_end":319342,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319347,"byte_end":319415,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319420,"byte_end":319423,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319428,"byte_end":319442,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319447,"byte_end":319450,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319455,"byte_end":319462,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319467,"byte_end":319508,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319513,"byte_end":319544,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319549,"byte_end":319587,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319592,"byte_end":319612,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319617,"byte_end":319620,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319625,"byte_end":319662,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319667,"byte_end":319670,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319675,"byte_end":319702,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319707,"byte_end":319731,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319736,"byte_end":319782,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319787,"byte_end":319796,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319801,"byte_end":319844,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319849,"byte_end":319856,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319861,"byte_end":319864,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319869,"byte_end":319932,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319937,"byte_end":319968,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319973,"byte_end":319981,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319986,"byte_end":319993,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5056},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321827,"byte_end":321837,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320195,"byte_end":320273,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320278,"byte_end":320281,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320286,"byte_end":320371,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320376,"byte_end":320448,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320453,"byte_end":320505,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320510,"byte_end":320513,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320518,"byte_end":320591,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320596,"byte_end":320670,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320675,"byte_end":320750,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320755,"byte_end":320827,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320832,"byte_end":320844,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320849,"byte_end":320852,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320857,"byte_end":320932,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320937,"byte_end":320994,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320999,"byte_end":321002,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321007,"byte_end":321038,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321043,"byte_end":321112,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321117,"byte_end":321146,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321151,"byte_end":321154,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321159,"byte_end":321173,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321178,"byte_end":321181,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321186,"byte_end":321193,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321198,"byte_end":321239,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321244,"byte_end":321306,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321311,"byte_end":321314,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321319,"byte_end":321410,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321415,"byte_end":321457,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321462,"byte_end":321465,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321470,"byte_end":321532,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321537,"byte_end":321610,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321615,"byte_end":321677,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321682,"byte_end":321690,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321695,"byte_end":321702,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321707,"byte_end":321710,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321715,"byte_end":321727,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321732,"byte_end":321735,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321740,"byte_end":321789,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321794,"byte_end":321819,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5057},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323360,"byte_end":323370,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322072,"byte_end":322145,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322150,"byte_end":322184,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322189,"byte_end":322192,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322197,"byte_end":322272,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322277,"byte_end":322352,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322357,"byte_end":322430,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322435,"byte_end":322506,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322511,"byte_end":322561,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322566,"byte_end":322569,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322574,"byte_end":322645,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322650,"byte_end":322653,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322658,"byte_end":322734,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322739,"byte_end":322809,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322814,"byte_end":322839,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322844,"byte_end":322847,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322852,"byte_end":322866,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322871,"byte_end":322878,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322883,"byte_end":322924,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322929,"byte_end":322953,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322958,"byte_end":323015,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323020,"byte_end":323023,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323028,"byte_end":323108,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323113,"byte_end":323156,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323161,"byte_end":323194,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323199,"byte_end":323206,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323211,"byte_end":323214,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323219,"byte_end":323267,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323272,"byte_end":323327,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323332,"byte_end":323340,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323345,"byte_end":323352,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5060},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324997,"byte_end":325011,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323621,"byte_end":323683,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323688,"byte_end":323756,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323761,"byte_end":323795,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323800,"byte_end":323803,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323808,"byte_end":323883,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323888,"byte_end":323963,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323968,"byte_end":324044,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324049,"byte_end":324114,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324119,"byte_end":324122,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324127,"byte_end":324198,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324203,"byte_end":324206,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324211,"byte_end":324287,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324292,"byte_end":324366,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324371,"byte_end":324396,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324401,"byte_end":324404,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324409,"byte_end":324423,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324428,"byte_end":324435,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324440,"byte_end":324481,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324486,"byte_end":324543,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324548,"byte_end":324573,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324578,"byte_end":324581,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324586,"byte_end":324656,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324661,"byte_end":324716,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324721,"byte_end":324783,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324788,"byte_end":324803,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324808,"byte_end":324815,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324820,"byte_end":324823,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324828,"byte_end":324849,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324854,"byte_end":324903,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324908,"byte_end":324964,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324969,"byte_end":324977,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324982,"byte_end":324989,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5064},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326703,"byte_end":326714,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325288,"byte_end":325353,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325358,"byte_end":325361,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325366,"byte_end":325439,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325444,"byte_end":325517,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325522,"byte_end":325595,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325600,"byte_end":325670,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325675,"byte_end":325678,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325683,"byte_end":325697,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325702,"byte_end":325705,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325710,"byte_end":325717,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325722,"byte_end":325763,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325768,"byte_end":325799,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325804,"byte_end":325855,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325860,"byte_end":325880,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325885,"byte_end":325888,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325893,"byte_end":325932,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325937,"byte_end":325976,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325981,"byte_end":326020,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326025,"byte_end":326028,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326033,"byte_end":326060,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326065,"byte_end":326108,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326113,"byte_end":326120,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326125,"byte_end":326152,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326157,"byte_end":326200,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326205,"byte_end":326249,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326254,"byte_end":326261,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326266,"byte_end":326293,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326298,"byte_end":326343,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326348,"byte_end":326393,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326398,"byte_end":326442,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326447,"byte_end":326454,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326459,"byte_end":326462,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326467,"byte_end":326506,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326511,"byte_end":326560,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326565,"byte_end":326614,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326619,"byte_end":326669,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326674,"byte_end":326683,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326688,"byte_end":326695,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5065},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328306,"byte_end":328314,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327019,"byte_end":327089,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327094,"byte_end":327154,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327159,"byte_end":327162,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327167,"byte_end":327237,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327242,"byte_end":327318,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327323,"byte_end":327399,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327404,"byte_end":327474,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327479,"byte_end":327505,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327510,"byte_end":327513,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327518,"byte_end":327598,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327603,"byte_end":327672,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327677,"byte_end":327698,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327703,"byte_end":327706,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327711,"byte_end":327725,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327730,"byte_end":327733,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327738,"byte_end":327745,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327750,"byte_end":327791,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327796,"byte_end":327842,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327847,"byte_end":327850,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327855,"byte_end":327924,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327929,"byte_end":328006,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328011,"byte_end":328044,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328049,"byte_end":328052,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328057,"byte_end":328143,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328148,"byte_end":328234,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328239,"byte_end":328273,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328278,"byte_end":328286,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328291,"byte_end":328298,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329840,"byte_end":329850,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328594,"byte_end":328656,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328661,"byte_end":328736,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328741,"byte_end":328744,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328749,"byte_end":328820,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328825,"byte_end":328901,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328906,"byte_end":328945,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328950,"byte_end":328953,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328958,"byte_end":329044,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329049,"byte_end":329052,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329057,"byte_end":329141,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329146,"byte_end":329202,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329207,"byte_end":329210,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329215,"byte_end":329229,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329234,"byte_end":329237,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329242,"byte_end":329249,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329254,"byte_end":329295,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329300,"byte_end":329331,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329336,"byte_end":329374,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329379,"byte_end":329399,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329404,"byte_end":329407,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329412,"byte_end":329473,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329478,"byte_end":329481,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329486,"byte_end":329513,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329518,"byte_end":329549,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329554,"byte_end":329580,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329585,"byte_end":329655,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329660,"byte_end":329669,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329674,"byte_end":329681,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329686,"byte_end":329689,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329694,"byte_end":329733,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329738,"byte_end":329741,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329746,"byte_end":329806,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329811,"byte_end":329820,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329825,"byte_end":329832,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5070},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332572,"byte_end":332592,"line_start":901,"line_end":901,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330104,"byte_end":330182,"line_start":842,"line_end":842,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330187,"byte_end":330190,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330195,"byte_end":330300,"line_start":844,"line_end":844,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330305,"byte_end":330348,"line_start":845,"line_end":845,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330353,"byte_end":330356,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330361,"byte_end":330429,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330434,"byte_end":330507,"line_start":848,"line_end":848,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330512,"byte_end":330568,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330573,"byte_end":330576,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330581,"byte_end":330656,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330661,"byte_end":330734,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330739,"byte_end":330804,"line_start":853,"line_end":853,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330809,"byte_end":330812,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330817,"byte_end":330892,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330897,"byte_end":330954,"line_start":856,"line_end":856,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330959,"byte_end":330962,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330967,"byte_end":330981,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330986,"byte_end":330989,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330994,"byte_end":331046,"line_start":860,"line_end":860,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331051,"byte_end":331058,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331063,"byte_end":331104,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331109,"byte_end":331143,"line_start":863,"line_end":863,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331148,"byte_end":331205,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331210,"byte_end":331213,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331218,"byte_end":331268,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331273,"byte_end":331323,"line_start":867,"line_end":867,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331328,"byte_end":331331,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331336,"byte_end":331411,"line_start":869,"line_end":869,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331416,"byte_end":331419,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331424,"byte_end":331490,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331495,"byte_end":331498,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331503,"byte_end":331528,"line_start":873,"line_end":873,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331533,"byte_end":331587,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331592,"byte_end":331595,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331600,"byte_end":331625,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331630,"byte_end":331684,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331689,"byte_end":331692,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331697,"byte_end":331741,"line_start":879,"line_end":879,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331746,"byte_end":331782,"line_start":880,"line_end":880,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331787,"byte_end":331794,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331799,"byte_end":331802,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331807,"byte_end":331867,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331872,"byte_end":331879,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331884,"byte_end":331925,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331930,"byte_end":331961,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331966,"byte_end":332017,"line_start":887,"line_end":887,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332022,"byte_end":332025,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332030,"byte_end":332084,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332089,"byte_end":332155,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332160,"byte_end":332163,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332168,"byte_end":332217,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332222,"byte_end":332276,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332281,"byte_end":332284,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332289,"byte_end":332342,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332347,"byte_end":332419,"line_start":896,"line_end":896,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332424,"byte_end":332483,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332488,"byte_end":332495,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332500,"byte_end":332534,"line_start":899,"line_end":899,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332539,"byte_end":332564,"line_start":900,"line_end":900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5071},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335573,"byte_end":335585,"line_start":977,"line_end":977,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332869,"byte_end":332935,"line_start":911,"line_end":911,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332940,"byte_end":332943,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332948,"byte_end":333053,"line_start":913,"line_end":913,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333058,"byte_end":333101,"line_start":914,"line_end":914,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333106,"byte_end":333109,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333114,"byte_end":333182,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333187,"byte_end":333263,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333268,"byte_end":333298,"line_start":918,"line_end":918,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333303,"byte_end":333306,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333311,"byte_end":333386,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333391,"byte_end":333464,"line_start":921,"line_end":921,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333469,"byte_end":333534,"line_start":922,"line_end":922,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333539,"byte_end":333542,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333547,"byte_end":333622,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333627,"byte_end":333684,"line_start":925,"line_end":925,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333689,"byte_end":333692,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333697,"byte_end":333711,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333716,"byte_end":333719,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333724,"byte_end":333774,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333779,"byte_end":333786,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333791,"byte_end":333832,"line_start":931,"line_end":931,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333837,"byte_end":333871,"line_start":932,"line_end":932,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333876,"byte_end":333906,"line_start":933,"line_end":933,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333911,"byte_end":333968,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333973,"byte_end":333976,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333981,"byte_end":334031,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334036,"byte_end":334086,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334091,"byte_end":334094,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334099,"byte_end":334138,"line_start":939,"line_end":939,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334143,"byte_end":334222,"line_start":940,"line_end":940,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334227,"byte_end":334230,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334235,"byte_end":334297,"line_start":942,"line_end":942,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334302,"byte_end":334305,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334310,"byte_end":334373,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334378,"byte_end":334381,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334386,"byte_end":334415,"line_start":946,"line_end":946,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334420,"byte_end":334483,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334488,"byte_end":334518,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334523,"byte_end":334537,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334542,"byte_end":334545,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334550,"byte_end":334575,"line_start":951,"line_end":951,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334580,"byte_end":334634,"line_start":952,"line_end":952,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334639,"byte_end":334693,"line_start":953,"line_end":953,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334698,"byte_end":334701,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334706,"byte_end":334750,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334755,"byte_end":334791,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334796,"byte_end":334803,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334808,"byte_end":334811,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334816,"byte_end":334876,"line_start":959,"line_end":959,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334881,"byte_end":334888,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334893,"byte_end":334934,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334939,"byte_end":334970,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334975,"byte_end":335026,"line_start":963,"line_end":963,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335031,"byte_end":335034,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335039,"byte_end":335093,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335098,"byte_end":335156,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335161,"byte_end":335164,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335169,"byte_end":335218,"line_start":968,"line_end":968,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335223,"byte_end":335277,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335282,"byte_end":335285,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335290,"byte_end":335343,"line_start":971,"line_end":971,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335348,"byte_end":335420,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335425,"byte_end":335484,"line_start":973,"line_end":973,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335489,"byte_end":335496,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335501,"byte_end":335535,"line_start":975,"line_end":975,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335540,"byte_end":335565,"line_start":976,"line_end":976,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5072},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336040,"byte_end":336059,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335932,"byte_end":336010,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336015,"byte_end":336032,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5073},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338353,"byte_end":338368,"line_start":1057,"line_end":1057,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5020},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337131,"byte_end":337213,"line_start":1029,"line_end":1029,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337218,"byte_end":337221,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337226,"byte_end":337341,"line_start":1031,"line_end":1031,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337346,"byte_end":337437,"line_start":1032,"line_end":1032,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337442,"byte_end":337532,"line_start":1033,"line_end":1033,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337537,"byte_end":337622,"line_start":1034,"line_end":1034,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337627,"byte_end":337630,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337635,"byte_end":337699,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337704,"byte_end":337761,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337766,"byte_end":337769,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337774,"byte_end":337788,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337793,"byte_end":337796,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337801,"byte_end":337808,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337813,"byte_end":337854,"line_start":1042,"line_end":1042,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337859,"byte_end":337905,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337910,"byte_end":337944,"line_start":1044,"line_end":1044,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337949,"byte_end":337952,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337957,"byte_end":338018,"line_start":1046,"line_end":1046,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338023,"byte_end":338069,"line_start":1047,"line_end":1047,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338074,"byte_end":338103,"line_start":1048,"line_end":1048,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338108,"byte_end":338111,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338116,"byte_end":338172,"line_start":1050,"line_end":1050,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338177,"byte_end":338215,"line_start":1051,"line_end":1051,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338220,"byte_end":338228,"line_start":1052,"line_end":1052,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338233,"byte_end":338240,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338245,"byte_end":338267,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338322,"byte_end":338345,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":14461},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392668,"byte_end":392672,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14463}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392546,"byte_end":392583,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392608,"byte_end":392656,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5177},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393190,"byte_end":393194,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392724,"byte_end":392788,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392789,"byte_end":392817,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392818,"byte_end":392821,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392822,"byte_end":392895,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392896,"byte_end":392951,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392952,"byte_end":392955,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392956,"byte_end":392963,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392964,"byte_end":393005,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393006,"byte_end":393049,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393050,"byte_end":393053,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393054,"byte_end":393098,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393099,"byte_end":393164,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393165,"byte_end":393174,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393175,"byte_end":393182,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14470},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":393885,"byte_end":393891,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14472}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":393761,"byte_end":393800,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":393825,"byte_end":393873,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5212},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394415,"byte_end":394421,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":393913,"byte_end":393973,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":393974,"byte_end":393977,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":393978,"byte_end":394045,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394046,"byte_end":394118,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394119,"byte_end":394176,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394177,"byte_end":394180,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394181,"byte_end":394188,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394189,"byte_end":394230,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394231,"byte_end":394274,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394275,"byte_end":394278,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394279,"byte_end":394314,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394315,"byte_end":394389,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394390,"byte_end":394399,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394400,"byte_end":394407,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14479},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395412,"byte_end":395422,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14481}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395110,"byte_end":395170,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395171,"byte_end":395223,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395224,"byte_end":395227,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395228,"byte_end":395291,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395292,"byte_end":395327,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395352,"byte_end":395400,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5265},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397710,"byte_end":397721,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395938,"byte_end":396009,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396010,"byte_end":396077,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396078,"byte_end":396081,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396082,"byte_end":396154,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396155,"byte_end":396158,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396159,"byte_end":396233,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396234,"byte_end":396286,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396287,"byte_end":396290,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396291,"byte_end":396363,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396364,"byte_end":396437,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396438,"byte_end":396475,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396476,"byte_end":396479,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396480,"byte_end":396494,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396495,"byte_end":396498,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396499,"byte_end":396515,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396516,"byte_end":396519,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396520,"byte_end":396527,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396528,"byte_end":396569,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396570,"byte_end":396613,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396614,"byte_end":396617,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396618,"byte_end":396686,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396687,"byte_end":396765,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396766,"byte_end":396797,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396798,"byte_end":396819,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396820,"byte_end":396823,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396824,"byte_end":396858,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396859,"byte_end":396914,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396915,"byte_end":396918,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396919,"byte_end":396972,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":396973,"byte_end":397026,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397027,"byte_end":397080,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397081,"byte_end":397090,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397091,"byte_end":397098,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397099,"byte_end":397102,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397103,"byte_end":397139,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397140,"byte_end":397143,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397144,"byte_end":397155,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397156,"byte_end":397197,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397198,"byte_end":397241,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397242,"byte_end":397245,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397246,"byte_end":397295,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397296,"byte_end":397317,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397318,"byte_end":397395,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397396,"byte_end":397429,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397430,"byte_end":397433,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397434,"byte_end":397477,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397478,"byte_end":397521,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397522,"byte_end":397565,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397566,"byte_end":397609,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397610,"byte_end":397613,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397614,"byte_end":397643,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397644,"byte_end":397684,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397685,"byte_end":397694,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":397695,"byte_end":397702,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14488},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398112,"byte_end":398117,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14490}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":397996,"byte_end":398034,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398052,"byte_end":398100,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5299},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398286,"byte_end":398291,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398156,"byte_end":398204,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398205,"byte_end":398208,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398209,"byte_end":398278,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5351},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399376,"byte_end":399380,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399069,"byte_end":399110,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399111,"byte_end":399114,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399115,"byte_end":399122,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399123,"byte_end":399164,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399165,"byte_end":399208,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399209,"byte_end":399212,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399213,"byte_end":399257,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399258,"byte_end":399313,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399314,"byte_end":399350,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399351,"byte_end":399360,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399361,"byte_end":399368,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14499},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399642,"byte_end":399646,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14501}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14530},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":400822,"byte_end":400829,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14532}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":400702,"byte_end":400744,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":400762,"byte_end":400810,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5395},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401005,"byte_end":401012,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":400873,"byte_end":400927,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":400928,"byte_end":400931,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":400932,"byte_end":400997,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5437},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401855,"byte_end":401861,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5439}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401754,"byte_end":401794,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401795,"byte_end":401843,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5445},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402549,"byte_end":402556,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402061,"byte_end":402134,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402135,"byte_end":402138,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402139,"byte_end":402198,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402199,"byte_end":402202,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402203,"byte_end":402217,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402218,"byte_end":402221,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402222,"byte_end":402229,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402230,"byte_end":402263,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402264,"byte_end":402292,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402293,"byte_end":402296,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402297,"byte_end":402326,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402327,"byte_end":402330,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402331,"byte_end":402395,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402396,"byte_end":402449,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402450,"byte_end":402471,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402472,"byte_end":402525,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402526,"byte_end":402533,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402534,"byte_end":402541,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14541},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":403317,"byte_end":403330,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":14543}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5486},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405311,"byte_end":405325,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404430,"byte_end":404543,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404544,"byte_end":404547,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404548,"byte_end":404643,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404644,"byte_end":404647,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404648,"byte_end":404662,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404663,"byte_end":404666,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404667,"byte_end":404674,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404675,"byte_end":404716,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404717,"byte_end":404760,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404761,"byte_end":404789,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404790,"byte_end":404793,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404794,"byte_end":404867,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404868,"byte_end":404921,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404922,"byte_end":404975,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404976,"byte_end":405013,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405014,"byte_end":405017,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405018,"byte_end":405086,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405087,"byte_end":405115,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405116,"byte_end":405129,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405130,"byte_end":405139,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405140,"byte_end":405192,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405193,"byte_end":405247,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405248,"byte_end":405285,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405286,"byte_end":405295,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":405296,"byte_end":405303,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14582},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":405858,"byte_end":405864,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":14585}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5529},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406890,"byte_end":406896,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":405986,"byte_end":406054,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406055,"byte_end":406131,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406132,"byte_end":406180,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406181,"byte_end":406184,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406185,"byte_end":406260,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406261,"byte_end":406330,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406331,"byte_end":406358,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406359,"byte_end":406362,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406363,"byte_end":406434,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406435,"byte_end":406455,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406456,"byte_end":406459,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406460,"byte_end":406475,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406476,"byte_end":406479,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406480,"byte_end":406491,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406492,"byte_end":406533,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406534,"byte_end":406589,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406590,"byte_end":406593,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406594,"byte_end":406619,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406620,"byte_end":406646,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406647,"byte_end":406650,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406651,"byte_end":406689,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406690,"byte_end":406693,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406694,"byte_end":406715,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406716,"byte_end":406752,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406753,"byte_end":406805,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406806,"byte_end":406858,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406859,"byte_end":406864,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406865,"byte_end":406874,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":406875,"byte_end":406882,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407365,"byte_end":407372,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407257,"byte_end":407331,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407336,"byte_end":407353,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5537},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407700,"byte_end":407707,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407438,"byte_end":407506,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407511,"byte_end":407542,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407547,"byte_end":407550,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407555,"byte_end":407628,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407633,"byte_end":407688,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5538},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408054,"byte_end":408065,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407785,"byte_end":407860,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407865,"byte_end":407896,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407901,"byte_end":407904,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407909,"byte_end":407982,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407987,"byte_end":408042,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5539},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408439,"byte_end":408449,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408203,"byte_end":408266,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408271,"byte_end":408274,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408279,"byte_end":408351,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408356,"byte_end":408427,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14621},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409391,"byte_end":409395,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":14620},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409360,"byte_end":409386,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14623},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409433,"byte_end":409438,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":14620},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409401,"byte_end":409428,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":14620},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409345,"byte_end":409353,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":14621},{"krate":0,"index":14623}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409218,"byte_end":409284,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409519,"byte_end":409525,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409463,"byte_end":409507,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":14639},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409997,"byte_end":410015,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":14644},{"krate":0,"index":14645},{"krate":0,"index":14646},{"krate":0,"index":14647}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5595},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412307,"byte_end":412327,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410178,"byte_end":410255,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410256,"byte_end":410336,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410337,"byte_end":410419,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410420,"byte_end":410485,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410486,"byte_end":410489,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410490,"byte_end":410565,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410566,"byte_end":410635,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410636,"byte_end":410663,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410664,"byte_end":410667,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410668,"byte_end":410739,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410740,"byte_end":410760,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410761,"byte_end":410764,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410765,"byte_end":410780,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410781,"byte_end":410784,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410785,"byte_end":410801,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410802,"byte_end":410866,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410867,"byte_end":410870,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410871,"byte_end":410882,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410883,"byte_end":410924,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":410925,"byte_end":411004,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411005,"byte_end":411008,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411009,"byte_end":411034,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411035,"byte_end":411061,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411062,"byte_end":411065,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411066,"byte_end":411130,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411131,"byte_end":411205,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411206,"byte_end":411276,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411277,"byte_end":411328,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411329,"byte_end":411388,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411389,"byte_end":411392,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411393,"byte_end":411456,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411457,"byte_end":411460,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411461,"byte_end":411482,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411483,"byte_end":411538,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411539,"byte_end":411591,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411592,"byte_end":411597,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411598,"byte_end":411607,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411608,"byte_end":411615,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411616,"byte_end":411619,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411620,"byte_end":411639,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411640,"byte_end":411707,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411708,"byte_end":411784,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411785,"byte_end":411788,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411789,"byte_end":411800,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411801,"byte_end":411842,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411843,"byte_end":411922,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411923,"byte_end":411926,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411927,"byte_end":411952,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411953,"byte_end":411979,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411980,"byte_end":411983,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":411984,"byte_end":412037,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412038,"byte_end":412041,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412042,"byte_end":412102,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412103,"byte_end":412106,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412107,"byte_end":412128,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412129,"byte_end":412169,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412170,"byte_end":412222,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412223,"byte_end":412275,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412276,"byte_end":412281,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412282,"byte_end":412291,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412292,"byte_end":412299,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5605},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412944,"byte_end":412951,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412836,"byte_end":412910,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412915,"byte_end":412932,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413307,"byte_end":413314,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413045,"byte_end":413113,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413118,"byte_end":413149,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413154,"byte_end":413157,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413162,"byte_end":413235,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413240,"byte_end":413295,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413689,"byte_end":413700,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413420,"byte_end":413495,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413500,"byte_end":413531,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413536,"byte_end":413539,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413544,"byte_end":413617,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413622,"byte_end":413677,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":414106,"byte_end":414116,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413870,"byte_end":413933,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413938,"byte_end":413941,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":413946,"byte_end":414018,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":414023,"byte_end":414094,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":5677},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417794,"byte_end":417800,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416352,"byte_end":416422,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416423,"byte_end":416426,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416427,"byte_end":416496,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416497,"byte_end":416578,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416579,"byte_end":416610,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416611,"byte_end":416614,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416615,"byte_end":416694,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416695,"byte_end":416774,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416775,"byte_end":416829,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416830,"byte_end":416833,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416834,"byte_end":416914,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416915,"byte_end":416985,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":416986,"byte_end":417008,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417009,"byte_end":417012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417013,"byte_end":417090,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417091,"byte_end":417163,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417164,"byte_end":417241,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417242,"byte_end":417302,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417303,"byte_end":417306,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417307,"byte_end":417320,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417321,"byte_end":417324,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417325,"byte_end":417332,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417333,"byte_end":417374,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417375,"byte_end":417418,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417419,"byte_end":417422,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417423,"byte_end":417478,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417479,"byte_end":417502,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417503,"byte_end":417542,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417543,"byte_end":417580,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417581,"byte_end":417620,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417621,"byte_end":417637,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417638,"byte_end":417654,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417655,"byte_end":417664,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417665,"byte_end":417672,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417673,"byte_end":417676,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417677,"byte_end":417729,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417730,"byte_end":417768,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417769,"byte_end":417778,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":417779,"byte_end":417786,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14708},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418147,"byte_end":418153,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":14712},{"krate":0,"index":14713}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5777},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423204,"byte_end":423218,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5782}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421138,"byte_end":421172,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421173,"byte_end":421176,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421177,"byte_end":421256,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421257,"byte_end":421328,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421329,"byte_end":421405,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421406,"byte_end":421454,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421455,"byte_end":421458,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421459,"byte_end":421538,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421539,"byte_end":421614,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421615,"byte_end":421693,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421694,"byte_end":421774,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421775,"byte_end":421804,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421805,"byte_end":421808,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421809,"byte_end":421887,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421888,"byte_end":421962,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":421963,"byte_end":422038,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422039,"byte_end":422114,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422115,"byte_end":422190,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422191,"byte_end":422249,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422250,"byte_end":422253,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422254,"byte_end":422327,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422328,"byte_end":422406,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422407,"byte_end":422465,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422466,"byte_end":422539,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422540,"byte_end":422608,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422609,"byte_end":422685,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422686,"byte_end":422754,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422755,"byte_end":422808,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422809,"byte_end":422812,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422813,"byte_end":422879,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422880,"byte_end":422959,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":422960,"byte_end":423007,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423008,"byte_end":423011,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423012,"byte_end":423085,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423086,"byte_end":423143,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423144,"byte_end":423192,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5787},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423726,"byte_end":423729,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423506,"byte_end":423550,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423555,"byte_end":423558,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423563,"byte_end":423638,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423643,"byte_end":423714,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5788},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424226,"byte_end":424229,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423953,"byte_end":424010,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424015,"byte_end":424018,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424023,"byte_end":424086,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424091,"byte_end":424155,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424160,"byte_end":424214,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424387,"byte_end":424395,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424324,"byte_end":424375,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5790},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424819,"byte_end":424823,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424500,"byte_end":424533,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424538,"byte_end":424541,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424546,"byte_end":424622,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424627,"byte_end":424701,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424706,"byte_end":424779,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":424784,"byte_end":424807,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":5817},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":5818},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5828},{"krate":0,"index":5831},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5841},{"krate":0,"index":5844},{"krate":0,"index":5845},{"krate":0,"index":5847},{"krate":0,"index":5850},{"krate":0,"index":5853},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5876},{"krate":0,"index":5879},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5886},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5893},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5900},{"krate":0,"index":5903},{"krate":0,"index":5906},{"krate":0,"index":5909},{"krate":0,"index":5912},{"krate":0,"index":5918},{"krate":0,"index":5985},{"krate":0,"index":5986},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5995},{"krate":0,"index":5998},{"krate":0,"index":6001},{"krate":0,"index":6065},{"krate":0,"index":6068},{"krate":0,"index":6127},{"krate":0,"index":6128},{"krate":0,"index":6131},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6140},{"krate":0,"index":6142},{"krate":0,"index":6144},{"krate":0,"index":6146},{"krate":0,"index":6148},{"krate":0,"index":6150},{"krate":0,"index":6153},{"krate":0,"index":6168},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6188},{"krate":0,"index":6191},{"krate":0,"index":6197},{"krate":0,"index":6203},{"krate":0,"index":6208},{"krate":0,"index":6213},{"krate":0,"index":6216}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149933,"byte_end":149967,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":149968,"byte_end":149993,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427188,"byte_end":427220,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427221,"byte_end":427224,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427225,"byte_end":427300,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":427301,"byte_end":427358,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14801},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455205,"byte_end":455215,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":14804},{"krate":0,"index":14805},{"krate":0,"index":14806}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455117,"byte_end":455176,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14811},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455452,"byte_end":455459,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455364,"byte_end":455423,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14820},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455600,"byte_end":455610,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":14823},{"krate":0,"index":14824},{"krate":0,"index":14825},{"krate":0,"index":14826}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455510,"byte_end":455571,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14831},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455898,"byte_end":455902,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455804,"byte_end":455869,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14840},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":456039,"byte_end":456047,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":14842},{"krate":0,"index":14843}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":455953,"byte_end":456010,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6135},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430628,"byte_end":430644,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6137},{"krate":0,"index":6138},{"krate":0,"index":6139}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429533,"byte_end":429586,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429587,"byte_end":429590,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429591,"byte_end":429659,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429660,"byte_end":429733,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429734,"byte_end":429810,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429811,"byte_end":429855,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429856,"byte_end":429859,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429860,"byte_end":429938,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429939,"byte_end":429997,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":429998,"byte_end":430062,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430063,"byte_end":430116,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430117,"byte_end":430196,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430197,"byte_end":430226,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430227,"byte_end":430230,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430231,"byte_end":430301,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430302,"byte_end":430379,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430380,"byte_end":430431,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430432,"byte_end":430435,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430436,"byte_end":430509,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430510,"byte_end":430567,"line_start":80,"line_end":80,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430568,"byte_end":430616,"line_start":81,"line_end":81,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6155},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":433261,"byte_end":433264,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":432990,"byte_end":433039,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":433044,"byte_end":433047,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":433052,"byte_end":433119,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":433124,"byte_end":433198,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":433203,"byte_end":433249,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434259,"byte_end":434262,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434121,"byte_end":434176,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434181,"byte_end":434184,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434189,"byte_end":434247,"line_start":170,"line_end":170,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434426,"byte_end":434434,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434364,"byte_end":434414,"line_start":176,"line_end":176,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6158},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":435017,"byte_end":435021,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434647,"byte_end":434678,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434683,"byte_end":434686,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434691,"byte_end":434761,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434766,"byte_end":434852,"line_start":186,"line_end":186,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434857,"byte_end":434933,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":434938,"byte_end":435005,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6159},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436296,"byte_end":436300,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436214,"byte_end":436284,"line_start":216,"line_end":216,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436498,"byte_end":436510,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436416,"byte_end":436486,"line_start":224,"line_end":224,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6161},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436839,"byte_end":436847,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436758,"byte_end":436827,"line_start":232,"line_end":232,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":437054,"byte_end":437066,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":436973,"byte_end":437042,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451441,"byte_end":451446,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451388,"byte_end":451429,"line_start":572,"line_end":572,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6223},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6224},{"krate":0,"index":6225},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6231},{"krate":0,"index":6234},{"krate":0,"index":6237},{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6244},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6251},{"krate":0,"index":6254},{"krate":0,"index":6257},{"krate":0,"index":6260},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":14847},{"krate":0,"index":14850},{"krate":0,"index":6273},{"krate":0,"index":6276},{"krate":0,"index":6285},{"krate":0,"index":6288},{"krate":0,"index":6292},{"krate":0,"index":6295},{"krate":0,"index":6297},{"krate":0,"index":6301},{"krate":0,"index":6305},{"krate":0,"index":6310},{"krate":0,"index":6316},{"krate":0,"index":14880},{"krate":0,"index":14885},{"krate":0,"index":14889},{"krate":0,"index":14894},{"krate":0,"index":14898},{"krate":0,"index":14902},{"krate":0,"index":6322},{"krate":0,"index":6328},{"krate":0,"index":6330},{"krate":0,"index":6336},{"krate":0,"index":6338},{"krate":0,"index":6343}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150149,"byte_end":150183,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150184,"byte_end":150209,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":468392,"byte_end":468423,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":14847},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469463,"byte_end":469472,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":14849}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6278},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469954,"byte_end":469957,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469754,"byte_end":469793,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469798,"byte_end":469801,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469806,"byte_end":469876,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469881,"byte_end":469942,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6279},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470167,"byte_end":470170,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470029,"byte_end":470084,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470089,"byte_end":470092,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470097,"byte_end":470155,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6280},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470286,"byte_end":470294,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470225,"byte_end":470274,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6281},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470656,"byte_end":470660,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470353,"byte_end":470384,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470389,"byte_end":470392,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470397,"byte_end":470469,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470474,"byte_end":470548,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470553,"byte_end":470621,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470626,"byte_end":470644,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6282},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470826,"byte_end":470830,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470744,"byte_end":470814,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6283},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470980,"byte_end":470988,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":470899,"byte_end":470968,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6284},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":471124,"byte_end":471129,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":471071,"byte_end":471112,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6295},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472836,"byte_end":472846,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472215,"byte_end":472289,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472290,"byte_end":472293,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472294,"byte_end":472373,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472374,"byte_end":472425,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472426,"byte_end":472500,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472501,"byte_end":472560,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472561,"byte_end":472564,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472565,"byte_end":472637,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472638,"byte_end":472688,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472689,"byte_end":472692,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472693,"byte_end":472770,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472771,"byte_end":472828,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14880},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474153,"byte_end":474157,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474063,"byte_end":474124,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14889},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474310,"byte_end":474317,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474222,"byte_end":474281,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14898},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474471,"byte_end":474479,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474385,"byte_end":474442,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6366},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476494,"byte_end":476503,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476124,"byte_end":476211,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476212,"byte_end":476215,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476216,"byte_end":476292,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476293,"byte_end":476346,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476347,"byte_end":476350,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476351,"byte_end":476428,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":476429,"byte_end":476486,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6400},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6405},{"krate":0,"index":6408},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6421},{"krate":0,"index":6424},{"krate":0,"index":6427},{"krate":0,"index":6430},{"krate":0,"index":6433},{"krate":0,"index":6436},{"krate":0,"index":6439},{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6452},{"krate":0,"index":6455},{"krate":0,"index":6458},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6496}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476731,"byte_end":476764,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476765,"byte_end":476768,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476769,"byte_end":476794,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476795,"byte_end":476798,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476799,"byte_end":476847,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476848,"byte_end":476901,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476902,"byte_end":476950,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476951,"byte_end":476998,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":476999,"byte_end":477002,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477003,"byte_end":477077,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":477078,"byte_end":477150,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6486},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478400,"byte_end":478408,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6487}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478357,"byte_end":478389,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6487},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479405,"byte_end":479410,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6486},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478422,"byte_end":478487,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478492,"byte_end":478507,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478512,"byte_end":478515,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478520,"byte_end":478590,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478595,"byte_end":478614,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478619,"byte_end":478622,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478627,"byte_end":478696,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478701,"byte_end":478774,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478779,"byte_end":478818,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478823,"byte_end":478826,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478831,"byte_end":478897,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478902,"byte_end":478968,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478973,"byte_end":479044,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479049,"byte_end":479105,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479110,"byte_end":479113,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479118,"byte_end":479125,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479130,"byte_end":479168,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479173,"byte_end":479205,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479210,"byte_end":479213,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479218,"byte_end":479264,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479269,"byte_end":479272,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479277,"byte_end":479314,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479319,"byte_end":479355,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479360,"byte_end":479367,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":479372,"byte_end":479397,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6489},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481164,"byte_end":481177,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6490}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481116,"byte_end":481153,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6490},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482220,"byte_end":482231,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6489},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481196,"byte_end":481261,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481266,"byte_end":481281,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481286,"byte_end":481289,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481294,"byte_end":481364,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481369,"byte_end":481388,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481393,"byte_end":481396,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481401,"byte_end":481470,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481475,"byte_end":481548,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481553,"byte_end":481592,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481597,"byte_end":481600,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481605,"byte_end":481671,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481676,"byte_end":481742,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481747,"byte_end":481818,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481823,"byte_end":481879,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481884,"byte_end":481887,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481892,"byte_end":481899,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481904,"byte_end":481941,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481946,"byte_end":481983,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481988,"byte_end":481991,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481996,"byte_end":482032,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482037,"byte_end":482074,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482079,"byte_end":482082,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482087,"byte_end":482124,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482129,"byte_end":482170,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482175,"byte_end":482182,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":482187,"byte_end":482212,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6499},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","parent":null,"children":[{"krate":0,"index":6500}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483636,"byte_end":483678,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483679,"byte_end":483682,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483683,"byte_end":483749,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6500},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":484386,"byte_end":484391,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483751,"byte_end":483786,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483787,"byte_end":483790,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483791,"byte_end":483866,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483867,"byte_end":483904,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483905,"byte_end":483908,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483909,"byte_end":483973,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483974,"byte_end":483977,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":483978,"byte_end":484049,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":484050,"byte_end":484101,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":484102,"byte_end":484194,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":484195,"byte_end":484198,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":484199,"byte_end":484270,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":484271,"byte_end":484376,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6501},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":6502},{"krate":0,"index":6505},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6512},{"krate":0,"index":6515},{"krate":0,"index":6516},{"krate":0,"index":6519},{"krate":0,"index":6522},{"krate":0,"index":6525},{"krate":0,"index":6528},{"krate":0,"index":6531},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6538},{"krate":0,"index":6541},{"krate":0,"index":6544},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6550},{"krate":0,"index":6637},{"krate":0,"index":6640},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6819},{"krate":0,"index":6822},{"krate":0,"index":6870},{"krate":0,"index":6873},{"krate":0,"index":6929},{"krate":0,"index":6932},{"krate":0,"index":6962},{"krate":0,"index":6965},{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7014},{"krate":0,"index":7017},{"krate":0,"index":7055},{"krate":0,"index":7056},{"krate":0,"index":7059},{"krate":0,"index":7062},{"krate":0,"index":7122},{"krate":0,"index":7125},{"krate":0,"index":7159},{"krate":0,"index":7160},{"krate":0,"index":7163},{"krate":0,"index":7166},{"krate":0,"index":7197},{"krate":0,"index":7200},{"krate":0,"index":7230},{"krate":0,"index":7233},{"krate":0,"index":7272},{"krate":0,"index":7275},{"krate":0,"index":7305},{"krate":0,"index":7308},{"krate":0,"index":7342},{"krate":0,"index":7345},{"krate":0,"index":7381},{"krate":0,"index":7384},{"krate":0,"index":7429},{"krate":0,"index":7432},{"krate":0,"index":7476},{"krate":0,"index":7479},{"krate":0,"index":7528},{"krate":0,"index":7531},{"krate":0,"index":7569},{"krate":0,"index":7572},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7611},{"krate":0,"index":7614},{"krate":0,"index":7648},{"krate":0,"index":7651},{"krate":0,"index":7686},{"krate":0,"index":7687},{"krate":0,"index":7690},{"krate":0,"index":7693},{"krate":0,"index":7772},{"krate":0,"index":7773},{"krate":0,"index":7776},{"krate":0,"index":7777},{"krate":0,"index":7779},{"krate":0,"index":7782},{"krate":0,"index":7825},{"krate":0,"index":7828},{"krate":0,"index":7855},{"krate":0,"index":7858},{"krate":0,"index":7888},{"krate":0,"index":7891},{"krate":0,"index":7925},{"krate":0,"index":7928},{"krate":0,"index":7964},{"krate":0,"index":7967},{"krate":0,"index":7982},{"krate":0,"index":7984},{"krate":0,"index":7993},{"krate":0,"index":7995},{"krate":0,"index":7998},{"krate":0,"index":8000},{"krate":0,"index":8008},{"krate":0,"index":8010},{"krate":0,"index":8012}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484422,"byte_end":484443,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484444,"byte_end":484447,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484448,"byte_end":484521,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484522,"byte_end":484601,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484602,"byte_end":484675,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484676,"byte_end":484751,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484752,"byte_end":484831,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484832,"byte_end":484907,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484908,"byte_end":484936,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484937,"byte_end":484940,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":484941,"byte_end":485020,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485021,"byte_end":485099,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485100,"byte_end":485176,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485177,"byte_end":485219,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485220,"byte_end":485223,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485224,"byte_end":485288,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":485289,"byte_end":485346,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14905},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512433,"byte_end":512443,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":511784,"byte_end":511849,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":511850,"byte_end":511899,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":511900,"byte_end":511971,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":511972,"byte_end":511975,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":511976,"byte_end":512052,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512053,"byte_end":512124,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512125,"byte_end":512193,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512194,"byte_end":512262,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512263,"byte_end":512338,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512339,"byte_end":512353,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6595},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513008,"byte_end":513011,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512938,"byte_end":512996,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6596},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513120,"byte_end":513127,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513057,"byte_end":513108,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6597},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513241,"byte_end":513248,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513170,"byte_end":513229,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6598},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513369,"byte_end":513379,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513303,"byte_end":513357,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":14938},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518245,"byte_end":518254,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":14940},{"krate":0,"index":14941},{"krate":0,"index":14942},{"krate":0,"index":14943}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6698},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518549,"byte_end":518552,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518407,"byte_end":518499,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518504,"byte_end":518537,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6699},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518714,"byte_end":518727,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518637,"byte_end":518702,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6700},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519233,"byte_end":519239,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519073,"byte_end":519129,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519134,"byte_end":519137,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519142,"byte_end":519221,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":6704},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519888,"byte_end":519901,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"pub fn seek_relative(Pin<&mut Self>, i64) -> SeeKRelative<, R>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519559,"byte_end":519646,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519651,"byte_end":519721,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519726,"byte_end":519810,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519815,"byte_end":519876,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6705},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":520371,"byte_end":520389,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"pub fn poll_seek_relative(Pin<&mut Self>, &mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":520031,"byte_end":520129,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":520134,"byte_end":520204,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":520209,"byte_end":520293,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":520298,"byte_end":520359,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14991},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":526585,"byte_end":526597,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":14994},{"krate":0,"index":14995},{"krate":0,"index":14996}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":526420,"byte_end":526507,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":526525,"byte_end":526573,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":15001},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":528672,"byte_end":528681,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":15003},{"krate":0,"index":15004},{"krate":0,"index":15005}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6792},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":528956,"byte_end":528959,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":528814,"byte_end":528906,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":528911,"byte_end":528944,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6793},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":529121,"byte_end":529134,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":529044,"byte_end":529109,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6795},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":530257,"byte_end":530263,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":530189,"byte_end":530245,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15055},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535352,"byte_end":535362,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":15057}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6853},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535617,"byte_end":535620,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535466,"byte_end":535554,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535559,"byte_end":535605,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6854},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535786,"byte_end":535799,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535708,"byte_end":535774,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6856},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536373,"byte_end":536379,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536294,"byte_end":536361,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6857},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536557,"byte_end":536564,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536442,"byte_end":536523,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536528,"byte_end":536545,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":15086},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540401,"byte_end":540406,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":15089},{"krate":0,"index":15090},{"krate":0,"index":15091}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6910},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540772,"byte_end":540779,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540698,"byte_end":540760,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6911},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541111,"byte_end":541118,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540848,"byte_end":540918,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540923,"byte_end":540926,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540931,"byte_end":541004,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541009,"byte_end":541082,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541087,"byte_end":541099,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6912},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541477,"byte_end":541488,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541207,"byte_end":541284,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541289,"byte_end":541292,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541297,"byte_end":541370,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541375,"byte_end":541448,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541453,"byte_end":541465,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6913},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541691,"byte_end":541701,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541623,"byte_end":541679,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15135},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544231,"byte_end":544236,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15138}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544069,"byte_end":544134,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544152,"byte_end":544219,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":7002},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545789,"byte_end":545793,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":544940,"byte_end":545015,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545016,"byte_end":545019,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545020,"byte_end":545103,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545104,"byte_end":545184,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545185,"byte_end":545257,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545258,"byte_end":545271,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545272,"byte_end":545275,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545276,"byte_end":545323,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545324,"byte_end":545327,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545328,"byte_end":545342,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545343,"byte_end":545346,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545347,"byte_end":545354,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545355,"byte_end":545396,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545397,"byte_end":545448,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545449,"byte_end":545452,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545453,"byte_end":545496,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545497,"byte_end":545544,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545545,"byte_end":545548,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545549,"byte_end":545602,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545603,"byte_end":545629,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545630,"byte_end":545633,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545634,"byte_end":545659,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545660,"byte_end":545713,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545714,"byte_end":545773,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":545774,"byte_end":545781,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15152},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":546138,"byte_end":546142,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":15156}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7047},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547542,"byte_end":547550,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":546686,"byte_end":546761,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":546762,"byte_end":546765,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":546766,"byte_end":546852,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":546853,"byte_end":546933,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":546934,"byte_end":547006,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547007,"byte_end":547020,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547021,"byte_end":547024,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547025,"byte_end":547072,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547073,"byte_end":547076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547077,"byte_end":547091,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547092,"byte_end":547095,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547096,"byte_end":547103,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547104,"byte_end":547145,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547146,"byte_end":547197,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547198,"byte_end":547201,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547202,"byte_end":547245,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547246,"byte_end":547293,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547294,"byte_end":547297,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547298,"byte_end":547355,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547356,"byte_end":547382,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547383,"byte_end":547386,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547387,"byte_end":547412,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547413,"byte_end":547466,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547467,"byte_end":547526,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547527,"byte_end":547534,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15206},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":547883,"byte_end":547890,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":15210},{"krate":0,"index":15211},{"krate":0,"index":15212}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15259},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549812,"byte_end":549818,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":15261}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549045,"byte_end":549108,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549109,"byte_end":549142,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549143,"byte_end":549146,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549147,"byte_end":549215,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549216,"byte_end":549298,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549299,"byte_end":549378,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549379,"byte_end":549404,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549405,"byte_end":549408,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549409,"byte_end":549475,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549476,"byte_end":549543,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549544,"byte_end":549577,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549578,"byte_end":549581,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549582,"byte_end":549621,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549622,"byte_end":549661,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549662,"byte_end":549703,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549704,"byte_end":549767,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7100},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550398,"byte_end":550401,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549877,"byte_end":549952,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549957,"byte_end":549960,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549965,"byte_end":550039,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550044,"byte_end":550112,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550117,"byte_end":550155,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550160,"byte_end":550163,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550168,"byte_end":550182,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550187,"byte_end":550190,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550195,"byte_end":550202,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550207,"byte_end":550235,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550240,"byte_end":550243,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550248,"byte_end":550287,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550292,"byte_end":550340,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550345,"byte_end":550374,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550379,"byte_end":550386,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7101},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550825,"byte_end":550835,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550480,"byte_end":550537,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550542,"byte_end":550545,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550550,"byte_end":550564,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550569,"byte_end":550572,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550577,"byte_end":550584,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550589,"byte_end":550617,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550622,"byte_end":550625,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550630,"byte_end":550669,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550674,"byte_end":550722,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550727,"byte_end":550756,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550761,"byte_end":550764,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550769,"byte_end":550801,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550806,"byte_end":550813,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7102},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551243,"byte_end":551250,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550892,"byte_end":550952,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550957,"byte_end":550960,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550965,"byte_end":550979,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550984,"byte_end":550987,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":550992,"byte_end":550999,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551004,"byte_end":551032,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551037,"byte_end":551040,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551045,"byte_end":551084,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551089,"byte_end":551137,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551142,"byte_end":551171,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551176,"byte_end":551179,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551184,"byte_end":551219,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551224,"byte_end":551231,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7103},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551822,"byte_end":551829,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551306,"byte_end":551374,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551379,"byte_end":551382,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551387,"byte_end":551460,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551465,"byte_end":551527,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551532,"byte_end":551535,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551540,"byte_end":551554,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551559,"byte_end":551562,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551567,"byte_end":551574,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551579,"byte_end":551607,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551612,"byte_end":551615,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551620,"byte_end":551663,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551668,"byte_end":551716,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551721,"byte_end":551750,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551755,"byte_end":551758,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551763,"byte_end":551798,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551803,"byte_end":551810,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7104},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552487,"byte_end":552495,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551893,"byte_end":551941,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551946,"byte_end":551949,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551954,"byte_end":551968,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551973,"byte_end":551976,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551981,"byte_end":551988,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":551993,"byte_end":552034,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552039,"byte_end":552093,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552098,"byte_end":552101,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552106,"byte_end":552158,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552163,"byte_end":552166,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552171,"byte_end":552206,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552211,"byte_end":552214,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552219,"byte_end":552262,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552267,"byte_end":552302,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552307,"byte_end":552310,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552315,"byte_end":552359,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552364,"byte_end":552399,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552404,"byte_end":552463,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552468,"byte_end":552475,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7105},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552963,"byte_end":552975,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552553,"byte_end":552590,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552595,"byte_end":552598,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552603,"byte_end":552617,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552622,"byte_end":552625,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552630,"byte_end":552637,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552642,"byte_end":552670,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552675,"byte_end":552678,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552683,"byte_end":552735,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552740,"byte_end":552743,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552748,"byte_end":552783,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552788,"byte_end":552791,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552796,"byte_end":552821,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552826,"byte_end":552861,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552866,"byte_end":552869,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552874,"byte_end":552899,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552904,"byte_end":552939,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":552944,"byte_end":552951,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7149},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555745,"byte_end":555750,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7150}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555644,"byte_end":555684,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555685,"byte_end":555733,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7151},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556310,"byte_end":556315,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555771,"byte_end":555818,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555819,"byte_end":555822,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555823,"byte_end":555895,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555896,"byte_end":555899,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555900,"byte_end":555914,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555915,"byte_end":555918,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555919,"byte_end":555984,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555985,"byte_end":555988,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555989,"byte_end":555996,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":555997,"byte_end":556038,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556039,"byte_end":556081,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556082,"byte_end":556085,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556086,"byte_end":556121,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556122,"byte_end":556155,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556156,"byte_end":556202,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556203,"byte_end":556234,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556235,"byte_end":556294,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556295,"byte_end":556302,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15287},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557244,"byte_end":557251,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":15290}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557074,"byte_end":557147,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557165,"byte_end":557232,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15295},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559023,"byte_end":559028,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15298}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":558861,"byte_end":558926,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":558944,"byte_end":559011,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15308},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":559948,"byte_end":559953,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":15310},{"krate":0,"index":15311},{"krate":0,"index":15312},{"krate":0,"index":15313}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15351},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561153,"byte_end":561157,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":15354},{"krate":0,"index":15355}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":560994,"byte_end":561056,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561074,"byte_end":561141,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15360},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562049,"byte_end":562061,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":15363},{"krate":0,"index":15364}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":561872,"byte_end":561952,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":561970,"byte_end":562037,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15369},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563027,"byte_end":563036,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":15372},{"krate":0,"index":15373}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":562856,"byte_end":562930,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":562948,"byte_end":563015,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15378},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564376,"byte_end":564384,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":15381},{"krate":0,"index":15382},{"krate":0,"index":15383},{"krate":0,"index":15384}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564204,"byte_end":564279,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564297,"byte_end":564364,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15389},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566192,"byte_end":566201,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":15392},{"krate":0,"index":15393},{"krate":0,"index":15394}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566019,"byte_end":566095,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566113,"byte_end":566180,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15399},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569207,"byte_end":569219,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":15402},{"krate":0,"index":15403},{"krate":0,"index":15404},{"krate":0,"index":15405}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569028,"byte_end":569110,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569128,"byte_end":569195,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15410},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":571057,"byte_end":571066,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":15413},{"krate":0,"index":15414},{"krate":0,"index":15415},{"krate":0,"index":15416}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":570883,"byte_end":570960,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":570978,"byte_end":571045,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7599},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572779,"byte_end":572785,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7600}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572677,"byte_end":572718,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572719,"byte_end":572767,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7601},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573342,"byte_end":573348,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572805,"byte_end":572874,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572875,"byte_end":572878,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572879,"byte_end":572959,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572960,"byte_end":572979,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572980,"byte_end":572983,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572984,"byte_end":572998,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":572999,"byte_end":573002,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573003,"byte_end":573010,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573011,"byte_end":573052,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573053,"byte_end":573095,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573096,"byte_end":573099,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573100,"byte_end":573128,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573129,"byte_end":573168,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573169,"byte_end":573219,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573220,"byte_end":573266,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573267,"byte_end":573326,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573327,"byte_end":573334,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15421},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574481,"byte_end":574485,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":15424},{"krate":0,"index":15425}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574318,"byte_end":574384,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574402,"byte_end":574469,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7675},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575255,"byte_end":575259,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":7676}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575155,"byte_end":575194,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575195,"byte_end":575243,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7677},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575867,"byte_end":575871,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575280,"byte_end":575357,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575358,"byte_end":575361,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575362,"byte_end":575457,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575458,"byte_end":575515,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575516,"byte_end":575519,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575520,"byte_end":575534,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575535,"byte_end":575538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575539,"byte_end":575550,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575551,"byte_end":575592,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575593,"byte_end":575636,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575637,"byte_end":575640,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575641,"byte_end":575678,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575679,"byte_end":575711,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575712,"byte_end":575761,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575762,"byte_end":575791,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575792,"byte_end":575851,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575852,"byte_end":575859,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15430},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577058,"byte_end":577066,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":15432}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":576961,"byte_end":577029,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":15436},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577195,"byte_end":577204,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":15438}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577098,"byte_end":577166,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7738},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577937,"byte_end":577944,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577691,"byte_end":577768,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577773,"byte_end":577844,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577849,"byte_end":577925,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578446,"byte_end":578453,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578200,"byte_end":578277,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578282,"byte_end":578353,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578358,"byte_end":578434,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7759},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580041,"byte_end":580053,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":579885,"byte_end":579960,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":579961,"byte_end":580029,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7762},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580057,"byte_end":580072,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":7759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7763},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580074,"byte_end":580090,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":7759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15447},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":580933,"byte_end":580937,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":15449},{"krate":0,"index":15450}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7816},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581882,"byte_end":581887,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581129,"byte_end":581182,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581187,"byte_end":581233,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581238,"byte_end":581241,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581246,"byte_end":581256,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581261,"byte_end":581264,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581269,"byte_end":581346,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581351,"byte_end":581420,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581425,"byte_end":581428,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581433,"byte_end":581447,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581452,"byte_end":581455,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581460,"byte_end":581467,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581472,"byte_end":581513,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581518,"byte_end":581562,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581567,"byte_end":581570,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581575,"byte_end":581622,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581627,"byte_end":581655,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581660,"byte_end":581663,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581668,"byte_end":581702,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581707,"byte_end":581749,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581754,"byte_end":581757,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581762,"byte_end":581794,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581799,"byte_end":581858,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581863,"byte_end":581870,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7817},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582798,"byte_end":582807,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581934,"byte_end":582005,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582010,"byte_end":582084,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582089,"byte_end":582164,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582169,"byte_end":582193,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582198,"byte_end":582201,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582206,"byte_end":582220,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582225,"byte_end":582228,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582233,"byte_end":582240,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582245,"byte_end":582286,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582291,"byte_end":582335,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582340,"byte_end":582343,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582348,"byte_end":582395,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582400,"byte_end":582428,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582433,"byte_end":582436,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582441,"byte_end":582475,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582480,"byte_end":582522,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582527,"byte_end":582530,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582535,"byte_end":582556,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582561,"byte_end":582593,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582598,"byte_end":582601,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582606,"byte_end":582629,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582634,"byte_end":582676,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582681,"byte_end":582702,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582707,"byte_end":582710,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582715,"byte_end":582774,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582779,"byte_end":582786,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":15486},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585231,"byte_end":585237,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":15488},{"krate":0,"index":15489}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584276,"byte_end":584323,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584324,"byte_end":584327,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584328,"byte_end":584404,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584405,"byte_end":584483,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584484,"byte_end":584560,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584561,"byte_end":584636,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584637,"byte_end":584710,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584711,"byte_end":584742,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584743,"byte_end":584746,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584747,"byte_end":584818,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584819,"byte_end":584898,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584899,"byte_end":584926,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584927,"byte_end":584930,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":584931,"byte_end":585005,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585006,"byte_end":585080,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585081,"byte_end":585160,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585161,"byte_end":585202,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7841},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585546,"byte_end":585549,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585322,"byte_end":585393,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585398,"byte_end":585408,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585413,"byte_end":585416,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585421,"byte_end":585495,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585500,"byte_end":585534,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7842},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585728,"byte_end":585735,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585631,"byte_end":585698,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585703,"byte_end":585716,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7843},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585880,"byte_end":585887,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585782,"byte_end":585850,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585855,"byte_end":585868,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7844},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586018,"byte_end":586028,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585946,"byte_end":586006,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7845},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586169,"byte_end":586174,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586072,"byte_end":586144,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586149,"byte_end":586157,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7846},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586321,"byte_end":586324,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586229,"byte_end":586296,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586301,"byte_end":586309,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7847},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586770,"byte_end":586773,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586377,"byte_end":586437,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586442,"byte_end":586445,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586450,"byte_end":586462,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586467,"byte_end":586470,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586475,"byte_end":586548,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586553,"byte_end":586630,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586635,"byte_end":586638,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586643,"byte_end":586700,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":586705,"byte_end":586758,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15493},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":587960,"byte_end":587965,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":15496},{"krate":0,"index":15497}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":587798,"byte_end":587863,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":587881,"byte_end":587948,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15502},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":588856,"byte_end":588869,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":15505},{"krate":0,"index":15506}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":588676,"byte_end":588759,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":588777,"byte_end":588844,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15511},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589828,"byte_end":589836,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":15514},{"krate":0,"index":15515}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589658,"byte_end":589731,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589749,"byte_end":589816,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":7967},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488130,"byte_end":488142,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":7968},{"krate":0,"index":7970},{"krate":0,"index":7972},{"krate":0,"index":7974},{"krate":0,"index":7976},{"krate":0,"index":7978},{"krate":0,"index":7980},{"krate":0,"index":7981}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488048,"byte_end":488119,"line_start":144,"line_end":144,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7968},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488995,"byte_end":489000,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488160,"byte_end":488225,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488230,"byte_end":488233,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488238,"byte_end":488318,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488323,"byte_end":488395,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488400,"byte_end":488421,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488426,"byte_end":488429,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488434,"byte_end":488448,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488453,"byte_end":488456,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488461,"byte_end":488468,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488473,"byte_end":488514,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488519,"byte_end":488563,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488568,"byte_end":488571,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488576,"byte_end":488620,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488625,"byte_end":488669,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488674,"byte_end":488677,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488682,"byte_end":488726,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488731,"byte_end":488763,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488768,"byte_end":488771,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488776,"byte_end":488809,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488814,"byte_end":488857,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488862,"byte_end":488911,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488916,"byte_end":488975,"line_start":167,"line_end":167,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488980,"byte_end":488987,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7970},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490053,"byte_end":490057,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489151,"byte_end":489225,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489230,"byte_end":489266,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489271,"byte_end":489274,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489279,"byte_end":489357,"line_start":180,"line_end":180,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489362,"byte_end":489389,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489394,"byte_end":489397,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489402,"byte_end":489416,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489421,"byte_end":489424,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489429,"byte_end":489436,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489441,"byte_end":489482,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489487,"byte_end":489531,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489536,"byte_end":489539,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489544,"byte_end":489591,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489596,"byte_end":489626,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489631,"byte_end":489634,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489639,"byte_end":489691,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489696,"byte_end":489699,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489704,"byte_end":489775,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489780,"byte_end":489844,"line_start":195,"line_end":195,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489849,"byte_end":489894,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489899,"byte_end":489924,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489929,"byte_end":489969,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":489974,"byte_end":490033,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490038,"byte_end":490045,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7972},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490463,"byte_end":490476,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490225,"byte_end":490309,"line_start":208,"line_end":208,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490314,"byte_end":490332,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490337,"byte_end":490340,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490345,"byte_end":490423,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490428,"byte_end":490455,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7974},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491887,"byte_end":491897,"line_start":257,"line_end":257,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490674,"byte_end":490746,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490751,"byte_end":490809,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490814,"byte_end":490817,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490822,"byte_end":490896,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490901,"byte_end":490904,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490909,"byte_end":490986,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":490991,"byte_end":491013,"line_start":226,"line_end":226,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491018,"byte_end":491021,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491026,"byte_end":491040,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491045,"byte_end":491048,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491053,"byte_end":491060,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491065,"byte_end":491106,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491111,"byte_end":491155,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491160,"byte_end":491163,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491168,"byte_end":491215,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491220,"byte_end":491250,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491255,"byte_end":491258,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491263,"byte_end":491305,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491310,"byte_end":491313,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491318,"byte_end":491355,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491360,"byte_end":491419,"line_start":240,"line_end":240,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491424,"byte_end":491431,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491436,"byte_end":491439,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491444,"byte_end":491484,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491489,"byte_end":491492,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491497,"byte_end":491504,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491509,"byte_end":491550,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491555,"byte_end":491605,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491610,"byte_end":491613,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491618,"byte_end":491665,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491670,"byte_end":491700,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491705,"byte_end":491708,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491713,"byte_end":491767,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491772,"byte_end":491775,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491780,"byte_end":491853,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491858,"byte_end":491867,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":491872,"byte_end":491879,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7976},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492702,"byte_end":492713,"line_start":283,"line_end":283,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492072,"byte_end":492145,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492150,"byte_end":492153,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492158,"byte_end":492216,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492221,"byte_end":492224,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492229,"byte_end":492243,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492248,"byte_end":492251,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492256,"byte_end":492263,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492268,"byte_end":492309,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492314,"byte_end":492358,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492363,"byte_end":492366,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492371,"byte_end":492418,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492423,"byte_end":492466,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492471,"byte_end":492474,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492479,"byte_end":492534,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492539,"byte_end":492542,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492547,"byte_end":492572,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492577,"byte_end":492618,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492623,"byte_end":492682,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492687,"byte_end":492694,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7978},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493534,"byte_end":493548,"line_start":309,"line_end":309,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492894,"byte_end":492967,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492972,"byte_end":492975,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":492980,"byte_end":493038,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493043,"byte_end":493046,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493051,"byte_end":493065,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493070,"byte_end":493073,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493078,"byte_end":493085,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493090,"byte_end":493131,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493136,"byte_end":493180,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493185,"byte_end":493188,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493193,"byte_end":493240,"line_start":300,"line_end":300,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493245,"byte_end":493291,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493296,"byte_end":493299,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493304,"byte_end":493362,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493367,"byte_end":493370,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493375,"byte_end":493400,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493405,"byte_end":493450,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493455,"byte_end":493514,"line_start":307,"line_end":307,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493519,"byte_end":493526,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7980},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494891,"byte_end":494896,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493734,"byte_end":493805,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493810,"byte_end":493813,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493818,"byte_end":493888,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493893,"byte_end":493918,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493923,"byte_end":493926,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493931,"byte_end":493945,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493950,"byte_end":493953,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493958,"byte_end":493965,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":493970,"byte_end":494011,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494016,"byte_end":494066,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494071,"byte_end":494074,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494079,"byte_end":494149,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494154,"byte_end":494224,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494229,"byte_end":494280,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494285,"byte_end":494288,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494293,"byte_end":494336,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494341,"byte_end":494404,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494409,"byte_end":494456,"line_start":333,"line_end":333,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494461,"byte_end":494464,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494469,"byte_end":494474,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494479,"byte_end":494550,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494555,"byte_end":494607,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494612,"byte_end":494664,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494669,"byte_end":494674,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494679,"byte_end":494682,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494687,"byte_end":494749,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494754,"byte_end":494807,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494812,"byte_end":494871,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":494876,"byte_end":494883,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7981},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495677,"byte_end":495681,"line_start":372,"line_end":372,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":7967},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495084,"byte_end":495154,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495159,"byte_end":495190,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495195,"byte_end":495198,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495203,"byte_end":495217,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495222,"byte_end":495225,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495230,"byte_end":495237,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495242,"byte_end":495283,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495288,"byte_end":495332,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495337,"byte_end":495340,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495345,"byte_end":495392,"line_start":362,"line_end":362,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495397,"byte_end":495425,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495430,"byte_end":495433,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495438,"byte_end":495472,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495477,"byte_end":495519,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495524,"byte_end":495527,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495532,"byte_end":495553,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495558,"byte_end":495593,"line_start":369,"line_end":369,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495598,"byte_end":495657,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":495662,"byte_end":495669,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":7984},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496490,"byte_end":496503,"line_start":398,"line_end":398,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":7985},{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7989},{"krate":0,"index":7991}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496407,"byte_end":496479,"line_start":397,"line_end":397,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7985},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497244,"byte_end":497249,"line_start":421,"line_end":421,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":7984},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496522,"byte_end":496587,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496592,"byte_end":496595,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496600,"byte_end":496614,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496619,"byte_end":496622,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496627,"byte_end":496634,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496639,"byte_end":496680,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496685,"byte_end":496734,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496739,"byte_end":496776,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496781,"byte_end":496784,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496789,"byte_end":496823,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496828,"byte_end":496831,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496836,"byte_end":496841,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496846,"byte_end":496892,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496897,"byte_end":496964,"line_start":412,"line_end":412,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496969,"byte_end":497012,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497017,"byte_end":497060,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497065,"byte_end":497097,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497102,"byte_end":497107,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497112,"byte_end":497115,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497120,"byte_end":497160,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497165,"byte_end":497224,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497229,"byte_end":497236,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7986},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497458,"byte_end":497463,"line_start":429,"line_end":429,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":7984},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497385,"byte_end":497450,"line_start":428,"line_end":428,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7987},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497805,"byte_end":497810,"line_start":440,"line_end":440,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":7984},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497599,"byte_end":497670,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497675,"byte_end":497678,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497683,"byte_end":497765,"line_start":438,"line_end":438,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497770,"byte_end":497797,"line_start":439,"line_end":439,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7989},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498220,"byte_end":498234,"line_start":452,"line_end":452,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":7984},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":497976,"byte_end":498062,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498067,"byte_end":498085,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498090,"byte_end":498093,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498098,"byte_end":498180,"line_start":450,"line_end":450,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498185,"byte_end":498212,"line_start":451,"line_end":451,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7991},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":499080,"byte_end":499089,"line_start":479,"line_end":479,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":7984},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498427,"byte_end":498459,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498464,"byte_end":498467,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498472,"byte_end":498553,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498558,"byte_end":498580,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498585,"byte_end":498588,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498593,"byte_end":498671,"line_start":464,"line_end":464,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498676,"byte_end":498679,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498684,"byte_end":498698,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498703,"byte_end":498706,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498711,"byte_end":498718,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498723,"byte_end":498764,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498769,"byte_end":498814,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498819,"byte_end":498822,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498827,"byte_end":498874,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498879,"byte_end":498882,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498887,"byte_end":498930,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498935,"byte_end":498938,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":498943,"byte_end":498996,"line_start":476,"line_end":476,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":499001,"byte_end":499060,"line_start":477,"line_end":477,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":499065,"byte_end":499072,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":7995},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":502945,"byte_end":502957,"line_start":592,"line_end":592,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":7996},{"krate":0,"index":7997}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":502863,"byte_end":502934,"line_start":591,"line_end":591,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7996},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503227,"byte_end":503231,"line_start":598,"line_end":598,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":7995},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":502975,"byte_end":503044,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503049,"byte_end":503102,"line_start":594,"line_end":594,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503107,"byte_end":503110,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503115,"byte_end":503192,"line_start":596,"line_end":596,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503197,"byte_end":503219,"line_start":597,"line_end":597,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7997},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503569,"byte_end":503584,"line_start":609,"line_end":609,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":7995},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503386,"byte_end":503459,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503464,"byte_end":503488,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503493,"byte_end":503496,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503501,"byte_end":503561,"line_start":608,"line_end":608,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":8000},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503836,"byte_end":503851,"line_start":620,"line_end":620,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":8003},{"krate":0,"index":8005},{"krate":0,"index":8007}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503751,"byte_end":503825,"line_start":619,"line_end":619,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":8001},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504805,"byte_end":504813,"line_start":644,"line_end":644,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503872,"byte_end":503961,"line_start":621,"line_end":621,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503966,"byte_end":503998,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504003,"byte_end":504006,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504011,"byte_end":504104,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504109,"byte_end":504112,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504117,"byte_end":504128,"line_start":626,"line_end":626,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504133,"byte_end":504174,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504179,"byte_end":504258,"line_start":628,"line_end":628,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504263,"byte_end":504266,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504271,"byte_end":504359,"line_start":630,"line_end":630,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504364,"byte_end":504367,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504372,"byte_end":504428,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504433,"byte_end":504461,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504466,"byte_end":504469,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504474,"byte_end":504524,"line_start":635,"line_end":635,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504529,"byte_end":504557,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504562,"byte_end":504565,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504570,"byte_end":504626,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504631,"byte_end":504659,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504664,"byte_end":504667,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504672,"byte_end":504721,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504726,"byte_end":504785,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504790,"byte_end":504797,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8002},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505614,"byte_end":505627,"line_start":668,"line_end":668,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":504956,"byte_end":505034,"line_start":651,"line_end":651,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505039,"byte_end":505042,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505047,"byte_end":505058,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505063,"byte_end":505104,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505109,"byte_end":505188,"line_start":655,"line_end":655,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505193,"byte_end":505196,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505201,"byte_end":505270,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505275,"byte_end":505278,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505283,"byte_end":505339,"line_start":659,"line_end":659,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505344,"byte_end":505372,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505377,"byte_end":505380,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505385,"byte_end":505435,"line_start":662,"line_end":662,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505440,"byte_end":505468,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505473,"byte_end":505476,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505481,"byte_end":505530,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505535,"byte_end":505594,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505599,"byte_end":505606,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8003},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507318,"byte_end":507328,"line_start":716,"line_end":716,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505735,"byte_end":505810,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505815,"byte_end":505882,"line_start":676,"line_end":676,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505887,"byte_end":505984,"line_start":677,"line_end":677,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505989,"byte_end":505992,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":505997,"byte_end":506067,"line_start":679,"line_end":679,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506072,"byte_end":506146,"line_start":680,"line_end":680,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506151,"byte_end":506206,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506211,"byte_end":506214,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506219,"byte_end":506297,"line_start":683,"line_end":683,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506302,"byte_end":506329,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506334,"byte_end":506337,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506342,"byte_end":506419,"line_start":686,"line_end":686,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506424,"byte_end":506446,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506451,"byte_end":506454,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506459,"byte_end":506473,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506478,"byte_end":506481,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506486,"byte_end":506493,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506498,"byte_end":506539,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506544,"byte_end":506591,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506596,"byte_end":506599,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506604,"byte_end":506653,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506658,"byte_end":506683,"line_start":696,"line_end":696,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506688,"byte_end":506691,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506696,"byte_end":506719,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506724,"byte_end":506785,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506790,"byte_end":506819,"line_start":700,"line_end":700,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506824,"byte_end":506855,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506860,"byte_end":506876,"line_start":702,"line_end":702,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506881,"byte_end":506884,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506889,"byte_end":506912,"line_start":704,"line_end":704,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506917,"byte_end":506978,"line_start":705,"line_end":705,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":506983,"byte_end":507012,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507017,"byte_end":507047,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507052,"byte_end":507068,"line_start":708,"line_end":708,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507073,"byte_end":507076,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507081,"byte_end":507104,"line_start":710,"line_end":710,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507109,"byte_end":507170,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507175,"byte_end":507204,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507209,"byte_end":507234,"line_start":713,"line_end":713,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507239,"byte_end":507298,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507303,"byte_end":507310,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8005},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509507,"byte_end":509516,"line_start":774,"line_end":774,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507525,"byte_end":507600,"line_start":723,"line_end":723,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507605,"byte_end":507676,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507681,"byte_end":507776,"line_start":725,"line_end":725,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507781,"byte_end":507784,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507789,"byte_end":507859,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507864,"byte_end":507939,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":507944,"byte_end":508014,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508019,"byte_end":508029,"line_start":730,"line_end":730,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508034,"byte_end":508037,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508042,"byte_end":508120,"line_start":732,"line_end":732,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508125,"byte_end":508152,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508157,"byte_end":508160,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508165,"byte_end":508242,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508247,"byte_end":508269,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508274,"byte_end":508277,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508282,"byte_end":508294,"line_start":738,"line_end":738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508299,"byte_end":508302,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508307,"byte_end":508380,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508385,"byte_end":508458,"line_start":741,"line_end":741,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508463,"byte_end":508537,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508542,"byte_end":508598,"line_start":743,"line_end":743,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508603,"byte_end":508606,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508611,"byte_end":508658,"line_start":745,"line_end":745,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508663,"byte_end":508666,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508671,"byte_end":508685,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508690,"byte_end":508693,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508698,"byte_end":508705,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508710,"byte_end":508751,"line_start":750,"line_end":750,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508756,"byte_end":508803,"line_start":751,"line_end":751,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508808,"byte_end":508811,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508816,"byte_end":508862,"line_start":753,"line_end":753,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508867,"byte_end":508899,"line_start":754,"line_end":754,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508904,"byte_end":508907,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508912,"byte_end":508935,"line_start":756,"line_end":756,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508940,"byte_end":508994,"line_start":757,"line_end":757,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":508999,"byte_end":509028,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509033,"byte_end":509062,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509067,"byte_end":509083,"line_start":760,"line_end":760,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509088,"byte_end":509091,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509096,"byte_end":509119,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509124,"byte_end":509178,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509183,"byte_end":509212,"line_start":764,"line_end":764,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509217,"byte_end":509244,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509249,"byte_end":509265,"line_start":766,"line_end":766,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509270,"byte_end":509273,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509278,"byte_end":509301,"line_start":768,"line_end":768,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509306,"byte_end":509360,"line_start":769,"line_end":769,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509365,"byte_end":509394,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509399,"byte_end":509423,"line_start":771,"line_end":771,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509428,"byte_end":509487,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509492,"byte_end":509499,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8007},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":511040,"byte_end":511045,"line_start":813,"line_end":813,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509694,"byte_end":509745,"line_start":781,"line_end":781,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509750,"byte_end":509837,"line_start":782,"line_end":782,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509842,"byte_end":509845,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509850,"byte_end":509916,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":509921,"byte_end":510003,"line_start":785,"line_end":785,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510008,"byte_end":510068,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510073,"byte_end":510076,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510081,"byte_end":510116,"line_start":788,"line_end":788,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510121,"byte_end":510143,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510148,"byte_end":510151,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510156,"byte_end":510168,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510173,"byte_end":510176,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510181,"byte_end":510272,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510277,"byte_end":510280,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510285,"byte_end":510347,"line_start":795,"line_end":795,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510352,"byte_end":510355,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510360,"byte_end":510374,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510379,"byte_end":510382,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510387,"byte_end":510394,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510399,"byte_end":510440,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510445,"byte_end":510492,"line_start":801,"line_end":801,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510497,"byte_end":510532,"line_start":802,"line_end":802,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510537,"byte_end":510540,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510545,"byte_end":510600,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510605,"byte_end":510608,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510613,"byte_end":510675,"line_start":806,"line_end":806,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510680,"byte_end":510751,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510756,"byte_end":510827,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510832,"byte_end":510903,"line_start":809,"line_end":809,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510908,"byte_end":510956,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":510961,"byte_end":511020,"line_start":811,"line_end":811,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":511025,"byte_end":511032,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8039},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":8040},{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8226},{"krate":0,"index":8229},{"krate":0,"index":8232},{"krate":0,"index":8235},{"krate":0,"index":8317}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":590752,"byte_end":590799,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":590800,"byte_end":590803,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":590804,"byte_end":590879,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":590880,"byte_end":590937,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8094},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592360,"byte_end":592365,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8096},{"krate":0,"index":8097},{"krate":0,"index":8098}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592033,"byte_end":592059,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592060,"byte_end":592063,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592064,"byte_end":592078,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592079,"byte_end":592082,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592083,"byte_end":592162,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592163,"byte_end":592245,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592246,"byte_end":592330,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592331,"byte_end":592348,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8121},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593591,"byte_end":593594,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593541,"byte_end":593579,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8122},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594021,"byte_end":594031,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593775,"byte_end":593830,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593835,"byte_end":593838,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593843,"byte_end":593857,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593862,"byte_end":593865,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593870,"byte_end":593877,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593882,"byte_end":593911,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593916,"byte_end":593919,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593924,"byte_end":593954,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593959,"byte_end":593997,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594002,"byte_end":594009,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8125},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594245,"byte_end":594253,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594117,"byte_end":594161,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594166,"byte_end":594169,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594174,"byte_end":594233,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8126},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594674,"byte_end":594678,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594509,"byte_end":594545,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594550,"byte_end":594553,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594558,"byte_end":594631,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594636,"byte_end":594662,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8127},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595306,"byte_end":595313,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594796,"byte_end":594851,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594856,"byte_end":594859,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594864,"byte_end":594939,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594944,"byte_end":595018,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595023,"byte_end":595026,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595031,"byte_end":595045,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595050,"byte_end":595053,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595058,"byte_end":595065,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595070,"byte_end":595111,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595116,"byte_end":595145,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595150,"byte_end":595153,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595158,"byte_end":595192,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595197,"byte_end":595223,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595228,"byte_end":595268,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595273,"byte_end":595282,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":595287,"byte_end":595294,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8131},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597035,"byte_end":597050,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8134},{"krate":0,"index":8135}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":596942,"byte_end":597023,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":8150},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599585,"byte_end":599595,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8153}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599421,"byte_end":599485,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599486,"byte_end":599559,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599560,"byte_end":599573,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8157},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600164,"byte_end":600167,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599685,"byte_end":599745,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599750,"byte_end":599753,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599758,"byte_end":599771,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599776,"byte_end":599779,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599784,"byte_end":599791,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599796,"byte_end":599837,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599842,"byte_end":599885,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599890,"byte_end":599893,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599898,"byte_end":599951,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599956,"byte_end":599961,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599966,"byte_end":600055,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600060,"byte_end":600102,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600107,"byte_end":600112,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600117,"byte_end":600126,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600131,"byte_end":600138,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600143,"byte_end":600152,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8173},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601459,"byte_end":601475,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8177},{"krate":0,"index":8178},{"krate":0,"index":8179}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601275,"byte_end":601363,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601364,"byte_end":601447,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8184},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602241,"byte_end":602244,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601652,"byte_end":601712,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601717,"byte_end":601720,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601725,"byte_end":601738,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601743,"byte_end":601746,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601751,"byte_end":601758,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601763,"byte_end":601804,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601809,"byte_end":601870,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601875,"byte_end":601878,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601883,"byte_end":601936,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601941,"byte_end":601946,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601951,"byte_end":602040,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602045,"byte_end":602135,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602140,"byte_end":602179,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602184,"byte_end":602189,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602194,"byte_end":602203,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602208,"byte_end":602215,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602220,"byte_end":602229,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15546},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615298,"byte_end":615307,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":15548},{"krate":0,"index":15549}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12775203,"byte_end":12775212,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8358},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616717,"byte_end":616720,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615413,"byte_end":615495,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615500,"byte_end":615568,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615573,"byte_end":615576,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615581,"byte_end":615653,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615658,"byte_end":615741,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615746,"byte_end":615771,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615776,"byte_end":615779,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615784,"byte_end":615799,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615804,"byte_end":615807,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615812,"byte_end":615835,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615840,"byte_end":615843,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615848,"byte_end":615855,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615860,"byte_end":615901,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615906,"byte_end":615965,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615970,"byte_end":615973,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615978,"byte_end":616047,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616052,"byte_end":616117,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616122,"byte_end":616147,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616152,"byte_end":616195,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616200,"byte_end":616209,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616214,"byte_end":616221,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616226,"byte_end":616229,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616234,"byte_end":616257,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616262,"byte_end":616265,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616270,"byte_end":616277,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616282,"byte_end":616323,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616328,"byte_end":616380,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616385,"byte_end":616430,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616435,"byte_end":616438,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616443,"byte_end":616512,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616517,"byte_end":616602,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616607,"byte_end":616632,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616637,"byte_end":616679,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616684,"byte_end":616693,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616698,"byte_end":616705,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8359},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617225,"byte_end":617235,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616815,"byte_end":616879,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616884,"byte_end":616952,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":616957,"byte_end":617007,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617012,"byte_end":617066,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617071,"byte_end":617163,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617168,"byte_end":617213,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":15584},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617503,"byte_end":617520,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":15585}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617313,"byte_end":617363,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617364,"byte_end":617440,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617441,"byte_end":617474,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15588},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617626,"byte_end":617637,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":15589}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617554,"byte_end":617590,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8361},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617908,"byte_end":617916,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617694,"byte_end":617768,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617773,"byte_end":617813,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617818,"byte_end":617821,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617826,"byte_end":617896,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":15599},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618438,"byte_end":618445,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618329,"byte_end":618381,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8381},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620579,"byte_end":620584,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620212,"byte_end":620280,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620285,"byte_end":620288,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620293,"byte_end":620360,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620365,"byte_end":620433,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620438,"byte_end":620512,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620517,"byte_end":620567,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8393},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":620767,"byte_end":620774,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8395},{"krate":0,"index":8396}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8395},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":620789,"byte_end":620795,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8396},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":620804,"byte_end":620813,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8403},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621006,"byte_end":621012,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8405}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8405},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621037,"byte_end":621045,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":8403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8420},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622351,"byte_end":622355,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15630},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622711,"byte_end":622718,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15651},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623452,"byte_end":623465,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15667},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623807,"byte_end":623816,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15682},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624771,"byte_end":624778,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15697},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625489,"byte_end":625497,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15712},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626217,"byte_end":626228,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15724},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627113,"byte_end":627125,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15736},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628273,"byte_end":628287,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8584},"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":629052,"byte_end":629058,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53099,"byte_end":53104,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":54811,"byte_end":54817,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":54976,"byte_end":54982,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55410,"byte_end":55418,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55777,"byte_end":55787,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78213,"byte_end":78223,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78374,"byte_end":78384,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78507,"byte_end":78517,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79226,"byte_end":79236,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79366,"byte_end":79376,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79619,"byte_end":79629,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":80582,"byte_end":80592,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":80835,"byte_end":80845,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84169,"byte_end":84182,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84312,"byte_end":84325,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84568,"byte_end":84581,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60759,"byte_end":60762,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85890,"byte_end":85894,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86490,"byte_end":86494,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86638,"byte_end":86642,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87245,"byte_end":87252,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87813,"byte_end":87820,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87965,"byte_end":87972,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87998,"byte_end":88005,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88759,"byte_end":88768,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89371,"byte_end":89380,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":90478,"byte_end":90487,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":90688,"byte_end":90697,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92017,"byte_end":92029,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92255,"byte_end":92267,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":93380,"byte_end":93392,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":93596,"byte_end":93608,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95258,"byte_end":95270,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95368,"byte_end":95380,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95694,"byte_end":95706,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95893,"byte_end":95905,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96343,"byte_end":96349,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":97043,"byte_end":97049,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":97191,"byte_end":97197,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":97925,"byte_end":97938,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":98504,"byte_end":98517,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":99537,"byte_end":99550,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101722,"byte_end":101727,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101906,"byte_end":101911,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101943,"byte_end":101948,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102045,"byte_end":102050,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110037,"byte_end":110044,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":112805,"byte_end":112812,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":113800,"byte_end":113807,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114303,"byte_end":114309,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116745,"byte_end":116751,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":117455,"byte_end":117461,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118024,"byte_end":118033,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119040,"byte_end":119049,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119232,"byte_end":119241,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119911,"byte_end":119920,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128528,"byte_end":128538,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":130368,"byte_end":130378,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":131526,"byte_end":131536,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132018,"byte_end":132027,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133866,"byte_end":133875,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135237,"byte_end":135245,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":136323,"byte_end":136331,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":137762,"byte_end":137770,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138749,"byte_end":138755,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139094,"byte_end":139100,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139485,"byte_end":139491,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139872,"byte_end":139878,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":140119,"byte_end":140125,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":140464,"byte_end":140470,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":140746,"byte_end":140752,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":141287,"byte_end":141293,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142965,"byte_end":142971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143772,"byte_end":143778,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145085,"byte_end":145091,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145521,"byte_end":145527,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":204889,"byte_end":204894,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":205120,"byte_end":205125,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":205334,"byte_end":205339,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":206935,"byte_end":206942,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":207207,"byte_end":207214,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":207392,"byte_end":207399,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":208425,"byte_end":208430,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":208824,"byte_end":208829,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":209079,"byte_end":209084,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":210209,"byte_end":210215,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":210435,"byte_end":210441,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":211149,"byte_end":211155,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":211881,"byte_end":211886,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":212107,"byte_end":212112,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":212244,"byte_end":212249,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":212367,"byte_end":212372,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":213178,"byte_end":213183,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":213339,"byte_end":213344,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":214093,"byte_end":214098,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":214846,"byte_end":214855,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":11383},{"krate":0,"index":11384},{"krate":0,"index":11385},{"krate":0,"index":11386}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":215041,"byte_end":215050,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":215168,"byte_end":215177,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":216618,"byte_end":216624,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":217097,"byte_end":217103,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":11448},{"krate":0,"index":11449},{"krate":0,"index":11450},{"krate":0,"index":11451}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":217426,"byte_end":217432,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":217769,"byte_end":217775,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":219947,"byte_end":219956,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":220253,"byte_end":220262,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":11509},{"krate":0,"index":11510},{"krate":0,"index":11511},{"krate":0,"index":11512}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":220529,"byte_end":220538,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":220805,"byte_end":220814,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":222916,"byte_end":222923,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":11562},{"krate":0,"index":11563},{"krate":0,"index":11564},{"krate":0,"index":11565}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":223092,"byte_end":223099,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":223291,"byte_end":223298,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":224812,"byte_end":224816,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":225172,"byte_end":225176,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":225437,"byte_end":225441,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":225676,"byte_end":225680,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227269,"byte_end":227272,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227602,"byte_end":227605,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227858,"byte_end":227861,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":228090,"byte_end":228093,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":229845,"byte_end":229848,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":230178,"byte_end":230181,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":230433,"byte_end":230436,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":230665,"byte_end":230668,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232422,"byte_end":232429,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232722,"byte_end":232729,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232960,"byte_end":232967,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":233206,"byte_end":233213,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234314,"byte_end":234318,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":11909},{"krate":0,"index":11910},{"krate":0,"index":11911},{"krate":0,"index":11912}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234815,"byte_end":234819,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234917,"byte_end":234921,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236123,"byte_end":236135,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238625,"byte_end":238637,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238757,"byte_end":238769,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":239654,"byte_end":239657,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":239846,"byte_end":239849,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":12033},{"krate":0,"index":12034},{"krate":0,"index":12035},{"krate":0,"index":12036}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":240018,"byte_end":240021,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":240189,"byte_end":240192,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241304,"byte_end":241308,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241359,"byte_end":241363,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241514,"byte_end":241518,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241657,"byte_end":241661,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242312,"byte_end":242326,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242477,"byte_end":242491,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242635,"byte_end":242649,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":243960,"byte_end":243968,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":12176},{"krate":0,"index":12177},{"krate":0,"index":12178},{"krate":0,"index":12179},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249465,"byte_end":249473,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249615,"byte_end":249623,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250782,"byte_end":250786,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251031,"byte_end":251035,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251146,"byte_end":251150,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251847,"byte_end":251854,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252102,"byte_end":252109,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252220,"byte_end":252227,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252947,"byte_end":252953,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253305,"byte_end":253311,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253580,"byte_end":253586,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254847,"byte_end":254855,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255175,"byte_end":255183,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255367,"byte_end":255375,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255746,"byte_end":255756,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256421,"byte_end":256425,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":12400},{"krate":0,"index":12401},{"krate":0,"index":12402},{"krate":0,"index":12403}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256616,"byte_end":256620,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256738,"byte_end":256742,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":258339,"byte_end":258348,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":258800,"byte_end":258809,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":12469},{"krate":0,"index":12470},{"krate":0,"index":12471},{"krate":0,"index":12472}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":259135,"byte_end":259144,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":259392,"byte_end":259401,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":261701,"byte_end":261705,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":12513},{"krate":0,"index":12514},{"krate":0,"index":12515},{"krate":0,"index":12516}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":261878,"byte_end":261882,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":262854,"byte_end":262858,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":263881,"byte_end":263890,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":264338,"byte_end":264347,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":12582},{"krate":0,"index":12583},{"krate":0,"index":12584},{"krate":0,"index":12585}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":264666,"byte_end":264675,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":266194,"byte_end":266203,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":267587,"byte_end":267596,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":267884,"byte_end":267893,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":12639},{"krate":0,"index":12640},{"krate":0,"index":12641},{"krate":0,"index":12642},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":270010,"byte_end":270019,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":271051,"byte_end":271060,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272002,"byte_end":272006,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272257,"byte_end":272261,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":12700},{"krate":0,"index":12701},{"krate":0,"index":12702},{"krate":0,"index":12703}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272507,"byte_end":272511,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272737,"byte_end":272741,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":274623,"byte_end":274626,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":276212,"byte_end":276215,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":276410,"byte_end":276413,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":279108,"byte_end":279114,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":12805},{"krate":0,"index":12806},{"krate":0,"index":12807},{"krate":0,"index":12808}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":279622,"byte_end":279628,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":281244,"byte_end":281250,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":282222,"byte_end":282233,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":12853},{"krate":0,"index":12854},{"krate":0,"index":12855},{"krate":0,"index":12856}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":282585,"byte_end":282596,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":284765,"byte_end":284776,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":285774,"byte_end":285778,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":286264,"byte_end":286268,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":286432,"byte_end":286436,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":12922},{"krate":0,"index":12923},{"krate":0,"index":12924},{"krate":0,"index":12925}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":286798,"byte_end":286802,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":288029,"byte_end":288033,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289214,"byte_end":289229,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289561,"byte_end":289576,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":12967},{"krate":0,"index":12968},{"krate":0,"index":12969},{"krate":0,"index":12970}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289963,"byte_end":289978,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":291432,"byte_end":291447,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":292557,"byte_end":292565,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":292912,"byte_end":292920,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3595},{"krate":0,"index":13012},{"krate":0,"index":13013},{"krate":0,"index":13014},{"krate":0,"index":13015}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":293200,"byte_end":293208,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":295545,"byte_end":295562,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":295908,"byte_end":295925,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":296358,"byte_end":296375,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":296605,"byte_end":296622,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3660},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":298982,"byte_end":298993,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":13117},{"krate":0,"index":13118},{"krate":0,"index":13119},{"krate":0,"index":13120}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":299185,"byte_end":299196,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":300048,"byte_end":300059,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3712}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157799,"byte_end":157800,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339176,"byte_end":339183,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339476,"byte_end":339483,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":13178},{"krate":0,"index":13179},{"krate":0,"index":13180},{"krate":0,"index":13181}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339764,"byte_end":339771,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":340914,"byte_end":340921,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":341839,"byte_end":341849,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4074},{"krate":0,"index":13425},{"krate":0,"index":13426},{"krate":0,"index":13427},{"krate":0,"index":13428}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":342042,"byte_end":342052,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":342173,"byte_end":342183,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343282,"byte_end":343288,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343580,"byte_end":343586,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":13624},{"krate":0,"index":13625},{"krate":0,"index":13626},{"krate":0,"index":13627}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343864,"byte_end":343870,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":345147,"byte_end":345153,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346057,"byte_end":346064,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346118,"byte_end":346125,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346288,"byte_end":346295,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4180}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346437,"byte_end":346444,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347220,"byte_end":347230,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347526,"byte_end":347536,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347781,"byte_end":347791,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":349190,"byte_end":349199,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4274}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":349595,"byte_end":349604,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4279},{"krate":0,"index":13754},{"krate":0,"index":13755},{"krate":0,"index":13756},{"krate":0,"index":13757}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":349847,"byte_end":349856,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4284}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":350113,"byte_end":350122,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352263,"byte_end":352275,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352575,"byte_end":352587,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":13815},{"krate":0,"index":13816},{"krate":0,"index":13817},{"krate":0,"index":13818}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352784,"byte_end":352796,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4343}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":353074,"byte_end":353086,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355270,"byte_end":355280,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4384},{"krate":0,"index":13859},{"krate":0,"index":13860},{"krate":0,"index":13861},{"krate":0,"index":13862}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355545,"byte_end":355555,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355801,"byte_end":355811,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4390},{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357420,"byte_end":357430,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4432}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357570,"byte_end":357580,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4436}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357768,"byte_end":357778,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4441}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":358776,"byte_end":358785,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":359004,"byte_end":359013,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4473},{"krate":0,"index":4474}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":360397,"byte_end":360406,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":13996},{"krate":0,"index":13997},{"krate":0,"index":13998},{"krate":0,"index":13999}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":360901,"byte_end":360910,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":362858,"byte_end":362867,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363526,"byte_end":363540,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4540}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363685,"byte_end":363699,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4544}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363886,"byte_end":363900,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":364510,"byte_end":364517,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4593}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":364876,"byte_end":364883,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":365163,"byte_end":365170,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4605}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":365424,"byte_end":365431,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4611},{"krate":0,"index":4612}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":369294,"byte_end":369303,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":369565,"byte_end":369574,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4660},{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":371320,"byte_end":371332,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4706}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":371788,"byte_end":371800,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":14212},{"krate":0,"index":14213},{"krate":0,"index":14214},{"krate":0,"index":14215}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":372140,"byte_end":372152,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":373651,"byte_end":373663,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":374891,"byte_end":374903,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4764}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":375355,"byte_end":375367,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":14281},{"krate":0,"index":14282},{"krate":0,"index":14283},{"krate":0,"index":14284}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":375705,"byte_end":375717,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":377324,"byte_end":377336,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4781}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":378624,"byte_end":378642,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":14329},{"krate":0,"index":14330},{"krate":0,"index":14331},{"krate":0,"index":14332}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":378981,"byte_end":378999,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4834},{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":381205,"byte_end":381216,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4885},{"krate":0,"index":14377},{"krate":0,"index":14378},{"krate":0,"index":14379},{"krate":0,"index":14380}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":381553,"byte_end":381564,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4888},{"krate":0,"index":4889}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":383722,"byte_end":383742,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":384107,"byte_end":384127,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4942}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":384366,"byte_end":384386,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4947}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":384834,"byte_end":384854,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4952},{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":387955,"byte_end":387968,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":388184,"byte_end":388197,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5002}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":388409,"byte_end":388422,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5005}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":390043,"byte_end":390056,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":390663,"byte_end":390676,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5014}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305459,"byte_end":305460,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392712,"byte_end":392716,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393338,"byte_end":393342,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394533,"byte_end":394539,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394566,"byte_end":394572,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394880,"byte_end":394886,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5223}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395483,"byte_end":395493,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395537,"byte_end":395547,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395861,"byte_end":395871,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5264}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398391,"byte_end":398396,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398428,"byte_end":398433,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5305}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398518,"byte_end":398523,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398772,"byte_end":398777,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399716,"byte_end":399720,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5355}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399849,"byte_end":399853,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":400458,"byte_end":400462,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5363}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401121,"byte_end":401128,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401160,"byte_end":401167,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401252,"byte_end":401259,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401504,"byte_end":401511,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401898,"byte_end":401904,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401935,"byte_end":401941,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402706,"byte_end":402712,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5451},{"krate":0,"index":5452}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":403408,"byte_end":403421,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404334,"byte_end":404347,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407234,"byte_end":407240,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5536},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408544,"byte_end":408550,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408729,"byte_end":408735,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409448,"byte_end":409456,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409753,"byte_end":409761,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5594}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412788,"byte_end":412806,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":414255,"byte_end":414273,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":414553,"byte_end":414571,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5621}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":415683,"byte_end":415701,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5630}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418272,"byte_end":418278,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5686}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418518,"byte_end":418524,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5692}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418804,"byte_end":418810,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5698},{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420358,"byte_end":420370,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420475,"byte_end":420487,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420518,"byte_end":420530,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420653,"byte_end":420665,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5771}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420846,"byte_end":420858,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5774},{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423440,"byte_end":423454,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423480,"byte_end":423494,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":425060,"byte_end":425074,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5793}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":425167,"byte_end":425181,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":426343,"byte_end":426357,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":426523,"byte_end":426537,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5804}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":426817,"byte_end":426831,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5809}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":427001,"byte_end":427015,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/abort.rs","byte_start":454797,"byte_end":454808,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5917}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":456167,"byte_end":456175,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":457249,"byte_end":457257,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":457294,"byte_end":457304,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458156,"byte_end":458166,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458214,"byte_end":458221,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458484,"byte_end":458491,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458532,"byte_end":458542,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459411,"byte_end":459421,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459469,"byte_end":459473,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459732,"byte_end":459736,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459905,"byte_end":459915,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459960,"byte_end":459970,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460016,"byte_end":460026,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460071,"byte_end":460081,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460135,"byte_end":460143,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460192,"byte_end":460200,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":461685,"byte_end":461689,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":461724,"byte_end":461728,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":461760,"byte_end":461764,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6057}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":462841,"byte_end":462845,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6060},{"krate":0,"index":6061}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":463845,"byte_end":463849,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6064}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":465299,"byte_end":465314,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":467970,"byte_end":467985,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430805,"byte_end":430821,"line_start":88,"line_end":88,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430862,"byte_end":430878,"line_start":89,"line_end":89,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430907,"byte_end":430923,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430948,"byte_end":430964,"line_start":92,"line_end":92,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6147}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":431149,"byte_end":431165,"line_start":99,"line_end":99,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":432872,"byte_end":432888,"line_start":131,"line_end":131,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6152}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":432962,"byte_end":432978,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6163},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6167}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444509,"byte_end":444525,"line_start":410,"line_end":410,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":448947,"byte_end":448951,"line_start":508,"line_end":508,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6179}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451206,"byte_end":451222,"line_start":565,"line_end":565,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6183}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451360,"byte_end":451376,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6186},{"krate":0,"index":6187}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451947,"byte_end":451963,"line_start":591,"line_end":591,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6190}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453613,"byte_end":453629,"line_start":632,"line_end":632,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":454099,"byte_end":454115,"line_start":646,"line_end":646,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6210}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":454391,"byte_end":454407,"line_start":659,"line_end":659,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6215}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":454529,"byte_end":454545,"line_start":665,"line_end":665,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6218}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469580,"byte_end":469589,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6275}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469734,"byte_end":469743,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":471216,"byte_end":471225,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":471324,"byte_end":471333,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6290},{"krate":0,"index":6291}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472117,"byte_end":472126,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":473144,"byte_end":473153,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6299}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":473298,"byte_end":473307,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6303}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":473490,"byte_end":473499,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474582,"byte_end":474586,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6325},{"krate":0,"index":6326},{"krate":0,"index":6327}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475019,"byte_end":475023,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475078,"byte_end":475085,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6335}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475522,"byte_end":475529,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475580,"byte_end":475588,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":476016,"byte_end":476024,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478272,"byte_end":478274,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478329,"byte_end":478331,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512470,"byte_end":512480,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512918,"byte_end":512928,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6598}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513439,"byte_end":513449,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513994,"byte_end":514004,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":514796,"byte_end":514806,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617},{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":515405,"byte_end":515415,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":515919,"byte_end":515929,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6625}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":516073,"byte_end":516083,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":516345,"byte_end":516355,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6631},{"krate":0,"index":6632}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":516571,"byte_end":516581,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518388,"byte_end":518397,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":14983},{"krate":0,"index":14984},{"krate":0,"index":14985},{"krate":0,"index":14986},{"krate":0,"index":6700},{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519540,"byte_end":519549,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6705}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":521110,"byte_end":521119,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6710},{"krate":0,"index":6711}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":522521,"byte_end":522530,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6715},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":523360,"byte_end":523369,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":14987},{"krate":0,"index":14988},{"krate":0,"index":14989},{"krate":0,"index":14990}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":523447,"byte_end":523456,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6721}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":523772,"byte_end":523781,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6724}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":526701,"byte_end":526713,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6727},{"krate":0,"index":6728}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":528795,"byte_end":528804,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":15042},{"krate":0,"index":15043},{"krate":0,"index":15044},{"krate":0,"index":15045},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800},{"krate":0,"index":6801}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":532403,"byte_end":532412,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6807},{"krate":0,"index":6808}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":533835,"byte_end":533844,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":15046},{"krate":0,"index":15047}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":533925,"byte_end":533934,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":15048},{"krate":0,"index":15049}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":534015,"byte_end":534024,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6815}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":534383,"byte_end":534392,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6818}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535446,"byte_end":535456,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6857}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536658,"byte_end":536668,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6860},{"krate":0,"index":6861},{"krate":0,"index":6868},{"krate":0,"index":6869}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540528,"byte_end":540533,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541789,"byte_end":541794,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6917}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":542124,"byte_end":542129,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6921},{"krate":0,"index":6922}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":543198,"byte_end":543203,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544314,"byte_end":544319,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544372,"byte_end":544377,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6957}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544519,"byte_end":544524,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6960},{"krate":0,"index":6961}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":546294,"byte_end":546298,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7008},{"krate":0,"index":7009}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":548021,"byte_end":548028,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7053},{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549861,"byte_end":549867,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7105}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":553067,"byte_end":553073,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7108}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":553360,"byte_end":553366,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7111},{"krate":0,"index":7112}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":553998,"byte_end":554004,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7115},{"krate":0,"index":7116}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555208,"byte_end":555214,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15271},{"krate":0,"index":15272},{"krate":0,"index":15273},{"krate":0,"index":15274}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555289,"byte_end":555295,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15275},{"krate":0,"index":15276},{"krate":0,"index":15277},{"krate":0,"index":15278}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555373,"byte_end":555379,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15279},{"krate":0,"index":15280},{"krate":0,"index":15281},{"krate":0,"index":15282}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555452,"byte_end":555458,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15283},{"krate":0,"index":15284},{"krate":0,"index":15285},{"krate":0,"index":15286}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556375,"byte_end":556380,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7153}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556589,"byte_end":556594,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7155},{"krate":0,"index":7156}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556826,"byte_end":556831,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7158}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557329,"byte_end":557336,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557391,"byte_end":557398,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7191}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557529,"byte_end":557536,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7195},{"krate":0,"index":7196}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559106,"byte_end":559111,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559164,"byte_end":559169,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7225}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559282,"byte_end":559287,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7228},{"krate":0,"index":7229}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":560090,"byte_end":560095,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7267}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":560258,"byte_end":560263,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7270},{"krate":0,"index":7271}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561258,"byte_end":561262,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561314,"byte_end":561318,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7300}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561483,"byte_end":561487,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7303},{"krate":0,"index":7304}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562175,"byte_end":562187,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562239,"byte_end":562251,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7337}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562430,"byte_end":562442,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7340},{"krate":0,"index":7341}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563137,"byte_end":563146,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563198,"byte_end":563207,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7376}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563372,"byte_end":563381,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7380}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564524,"byte_end":564532,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564587,"byte_end":564595,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7421}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":565564,"byte_end":565572,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7427},{"krate":0,"index":7428}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566327,"byte_end":566336,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566388,"byte_end":566397,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7463}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566642,"byte_end":566647,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":568482,"byte_end":568491,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7474},{"krate":0,"index":7475}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569364,"byte_end":569376,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569428,"byte_end":569440,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7520}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":570369,"byte_end":570381,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7526},{"krate":0,"index":7527}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":571201,"byte_end":571210,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":571265,"byte_end":571274,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7562}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":572246,"byte_end":572255,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7567},{"krate":0,"index":7568}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573413,"byte_end":573419,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7603},{"krate":0,"index":7604}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":574060,"byte_end":574066,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7606}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574580,"byte_end":574584,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574636,"byte_end":574640,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7643}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574797,"byte_end":574801,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7646},{"krate":0,"index":7647}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575930,"byte_end":575934,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7679},{"krate":0,"index":7680},{"krate":0,"index":7682},{"krate":0,"index":7683}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":576652,"byte_end":576656,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7685}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577673,"byte_end":577681,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7738}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578181,"byte_end":578190,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7742}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578582,"byte_end":578590,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7745},{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":579093,"byte_end":579102,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7751},{"krate":0,"index":7753},{"krate":0,"index":7755},{"krate":0,"index":7757}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580117,"byte_end":580129,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7766}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580293,"byte_end":580305,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7769}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580539,"byte_end":580551,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581024,"byte_end":581028,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817},{"krate":0,"index":15482},{"krate":0,"index":15483},{"krate":0,"index":15484},{"krate":0,"index":15485}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582945,"byte_end":582949,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7820}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":583459,"byte_end":583463,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7823},{"krate":0,"index":7824}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585306,"byte_end":585312,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7841},{"krate":0,"index":7842},{"krate":0,"index":7843},{"krate":0,"index":7844},{"krate":0,"index":7845},{"krate":0,"index":7846},{"krate":0,"index":7847}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":587382,"byte_end":587388,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7851}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":587535,"byte_end":587541,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7854}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":588062,"byte_end":588067,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":588120,"byte_end":588125,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7883}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":588287,"byte_end":588292,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7886},{"krate":0,"index":7887}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":588976,"byte_end":588989,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":589042,"byte_end":589055,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":589228,"byte_end":589241,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7924}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589933,"byte_end":589941,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589994,"byte_end":590002,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":590164,"byte_end":590172,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7962},{"krate":0,"index":7963}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496401,"byte_end":496402,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":502857,"byte_end":502858,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503745,"byte_end":503746,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":511225,"byte_end":511226,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592500,"byte_end":592505,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8101}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592838,"byte_end":592843,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8104}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592936,"byte_end":592941,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8107}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593074,"byte_end":593080,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8115},{"krate":0,"index":8116}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593526,"byte_end":593531,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8121},{"krate":0,"index":8122}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594102,"byte_end":594107,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8125},{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8128},{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597222,"byte_end":597237,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8138}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597668,"byte_end":597683,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8141}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597800,"byte_end":597815,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8145},{"krate":0,"index":8146}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599044,"byte_end":599059,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8149}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599661,"byte_end":599671,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8157}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600683,"byte_end":600693,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8162}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600899,"byte_end":600909,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8165}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601007,"byte_end":601017,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8168},{"krate":0,"index":8169}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601158,"byte_end":601168,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8172}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601619,"byte_end":601635,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8184}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602765,"byte_end":602781,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8190}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603046,"byte_end":603062,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8194}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603174,"byte_end":603190,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8198},{"krate":0,"index":8199}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603333,"byte_end":603349,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8203}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603626,"byte_end":603631,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603677,"byte_end":603682,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603849,"byte_end":603864,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603968,"byte_end":603983,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604187,"byte_end":604197,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604247,"byte_end":604257,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604325,"byte_end":604341,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604412,"byte_end":604428,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":606432,"byte_end":606437,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":606474,"byte_end":606479,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":606495,"byte_end":606501,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8280},{"krate":0,"index":8281},{"krate":0,"index":8283},{"krate":0,"index":8284}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612121,"byte_end":612126,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8287}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612248,"byte_end":612253,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8290}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612581,"byte_end":612593,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8298}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612757,"byte_end":612769,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8301}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612990,"byte_end":613002,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":613384,"byte_end":613395,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8306},{"krate":0,"index":8307}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":613558,"byte_end":613569,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8310}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":613707,"byte_end":613718,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8313}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":614070,"byte_end":614081,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8316}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615394,"byte_end":615403,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8358},{"krate":0,"index":8359}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617676,"byte_end":617687,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8361}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618470,"byte_end":618477,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8363}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618660,"byte_end":618667,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618680,"byte_end":618689,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8367}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":619678,"byte_end":619687,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8372},{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":619926,"byte_end":619935,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8377},{"krate":0,"index":8378}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620194,"byte_end":620205,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":620877,"byte_end":620878,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8401},{"krate":0,"index":8402}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621113,"byte_end":621114,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8410}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621384,"byte_end":621385,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8418}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622401,"byte_end":622405,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8426}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622499,"byte_end":622503,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8430},{"krate":0,"index":8431}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622762,"byte_end":622769,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8436},{"krate":0,"index":8437}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622992,"byte_end":622999,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8442}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623190,"byte_end":623197,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8447}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623502,"byte_end":623515,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8453},{"krate":0,"index":8454}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623932,"byte_end":623941,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8459},{"krate":0,"index":8460}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624225,"byte_end":624234,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8465}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624496,"byte_end":624505,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8470}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624827,"byte_end":624834,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8477},{"krate":0,"index":8478}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625053,"byte_end":625060,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8484}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625238,"byte_end":625245,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8490}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625546,"byte_end":625554,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8498},{"krate":0,"index":8499}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625777,"byte_end":625785,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8505}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625967,"byte_end":625975,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8511}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626285,"byte_end":626296,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8520},{"krate":0,"index":8521}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626556,"byte_end":626567,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8527}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626804,"byte_end":626815,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8533}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627182,"byte_end":627194,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8541},{"krate":0,"index":8542}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627455,"byte_end":627467,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8548}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627705,"byte_end":627717,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8554}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628336,"byte_end":628350,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8567},{"krate":0,"index":8568}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628573,"byte_end":628587,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8574}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628788,"byte_end":628802,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8580}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":629108,"byte_end":629114,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8590}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":629207,"byte_end":629213,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":629818,"byte_end":629829,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8606},{"krate":0,"index":8607}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1845}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150002,"byte_end":150019,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":5817}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150218,"byte_end":150228,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6223}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6400}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6499}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6501}},{"kind":"Mod","span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8039}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":8612},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8612},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8612},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8612},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8660},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8660},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8695},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8695},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":9248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":9248},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":337},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53099,"byte_end":53104,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":54811,"byte_end":54817,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":54976,"byte_end":54982,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55410,"byte_end":55418,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":345},"to":{"krate":21,"index":94}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55777,"byte_end":55787,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12186},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78213,"byte_end":78223,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78374,"byte_end":78384,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9284},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":78507,"byte_end":78517,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9284},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79226,"byte_end":79236,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79366,"byte_end":79376,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":9319},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":79619,"byte_end":79629,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":9319},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":80582,"byte_end":80592,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9319},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":80835,"byte_end":80845,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9319},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84169,"byte_end":84182,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84312,"byte_end":84325,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9366},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":84568,"byte_end":84581,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9366},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60759,"byte_end":60762,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":714},"to":{"krate":0,"index":715}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60845,"byte_end":60854,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":44},"to":{"krate":0,"index":715}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":85890,"byte_end":85894,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10229},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86490,"byte_end":86494,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":10229},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":86638,"byte_end":86642,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":10229},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87245,"byte_end":87252,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":10235},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87813,"byte_end":87820,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10235},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87965,"byte_end":87972,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10235},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":87998,"byte_end":88005,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10235},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":88759,"byte_end":88768,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10241},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":89371,"byte_end":89380,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":90478,"byte_end":90487,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10241},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":90688,"byte_end":90697,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10241},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92017,"byte_end":92029,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10254},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":92255,"byte_end":92267,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":93380,"byte_end":93392,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10254},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":93596,"byte_end":93608,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10254},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95258,"byte_end":95270,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95368,"byte_end":95380,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95694,"byte_end":95706,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10272},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":95893,"byte_end":95905,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":96343,"byte_end":96349,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":97043,"byte_end":97049,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":97191,"byte_end":97197,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":97925,"byte_end":97938,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10311},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":98504,"byte_end":98517,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10311},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":99537,"byte_end":99550,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10311},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101722,"byte_end":101727,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101906,"byte_end":101911,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10345},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":101943,"byte_end":101948,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10345},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":102045,"byte_end":102050,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10345},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":110037,"byte_end":110044,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":112805,"byte_end":112812,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":113800,"byte_end":113807,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":114303,"byte_end":114309,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10699},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":116745,"byte_end":116751,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10699},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":117455,"byte_end":117461,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10699},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":118024,"byte_end":118033,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10707},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119040,"byte_end":119049,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119232,"byte_end":119241,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10707},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":119911,"byte_end":119920,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10707},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":128528,"byte_end":128538,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":130368,"byte_end":130378,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":131526,"byte_end":131536,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":132018,"byte_end":132027,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":11035},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":133866,"byte_end":133875,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":11035},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":135237,"byte_end":135245,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11043},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":136323,"byte_end":136331,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11043},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":137762,"byte_end":137770,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11043},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":138749,"byte_end":138755,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139094,"byte_end":139100,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139485,"byte_end":139491,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":139872,"byte_end":139878,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":140119,"byte_end":140125,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11049},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":140464,"byte_end":140470,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11049},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":140746,"byte_end":140752,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11049},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":141287,"byte_end":141293,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11049},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142965,"byte_end":142971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11049},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143772,"byte_end":143778,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11049},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145085,"byte_end":145091,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11049},"to":{"krate":24,"index":47}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145521,"byte_end":145527,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11049},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":204889,"byte_end":204894,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":205120,"byte_end":205125,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11073},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":205334,"byte_end":205339,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11073},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":206935,"byte_end":206942,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":207207,"byte_end":207214,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11122},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":207392,"byte_end":207399,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11122},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":208425,"byte_end":208430,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":208824,"byte_end":208829,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11173},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":209079,"byte_end":209084,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11173},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":210209,"byte_end":210215,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":210435,"byte_end":210441,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11231},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":211149,"byte_end":211155,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11231},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":211881,"byte_end":211886,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11266},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":212107,"byte_end":212112,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":212244,"byte_end":212249,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11266},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":212367,"byte_end":212372,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11266},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":213178,"byte_end":213183,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":213339,"byte_end":213344,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11308},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":214093,"byte_end":214098,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11308},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":214846,"byte_end":214855,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":215041,"byte_end":215050,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11348},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":215168,"byte_end":215177,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11348},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":216618,"byte_end":216624,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11387},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":217097,"byte_end":217103,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":217426,"byte_end":217432,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11387},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":217769,"byte_end":217775,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11387},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":219947,"byte_end":219956,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11452},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":220253,"byte_end":220262,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":220529,"byte_end":220538,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11452},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":220805,"byte_end":220814,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11452},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":222916,"byte_end":222923,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":223092,"byte_end":223099,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11520},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":223291,"byte_end":223298,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11520},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":224812,"byte_end":224816,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11621},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":225172,"byte_end":225176,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":225437,"byte_end":225441,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11621},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":225676,"byte_end":225680,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11621},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227269,"byte_end":227272,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11690},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227602,"byte_end":227605,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":227858,"byte_end":227861,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11690},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":228090,"byte_end":228093,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11690},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":229845,"byte_end":229848,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11751},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":230178,"byte_end":230181,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":230433,"byte_end":230436,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11751},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":230665,"byte_end":230668,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11751},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232422,"byte_end":232429,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11812},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232722,"byte_end":232729,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":232960,"byte_end":232967,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11812},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":233206,"byte_end":233213,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11812},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234314,"byte_end":234318,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":11874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234815,"byte_end":234819,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":11874},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":234917,"byte_end":234921,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11874},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":236123,"byte_end":236135,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":11913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238625,"byte_end":238637,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":11913},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":238757,"byte_end":238769,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":11913},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":239654,"byte_end":239657,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":11988},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":239846,"byte_end":239849,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":11988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":240018,"byte_end":240021,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":11988},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":240189,"byte_end":240192,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":11988},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241304,"byte_end":241308,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":12120},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241359,"byte_end":241363,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":12120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241514,"byte_end":241518,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":12120},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":241657,"byte_end":241661,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":12120},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242312,"byte_end":242326,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":12128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242477,"byte_end":242491,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":12128},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":242635,"byte_end":242649,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":12128},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":243960,"byte_end":243968,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":12141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249465,"byte_end":249473,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":12141},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":249615,"byte_end":249623,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":12141},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250782,"byte_end":250786,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12180},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251031,"byte_end":251035,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12180},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251146,"byte_end":251150,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12180},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251847,"byte_end":251854,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12221},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252102,"byte_end":252109,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12221},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252220,"byte_end":252227,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12221},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252947,"byte_end":252953,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12262},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253305,"byte_end":253311,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12262},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253580,"byte_end":253586,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12262},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254847,"byte_end":254855,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12311},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255175,"byte_end":255183,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12311},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255367,"byte_end":255375,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12311},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255746,"byte_end":255756,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2956},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256421,"byte_end":256425,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256616,"byte_end":256620,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12365},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":256738,"byte_end":256742,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12365},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":258339,"byte_end":258348,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12404},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":258800,"byte_end":258809,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":259135,"byte_end":259144,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12404},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":259392,"byte_end":259401,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12404},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":261701,"byte_end":261705,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":261878,"byte_end":261882,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12478},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":262854,"byte_end":262858,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12478},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":263881,"byte_end":263890,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12517},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":264338,"byte_end":264347,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":264666,"byte_end":264675,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12517},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":266194,"byte_end":266203,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12517},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":267587,"byte_end":267596,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12586},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":267884,"byte_end":267893,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":270010,"byte_end":270019,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12586},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":271051,"byte_end":271060,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12586},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272002,"byte_end":272006,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12643},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272257,"byte_end":272261,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272507,"byte_end":272511,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12643},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":272737,"byte_end":272741,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12643},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":274623,"byte_end":274626,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":276212,"byte_end":276215,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12711},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":276410,"byte_end":276413,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12711},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":279108,"byte_end":279114,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":279622,"byte_end":279628,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12766},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":281244,"byte_end":281250,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12766},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":282222,"byte_end":282233,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":282585,"byte_end":282596,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12814},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":284765,"byte_end":284776,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12814},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":285774,"byte_end":285778,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":12857},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":286264,"byte_end":286268,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":12857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":286432,"byte_end":286436,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":12857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":286798,"byte_end":286802,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12857},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":288029,"byte_end":288033,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12857},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289214,"byte_end":289229,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12926},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289561,"byte_end":289576,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":12926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":289963,"byte_end":289978,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":12926},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":291432,"byte_end":291447,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":12926},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":292557,"byte_end":292565,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":12971},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":292912,"byte_end":292920,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":12971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":293200,"byte_end":293208,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":12971},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":295545,"byte_end":295562,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":13016},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":295908,"byte_end":295925,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":13016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":296358,"byte_end":296375,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":13016},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":296605,"byte_end":296622,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":13016},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":298982,"byte_end":298993,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":13082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":299185,"byte_end":299196,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":13082},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":300048,"byte_end":300059,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":13082},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157799,"byte_end":157800,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3717},"to":{"krate":0,"index":3718}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157943,"byte_end":157949,"line_start":230,"line_end":230,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":19,"index":96},"to":{"krate":0,"index":3718}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339176,"byte_end":339183,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":13121},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339476,"byte_end":339483,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":339764,"byte_end":339771,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13121},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":340914,"byte_end":340921,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":13121},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":341839,"byte_end":341849,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":13394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":342042,"byte_end":342052,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":13394},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":342173,"byte_end":342183,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":13394},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343282,"byte_end":343288,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":13567},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343580,"byte_end":343586,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":13567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":343864,"byte_end":343870,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":13567},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":345147,"byte_end":345153,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":13567},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346057,"byte_end":346064,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":13628},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346118,"byte_end":346125,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":13628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346288,"byte_end":346295,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":13628},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":346437,"byte_end":346444,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13628},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347220,"byte_end":347230,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":13636},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347526,"byte_end":347536,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":13636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":347781,"byte_end":347791,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":13636},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":349190,"byte_end":349199,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":13693},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":349595,"byte_end":349604,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":13693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":349847,"byte_end":349856,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":13693},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":350113,"byte_end":350122,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":13693},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352263,"byte_end":352275,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":13758},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352575,"byte_end":352587,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":13758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":352784,"byte_end":352796,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":13758},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":353074,"byte_end":353086,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":13758},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355270,"byte_end":355280,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":13824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355545,"byte_end":355555,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":13824},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":355801,"byte_end":355811,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13824},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357420,"byte_end":357430,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357570,"byte_end":357580,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13870},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":357768,"byte_end":357778,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":13870},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":358776,"byte_end":358785,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":13917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":359004,"byte_end":359013,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":13917},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":360397,"byte_end":360406,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":13957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":360901,"byte_end":360910,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":13957},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":362858,"byte_end":362867,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":13957},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363526,"byte_end":363540,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14000},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363685,"byte_end":363699,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14000},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":363886,"byte_end":363900,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14000},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":364510,"byte_end":364517,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14021},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":364876,"byte_end":364883,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":14021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":365163,"byte_end":365170,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":14021},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":365424,"byte_end":365431,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":14021},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":369294,"byte_end":369303,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":14090},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":369565,"byte_end":369574,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":14090},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":371320,"byte_end":371332,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":14147},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":371788,"byte_end":371800,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":14147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":372140,"byte_end":372152,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":14147},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":373651,"byte_end":373663,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":14147},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":374891,"byte_end":374903,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":14216},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":375355,"byte_end":375367,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":14216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":375705,"byte_end":375717,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":14216},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":377324,"byte_end":377336,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":14216},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":378624,"byte_end":378642,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":14290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":378981,"byte_end":378999,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":14290},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":381205,"byte_end":381216,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":14338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":381553,"byte_end":381564,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":14338},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":383722,"byte_end":383742,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":14381},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":384107,"byte_end":384127,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":14381},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":384366,"byte_end":384386,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":14381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":384834,"byte_end":384854,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":14381},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":387955,"byte_end":387968,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":14442},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":388184,"byte_end":388197,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":14442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":388409,"byte_end":388422,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":14442},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":390043,"byte_end":390056,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":14442},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":390663,"byte_end":390676,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":14442},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305459,"byte_end":305460,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5019},"to":{"krate":0,"index":5020}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":305541,"byte_end":305550,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":127},"to":{"krate":0,"index":5020}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":392712,"byte_end":392716,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":14461},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":393338,"byte_end":393342,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":14461},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394533,"byte_end":394539,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14470},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394566,"byte_end":394572,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14470},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":394880,"byte_end":394886,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14470},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395483,"byte_end":395493,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14479},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395537,"byte_end":395547,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14479},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":395861,"byte_end":395871,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14479},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398391,"byte_end":398396,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14488},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398428,"byte_end":398433,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14488},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398518,"byte_end":398523,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14488},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":398772,"byte_end":398777,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14488},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399716,"byte_end":399720,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":399849,"byte_end":399853,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14499},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":400458,"byte_end":400462,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14499},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401121,"byte_end":401128,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":14530},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401160,"byte_end":401167,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":14530},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401252,"byte_end":401259,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":14530},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":401504,"byte_end":401511,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14530},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401898,"byte_end":401904,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5437},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":401935,"byte_end":401941,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5437},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":402706,"byte_end":402712,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5437},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":403408,"byte_end":403421,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14541},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":404334,"byte_end":404347,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14541},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":407234,"byte_end":407240,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":14582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408544,"byte_end":408550,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14582},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":408729,"byte_end":408735,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14582},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409448,"byte_end":409456,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":409753,"byte_end":409761,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14620},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":412788,"byte_end":412806,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":414255,"byte_end":414273,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14639},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":414553,"byte_end":414571,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14639},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":415683,"byte_end":415701,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14639},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418272,"byte_end":418278,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":14708},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418518,"byte_end":418524,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":14708},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":418804,"byte_end":418810,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":14708},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420358,"byte_end":420370,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14766},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420475,"byte_end":420487,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":14766},"to":{"krate":2,"index":2536}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420518,"byte_end":420530,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":14766},"to":{"krate":2,"index":2578}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420653,"byte_end":420665,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":14766},"to":{"krate":2,"index":2567}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":420846,"byte_end":420858,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":14766},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423440,"byte_end":423454,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5777},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":423480,"byte_end":423494,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":425060,"byte_end":425074,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5777},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":425167,"byte_end":425181,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5777},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":426343,"byte_end":426357,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5777},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":426523,"byte_end":426537,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5777},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":426817,"byte_end":426831,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5777},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":427001,"byte_end":427015,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5777},"to":{"krate":2,"index":7229}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/abort.rs","byte_start":454797,"byte_end":454808,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5914},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":456167,"byte_end":456175,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":14840},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":457249,"byte_end":457257,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":14840},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":457294,"byte_end":457304,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":14801},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458156,"byte_end":458166,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":14801},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458214,"byte_end":458221,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":14811},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458484,"byte_end":458491,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":14811},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":458532,"byte_end":458542,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":14820},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459411,"byte_end":459421,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":14820},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459469,"byte_end":459473,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":14831},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459732,"byte_end":459736,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":14831},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459905,"byte_end":459915,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14820},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":459960,"byte_end":459970,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14820},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460016,"byte_end":460026,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":14801},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460071,"byte_end":460081,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":14801},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460135,"byte_end":460143,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":14840},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":460192,"byte_end":460200,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":14840},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":461685,"byte_end":461689,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":461724,"byte_end":461728,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":461760,"byte_end":461764,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6042},"to":{"krate":21,"index":94}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":462841,"byte_end":462845,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":463845,"byte_end":463849,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6042},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":465299,"byte_end":465314,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":467970,"byte_end":467985,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6112},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430805,"byte_end":430821,"line_start":88,"line_end":88,"column_start":33,"column_end":49},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430862,"byte_end":430878,"line_start":89,"line_end":89,"column_start":33,"column_end":49},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430907,"byte_end":430923,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":430948,"byte_end":430964,"line_start":92,"line_end":92,"column_start":16,"column_end":32},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6135},"to":{"krate":21,"index":15}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":431149,"byte_end":431165,"line_start":99,"line_end":99,"column_start":21,"column_end":37},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6135},"to":{"krate":21,"index":18}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":432872,"byte_end":432888,"line_start":131,"line_end":131,"column_start":23,"column_end":39},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":432962,"byte_end":432978,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444509,"byte_end":444525,"line_start":410,"line_end":410,"column_start":30,"column_end":46},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6135},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":448947,"byte_end":448951,"line_start":508,"line_end":508,"column_start":32,"column_end":36},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6172},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451206,"byte_end":451222,"line_start":565,"line_end":565,"column_start":21,"column_end":37},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451360,"byte_end":451376,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":451947,"byte_end":451963,"line_start":591,"line_end":591,"column_start":20,"column_end":36},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453613,"byte_end":453629,"line_start":632,"line_end":632,"column_start":35,"column_end":51},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":454099,"byte_end":454115,"line_start":646,"line_end":646,"column_start":33,"column_end":49},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":454391,"byte_end":454407,"line_start":659,"line_end":659,"column_start":35,"column_end":51},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6135},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":454529,"byte_end":454545,"line_start":665,"line_end":665,"column_start":27,"column_end":43},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":7229}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469580,"byte_end":469589,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":469734,"byte_end":469743,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":14847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":471216,"byte_end":471225,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":471324,"byte_end":471333,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":14847},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":472117,"byte_end":472126,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":14847},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":473144,"byte_end":473153,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":7216}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":473298,"byte_end":473307,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":7229}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":473490,"byte_end":473499,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":7220}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":474582,"byte_end":474586,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":14880},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475019,"byte_end":475023,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":14880},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475078,"byte_end":475085,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":14889},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475522,"byte_end":475529,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":14889},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":475580,"byte_end":475588,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":14898},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":476016,"byte_end":476024,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":14898},"to":{"krate":2,"index":7272}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478272,"byte_end":478274,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6483},"to":{"krate":0,"index":6486}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478329,"byte_end":478331,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6485},"to":{"krate":0,"index":6489}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":478410,"byte_end":478415,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":21,"index":15},"to":{"krate":0,"index":6486}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":481179,"byte_end":481189,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":18},"to":{"krate":0,"index":6489}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512470,"byte_end":512480,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":14905},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":512918,"byte_end":512928,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":14905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513439,"byte_end":513449,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":14905},"to":{"krate":1,"index":4375}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":513994,"byte_end":514004,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":14905},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":514796,"byte_end":514806,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":14905},"to":{"krate":1,"index":4314}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":515405,"byte_end":515415,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":14905},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":515919,"byte_end":515929,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":14905},"to":{"krate":1,"index":4393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":516073,"byte_end":516083,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":14905},"to":{"krate":24,"index":47}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":516345,"byte_end":516355,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":14905},"to":{"krate":1,"index":4400}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":516571,"byte_end":516581,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":14905},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":518388,"byte_end":518397,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":14938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":519540,"byte_end":519549,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":14938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":521110,"byte_end":521119,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":14938},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":522521,"byte_end":522530,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":14938},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":523360,"byte_end":523369,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":14938},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":523447,"byte_end":523456,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":14938},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":523772,"byte_end":523781,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":14938},"to":{"krate":24,"index":47}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":526701,"byte_end":526713,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":14991},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":528795,"byte_end":528804,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":15001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":532403,"byte_end":532412,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":15001},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":533835,"byte_end":533844,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":15001},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":533925,"byte_end":533934,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":15001},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":534015,"byte_end":534024,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":15001},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":534383,"byte_end":534392,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":15001},"to":{"krate":24,"index":47}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":535446,"byte_end":535456,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":15055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":536658,"byte_end":536668,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":15055},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":540528,"byte_end":540533,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":15086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":541789,"byte_end":541794,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":15086},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":542124,"byte_end":542129,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":15086},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":543198,"byte_end":543203,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":15086},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544314,"byte_end":544319,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":15135},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544372,"byte_end":544377,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":15135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":544519,"byte_end":544524,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":15135},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":546294,"byte_end":546298,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":15152},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":548021,"byte_end":548028,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":15206},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":549861,"byte_end":549867,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":15259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":553067,"byte_end":553073,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":47}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":553360,"byte_end":553366,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":553998,"byte_end":554004,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555208,"byte_end":555214,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555289,"byte_end":555295,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555373,"byte_end":555379,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":555452,"byte_end":555458,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15259},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556375,"byte_end":556380,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7149},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556589,"byte_end":556594,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7149},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":556826,"byte_end":556831,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":7149},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557329,"byte_end":557336,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15287},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557391,"byte_end":557398,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":557529,"byte_end":557536,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15287},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559106,"byte_end":559111,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15295},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559164,"byte_end":559169,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":559282,"byte_end":559287,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15295},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":560090,"byte_end":560095,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":560258,"byte_end":560263,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15308},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561258,"byte_end":561262,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15351},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561314,"byte_end":561318,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":561483,"byte_end":561487,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15351},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562175,"byte_end":562187,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":15360},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562239,"byte_end":562251,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":15360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":562430,"byte_end":562442,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":15360},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563137,"byte_end":563146,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":15369},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563198,"byte_end":563207,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":15369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":563372,"byte_end":563381,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":15369},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564524,"byte_end":564532,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":15378},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":564587,"byte_end":564595,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":565564,"byte_end":565572,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15378},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566327,"byte_end":566336,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15389},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566388,"byte_end":566397,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":566642,"byte_end":566647,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7464},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":568482,"byte_end":568491,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15389},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569364,"byte_end":569376,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15399},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":569428,"byte_end":569440,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":570369,"byte_end":570381,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15399},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":571201,"byte_end":571210,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15410},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":571265,"byte_end":571274,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":572246,"byte_end":572255,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15410},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":573413,"byte_end":573419,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7599},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":574060,"byte_end":574066,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7599},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574580,"byte_end":574584,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":15421},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574636,"byte_end":574640,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":15421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":574797,"byte_end":574801,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15421},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":575930,"byte_end":575934,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7675},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":576652,"byte_end":576656,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7675},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":577673,"byte_end":577681,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":15430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578181,"byte_end":578190,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":15436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":578582,"byte_end":578590,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15430},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":579093,"byte_end":579102,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15436},"to":{"krate":24,"index":42}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580117,"byte_end":580129,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580293,"byte_end":580305,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":580539,"byte_end":580551,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7759},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":581024,"byte_end":581028,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":15447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":582945,"byte_end":582949,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":15447},"to":{"krate":24,"index":39}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":583459,"byte_end":583463,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":15447},"to":{"krate":24,"index":49}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":585306,"byte_end":585312,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":15486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":587382,"byte_end":587388,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":15486},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":587535,"byte_end":587541,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":15486},"to":{"krate":2,"index":2780}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":588062,"byte_end":588067,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":15493},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":588120,"byte_end":588125,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":15493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":588287,"byte_end":588292,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":15493},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":588976,"byte_end":588989,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":15502},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":589042,"byte_end":589055,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":15502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":589228,"byte_end":589241,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":15502},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589933,"byte_end":589941,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":15511},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":589994,"byte_end":590002,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":15511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":590164,"byte_end":590172,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":15511},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":488144,"byte_end":488153,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":24,"index":39},"to":{"krate":0,"index":7967}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496401,"byte_end":496402,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7983},"to":{"krate":0,"index":7967}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":496505,"byte_end":496515,"line_start":398,"line_end":398,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":24,"index":42},"to":{"krate":0,"index":7984}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":502857,"byte_end":502858,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7994},"to":{"krate":0,"index":7984}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":502959,"byte_end":502968,"line_start":592,"line_end":592,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":24,"index":47},"to":{"krate":0,"index":7995}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503745,"byte_end":503746,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7999},"to":{"krate":0,"index":7995}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":503853,"byte_end":503865,"line_start":620,"line_end":620,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":24,"index":49},"to":{"krate":0,"index":8000}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":511225,"byte_end":511226,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8009},"to":{"krate":0,"index":8000}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592500,"byte_end":592505,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592838,"byte_end":592843,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":592936,"byte_end":592941,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593074,"byte_end":593080,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":8108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":593526,"byte_end":593531,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":594102,"byte_end":594107,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597222,"byte_end":597237,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597668,"byte_end":597683,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8131},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":597800,"byte_end":597815,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599044,"byte_end":599059,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":599661,"byte_end":599671,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600683,"byte_end":600693,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8150},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":600899,"byte_end":600909,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8150},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601007,"byte_end":601017,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8150},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601158,"byte_end":601168,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8150},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":601619,"byte_end":601635,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":602765,"byte_end":602781,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603046,"byte_end":603062,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603174,"byte_end":603190,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603333,"byte_end":603349,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603626,"byte_end":603631,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603677,"byte_end":603682,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8094},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603849,"byte_end":603864,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":603968,"byte_end":603983,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604187,"byte_end":604197,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8150},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604247,"byte_end":604257,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8150},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604325,"byte_end":604341,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":604412,"byte_end":604428,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":606432,"byte_end":606437,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":15526},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":606474,"byte_end":606479,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":15526},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":606495,"byte_end":606501,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":15520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612121,"byte_end":612126,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":15526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612248,"byte_end":612253,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":15526},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612581,"byte_end":612593,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8291},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612757,"byte_end":612769,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8291},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":612990,"byte_end":613002,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":8291},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":613384,"byte_end":613395,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":15533},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":613558,"byte_end":613569,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":15533},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":613707,"byte_end":613718,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":15533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":614070,"byte_end":614081,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":15533},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":615394,"byte_end":615403,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":15546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":617676,"byte_end":617687,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":15588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618470,"byte_end":618477,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":15599},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618660,"byte_end":618667,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":15599},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":618680,"byte_end":618689,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":15546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":619678,"byte_end":619687,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":15546},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":619926,"byte_end":619935,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":15546},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":620194,"byte_end":620205,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":15588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":620877,"byte_end":620878,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8398},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621017,"byte_end":621024,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8393},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621113,"byte_end":621114,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8407},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621300,"byte_end":621306,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8403},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":621384,"byte_end":621385,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":8415},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622401,"byte_end":622405,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8420},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622499,"byte_end":622503,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8420},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622762,"byte_end":622769,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":15630},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":622992,"byte_end":622999,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":15630},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623190,"byte_end":623197,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":15630},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623502,"byte_end":623515,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":15651},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":623932,"byte_end":623941,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":15667},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624225,"byte_end":624234,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":15667},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624496,"byte_end":624505,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":15667},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":624827,"byte_end":624834,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":15682},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625053,"byte_end":625060,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":15682},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625238,"byte_end":625245,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":15682},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625546,"byte_end":625554,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":15697},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625777,"byte_end":625785,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":15697},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":625967,"byte_end":625975,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":15697},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626285,"byte_end":626296,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":15712},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626556,"byte_end":626567,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":15712},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":626804,"byte_end":626815,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":15712},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627182,"byte_end":627194,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":15724},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627455,"byte_end":627467,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":15724},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":627705,"byte_end":627717,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":15724},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628336,"byte_end":628350,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":15736},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628573,"byte_end":628587,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":15736},"to":{"krate":0,"index":8403}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":628788,"byte_end":628802,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":15736},"to":{"krate":0,"index":8411}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":629108,"byte_end":629114,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":8584},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":629207,"byte_end":629213,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":8584},"to":{"krate":0,"index":8393}},{"span":{"file_name":"/home/anhminh/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":629818,"byte_end":629829,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":15773},"to":{"krate":4294967295,"index":4294967295}}]}